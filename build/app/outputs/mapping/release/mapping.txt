# compiler: R8
# compiler_version: 8.2.42
# min_api: 21
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.2"}
# pg_map_id: 15a5343
# pg_map_hash: SHA-256 15a53431e7225c81d9921c8ab83289266dc5457fde48a88b52dd2bace75369da
android.support.customtabs.ICustomTabsCallback -> a.b:
# {"id":"sourceFile","fileName":"ICustomTabsCallback.java"}
    java.lang.String DESCRIPTOR -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void onActivityResized(int,int,android.os.Bundle) -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void onNavigationEvent(int,android.os.Bundle) -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void onWarmupCompleted(android.os.Bundle) -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void onMessageChannelReady(android.os.Bundle) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void onPostMessage(java.lang.String,android.os.Bundle) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    android.os.Bundle extraCallbackWithResult(java.lang.String,android.os.Bundle) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroid/os/Bundle;"}
    void onUnminimized(android.os.Bundle) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void onMinimized(android.os.Bundle) -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void onRelationshipValidationResult(int,android.net.Uri,boolean,android.os.Bundle) -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void onActivityLayout(int,int,int,int,int,android.os.Bundle) -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void extraCallback(java.lang.String,android.os.Bundle) -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
android.support.customtabs.ICustomTabsCallback$Stub -> android.support.customtabs.ICustomTabsCallback$Stub:
# {"id":"sourceFile","fileName":"ICustomTabsCallback.java"}
    22:27:void android.support.customtabs.ICustomTabsCallback$Stub$Proxy.<init>(android.os.IBinder):0:0 -> asInterface
    22:27:android.support.customtabs.ICustomTabsCallback asInterface(android.os.IBinder):0 -> asInterface
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)La/b;"}
    137:148:void android.support.customtabs.ICustomTabsCallback$_Parcel.writeTypedObject(android.os.Parcel,android.os.Parcelable,int):0:0 -> onTransact
    137:148:void android.support.customtabs.ICustomTabsCallback$_Parcel.access$100(android.os.Parcel,android.os.Parcelable,int):0 -> onTransact
    137:148:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    149:234:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
android.support.customtabs.ICustomTabsCallback$Stub$Proxy -> a.a:
# {"id":"sourceFile","fileName":"ICustomTabsCallback.java"}
    android.os.IBinder mRemote -> l
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
android.support.customtabs.ICustomTabsService -> a.d:
# {"id":"sourceFile","fileName":"ICustomTabsService.java"}
    java.lang.String DESCRIPTOR -> b
    1:1:void <clinit>():0:0 -> <clinit>
    boolean updateVisuals(android.support.customtabs.ICustomTabsCallback,android.os.Bundle) -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Z"}
    boolean mayLaunchUrl(android.support.customtabs.ICustomTabsCallback,android.net.Uri,android.os.Bundle,java.util.List) -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Z"}
    int postMessage(android.support.customtabs.ICustomTabsCallback,java.lang.String,android.os.Bundle) -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"()I"}
    boolean newSession(android.support.customtabs.ICustomTabsCallback) -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Z"}
    boolean receiveFile(android.support.customtabs.ICustomTabsCallback,android.net.Uri,int,android.os.Bundle) -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Z"}
    boolean isEngagementSignalsApiAvailable(android.support.customtabs.ICustomTabsCallback,android.os.Bundle) -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Z"}
    android.os.Bundle extraCommand(java.lang.String,android.os.Bundle) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroid/os/Bundle;"}
    boolean validateRelationship(android.support.customtabs.ICustomTabsCallback,int,android.net.Uri,android.os.Bundle) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Z"}
    boolean requestPostMessageChannelWithExtras(android.support.customtabs.ICustomTabsCallback,android.net.Uri,android.os.Bundle) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Z"}
    boolean newSessionWithExtras(android.support.customtabs.ICustomTabsCallback,android.os.Bundle) -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Z"}
    boolean warmup(long) -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Z"}
    boolean requestPostMessageChannel(android.support.customtabs.ICustomTabsCallback,android.net.Uri) -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Z"}
    boolean setEngagementSignalsCallback(android.support.customtabs.ICustomTabsCallback,android.os.IBinder,android.os.Bundle) -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Z"}
android.support.customtabs.ICustomTabsService$Stub -> android.support.customtabs.ICustomTabsService$Stub:
# {"id":"sourceFile","fileName":"ICustomTabsService.java"}
    22:27:void android.support.customtabs.ICustomTabsService$Stub$Proxy.<init>(android.os.IBinder):0:0 -> asInterface
    22:27:android.support.customtabs.ICustomTabsService asInterface(android.os.IBinder):0 -> asInterface
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)La/d;"}
    278:289:void android.support.customtabs.ICustomTabsService$_Parcel.writeTypedObject(android.os.Parcel,android.os.Parcelable,int):0:0 -> onTransact
    278:289:void android.support.customtabs.ICustomTabsService$_Parcel.access$100(android.os.Parcel,android.os.Parcelable,int):0 -> onTransact
    278:289:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    290:348:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
android.support.customtabs.ICustomTabsService$Stub$Proxy -> a.c:
# {"id":"sourceFile","fileName":"ICustomTabsService.java"}
    android.os.IBinder mRemote -> l
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
android.support.customtabs.ICustomTabsService$_Parcel -> R8$$REMOVED$$CLASS$$0:
# {"id":"sourceFile","fileName":"ICustomTabsService.java"}
android.support.customtabs.IEngagementSignalsCallback -> a.f:
# {"id":"sourceFile","fileName":"IEngagementSignalsCallback.java"}
    java.lang.String DESCRIPTOR -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void onGreatestScrollPercentageIncreased(int,android.os.Bundle) -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void onSessionEnded(boolean,android.os.Bundle) -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void onVerticalScrollEvent(boolean,android.os.Bundle) -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
android.support.customtabs.IEngagementSignalsCallback$Stub -> android.support.customtabs.IEngagementSignalsCallback$Stub:
# {"id":"sourceFile","fileName":"IEngagementSignalsCallback.java"}
    22:27:void android.support.customtabs.IEngagementSignalsCallback$Stub$Proxy.<init>(android.os.IBinder):0:0 -> asInterface
    22:27:android.support.customtabs.IEngagementSignalsCallback asInterface(android.os.IBinder):0 -> asInterface
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)La/f;"}
    43:52:java.lang.Object android.support.customtabs.IEngagementSignalsCallback$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> onTransact
    43:52:java.lang.Object android.support.customtabs.IEngagementSignalsCallback$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> onTransact
    43:52:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    53:63:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
    64:73:java.lang.Object android.support.customtabs.IEngagementSignalsCallback$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> onTransact
    64:73:java.lang.Object android.support.customtabs.IEngagementSignalsCallback$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> onTransact
    64:73:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    74:84:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
    85:94:java.lang.Object android.support.customtabs.IEngagementSignalsCallback$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> onTransact
    85:94:java.lang.Object android.support.customtabs.IEngagementSignalsCallback$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> onTransact
    85:94:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    95:100:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
android.support.customtabs.IEngagementSignalsCallback$Stub$Proxy -> a.e:
# {"id":"sourceFile","fileName":"IEngagementSignalsCallback.java"}
    android.os.IBinder mRemote -> l
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
android.support.customtabs.IEngagementSignalsCallback$_Parcel -> R8$$REMOVED$$CLASS$$1:
# {"id":"sourceFile","fileName":"IEngagementSignalsCallback.java"}
android.support.customtabs.IPostMessageService -> a.h:
# {"id":"sourceFile","fileName":"IPostMessageService.java"}
    java.lang.String DESCRIPTOR -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void onMessageChannelReady(android.support.customtabs.ICustomTabsCallback,android.os.Bundle) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void onPostMessage(android.support.customtabs.ICustomTabsCallback,java.lang.String,android.os.Bundle) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
android.support.customtabs.IPostMessageService$Stub -> android.support.customtabs.IPostMessageService$Stub:
# {"id":"sourceFile","fileName":"IPostMessageService.java"}
    22:27:void android.support.customtabs.IPostMessageService$Stub$Proxy.<init>(android.os.IBinder):0:0 -> asInterface
    22:27:android.support.customtabs.IPostMessageService asInterface(android.os.IBinder):0 -> asInterface
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)La/h;"}
    47:56:java.lang.Object android.support.customtabs.IPostMessageService$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> onTransact
    47:56:java.lang.Object android.support.customtabs.IPostMessageService$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> onTransact
    47:56:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    57:74:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
    75:84:java.lang.Object android.support.customtabs.IPostMessageService$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> onTransact
    75:84:java.lang.Object android.support.customtabs.IPostMessageService$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> onTransact
    75:84:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    85:91:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
android.support.customtabs.IPostMessageService$Stub$Proxy -> a.g:
# {"id":"sourceFile","fileName":"IPostMessageService.java"}
    android.os.IBinder mRemote -> l
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
android.support.customtabs.IPostMessageService$_Parcel -> R8$$REMOVED$$CLASS$$2:
# {"id":"sourceFile","fileName":"IPostMessageService.java"}
android.support.customtabs.trusted.ITrustedWebActivityCallback -> b.b:
# {"id":"sourceFile","fileName":"ITrustedWebActivityCallback.java"}
    java.lang.String DESCRIPTOR -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void onExtraCallback(java.lang.String,android.os.Bundle) -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub -> android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub:
# {"id":"sourceFile","fileName":"ITrustedWebActivityCallback.java"}
    22:27:void android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub$Proxy.<init>(android.os.IBinder):0:0 -> asInterface
    22:27:android.support.customtabs.trusted.ITrustedWebActivityCallback asInterface(android.os.IBinder):0 -> asInterface
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)Lb/b;"}
    36:47:java.lang.Object android.support.customtabs.trusted.ITrustedWebActivityCallback$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> onTransact
    36:47:java.lang.Object android.support.customtabs.trusted.ITrustedWebActivityCallback$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> onTransact
    36:47:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    48:56:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub$Proxy -> b.a:
# {"id":"sourceFile","fileName":"ITrustedWebActivityCallback.java"}
    android.os.IBinder mRemote -> l
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
android.support.customtabs.trusted.ITrustedWebActivityCallback$_Parcel -> R8$$REMOVED$$CLASS$$3:
# {"id":"sourceFile","fileName":"ITrustedWebActivityCallback.java"}
android.support.customtabs.trusted.ITrustedWebActivityService -> b.d:
# {"id":"sourceFile","fileName":"ITrustedWebActivityService.java"}
    java.lang.String DESCRIPTOR -> f
    1:1:void <clinit>():0:0 -> <clinit>
    android.os.Bundle notifyNotificationWithChannel(android.os.Bundle) -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroid/os/Bundle;"}
    android.os.Bundle extraCommand(java.lang.String,android.os.Bundle,android.os.IBinder) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroid/os/Bundle;"}
    void cancelNotification(android.os.Bundle) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    android.os.Bundle getActiveNotifications() -> l
    int getSmallIconId() -> m
    android.os.Bundle areNotificationsEnabled(android.os.Bundle) -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroid/os/Bundle;"}
    android.os.Bundle getSmallIconBitmap() -> r
android.support.customtabs.trusted.ITrustedWebActivityService$Stub -> android.support.customtabs.trusted.ITrustedWebActivityService$Stub:
# {"id":"sourceFile","fileName":"ITrustedWebActivityService.java"}
    22:27:void android.support.customtabs.trusted.ITrustedWebActivityService$Stub$Proxy.<init>(android.os.IBinder):0:0 -> asInterface
    22:27:android.support.customtabs.trusted.ITrustedWebActivityService asInterface(android.os.IBinder):0 -> asInterface
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)Lb/d;"}
    37:46:java.lang.Object android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> onTransact
    37:46:java.lang.Object android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> onTransact
    37:46:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    47:69:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
    70:79:java.lang.Object android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> onTransact
    70:79:java.lang.Object android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> onTransact
    70:79:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    80:104:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
    105:114:java.lang.Object android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> onTransact
    105:114:java.lang.Object android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> onTransact
    105:114:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    115:125:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
    126:135:java.lang.Object android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> onTransact
    126:135:java.lang.Object android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> onTransact
    126:135:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    136:144:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
android.support.customtabs.trusted.ITrustedWebActivityService$Stub$Proxy -> b.c:
# {"id":"sourceFile","fileName":"ITrustedWebActivityService.java"}
    android.os.IBinder mRemote -> l
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel -> R8$$REMOVED$$CLASS$$4:
# {"id":"sourceFile","fileName":"ITrustedWebActivityService.java"}
android.support.v4.app.INotificationSideChannel -> c.b:
# {"id":"sourceFile","fileName":"INotificationSideChannel.java"}
    java.lang.String DESCRIPTOR -> g
    1:1:void <clinit>():0:0 -> <clinit>
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void cancel(java.lang.String,int,java.lang.String) -> cancel
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void cancelAll(java.lang.String) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
# {"id":"sourceFile","fileName":"INotificationSideChannel.java"}
    22:27:void android.support.v4.app.INotificationSideChannel$Stub$Proxy.<init>(android.os.IBinder):0:0 -> asInterface
    22:27:android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder):0 -> asInterface
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)Lc/b;"}
    67:78:java.lang.Object android.support.v4.app.INotificationSideChannel$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> onTransact
    67:78:java.lang.Object android.support.v4.app.INotificationSideChannel$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> onTransact
    67:78:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    79:84:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> c.a:
# {"id":"sourceFile","fileName":"INotificationSideChannel.java"}
    android.os.IBinder mRemote -> l
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
android.support.v4.app.INotificationSideChannel$_Parcel -> R8$$REMOVED$$CLASS$$5:
# {"id":"sourceFile","fileName":"INotificationSideChannel.java"}
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
# {"id":"sourceFile","fileName":"RemoteActionCompatParcelizer.java"}
    1:1:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)Landroidx/core/app/RemoteActionCompat;"}
    1:1:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/RemoteActionCompat;Lr0/a;)V"}
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
# {"id":"sourceFile","fileName":"IconCompatParcelizer.java"}
    1:1:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)Landroidx/core/graphics/drawable/IconCompat;"}
    1:1:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/drawable/IconCompat;Lr0/a;)V"}
android.support.v4.os.IResultReceiver -> d.d:
# {"id":"sourceFile","fileName":"IResultReceiver.java"}
    java.lang.String DESCRIPTOR -> i
    1:1:void <clinit>():0:0 -> <clinit>
    void send(int,android.os.Bundle) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
# {"id":"sourceFile","fileName":"IResultReceiver.java"}
    22:27:void android.support.v4.os.IResultReceiver$Stub$Proxy.<init>(android.os.IBinder):0:0 -> asInterface
    22:27:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder):0 -> asInterface
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)Ld/d;"}
    35:46:java.lang.Object android.support.v4.os.IResultReceiver$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> onTransact
    35:46:java.lang.Object android.support.v4.os.IResultReceiver$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> onTransact
    35:46:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    47:52:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> d.a:
# {"id":"sourceFile","fileName":"IResultReceiver.java"}
    android.os.IBinder mRemote -> l
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
android.support.v4.os.IResultReceiver$_Parcel -> R8$$REMOVED$$CLASS$$6:
# {"id":"sourceFile","fileName":"IResultReceiver.java"}
android.support.v4.os.IResultReceiver2 -> d.c:
# {"id":"sourceFile","fileName":"IResultReceiver2.java"}
    java.lang.String DESCRIPTOR -> h
    1:1:void <clinit>():0:0 -> <clinit>
    void send(int,android.os.Bundle) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
android.support.v4.os.IResultReceiver2$Stub -> android.support.v4.os.IResultReceiver2$Stub:
# {"id":"sourceFile","fileName":"IResultReceiver2.java"}
    22:27:void android.support.v4.os.IResultReceiver2$Stub$Proxy.<init>(android.os.IBinder):0:0 -> asInterface
    22:27:android.support.v4.os.IResultReceiver2 asInterface(android.os.IBinder):0 -> asInterface
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)Ld/c;"}
    35:46:java.lang.Object android.support.v4.os.IResultReceiver2$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> onTransact
    35:46:java.lang.Object android.support.v4.os.IResultReceiver2$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> onTransact
    35:46:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0 -> onTransact
    47:52:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int):0:0 -> onTransact
android.support.v4.os.IResultReceiver2$Stub$Proxy -> d.b:
# {"id":"sourceFile","fileName":"IResultReceiver2.java"}
    android.os.IBinder mRemote -> l
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
android.support.v4.os.IResultReceiver2$_Parcel -> R8$$REMOVED$$CLASS$$7:
# {"id":"sourceFile","fileName":"IResultReceiver2.java"}
androidx.annotation.Keep -> androidx.annotation.Keep:
# {"id":"sourceFile","fileName":"Keep.jvm.kt"}
androidx.appcompat.R$styleable -> e.a:
    int[] ActionBar -> a
    int[] ActionBarLayout -> b
    int[] ActionMenuItemView -> c
    int[] ActionMode -> d
    int[] AppCompatImageView -> e
    int[] AppCompatTextHelper -> f
    int[] AppCompatTextView -> g
    int[] ButtonBarLayout -> h
    int[] LinearLayoutCompat -> i
    int[] LinearLayoutCompat_Layout -> j
    int[] ListPopupWindow -> k
    int[] MenuGroup -> l
    int[] MenuItem -> m
    int[] MenuView -> n
    int[] PopupWindow -> o
    int[] RecycleListView -> p
    int[] SearchView -> q
    int[] SwitchCompat -> r
    int[] TextAppearance -> s
    int[] Toolbar -> t
    int[] ViewBackgroundHelper -> u
    int[] ViewStubCompat -> v
    1:1:void <clinit>():0:0 -> <clinit>
androidx.appcompat.app.ActionBar$LayoutParams -> f.a:
# {"id":"sourceFile","fileName":"ActionBar.java"}
    int gravity -> a
    1:1:void <init>(android.view.ViewGroup$LayoutParams):0:0 -> <init>
    2:2:void <init>(androidx.appcompat.app.ActionBar$LayoutParams):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/a;)V"}
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
# {"id":"sourceFile","fileName":"AlertController.java"}
androidx.appcompat.content.res.AppCompatResources -> g.b:
# {"id":"sourceFile","fileName":"AppCompatResources.java"}
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    java.util.WeakHashMap sColorStateCaches -> b
    java.lang.Object sColorStateCacheLock -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList):0:0 -> a
    14:69:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources.getCachedColorStateList(android.content.Context,int):0:0 -> b
    14:69:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> b
    70:75:boolean androidx.appcompat.content.res.AppCompatResources.isColorInt(android.content.Context,int):0:0 -> b
    70:75:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int):0 -> b
    70:75:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> b
    76:92:android.util.TypedValue androidx.appcompat.content.res.AppCompatResources.getTypedValue():0:0 -> b
    76:92:boolean androidx.appcompat.content.res.AppCompatResources.isColorInt(android.content.Context,int):0 -> b
    76:92:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int):0 -> b
    76:92:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> b
    93:106:boolean androidx.appcompat.content.res.AppCompatResources.isColorInt(android.content.Context,int):0:0 -> b
    93:106:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int):0 -> b
    93:106:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> b
    107:133:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int):0:0 -> b
    107:133:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> b
    134:142:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0:0 -> b
    143:144:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources.getCachedColorStateList(android.content.Context,int):0:0 -> b
    143:144:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> b
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int):0:0 -> c
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry -> g.a:
# {"id":"sourceFile","fileName":"AppCompatResources.java"}
    android.content.res.ColorStateList value -> a
    android.content.res.Configuration configuration -> b
    1:1:void <init>(android.content.res.ColorStateList,android.content.res.Configuration):0:0 -> <init>
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> h.e:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/b;"}
    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb1/a;"}
    int mTransitionToIndex -> s
    int mTransitionFromIndex -> t
    boolean mMutated -> u
    1:14:void androidx.appcompat.graphics.drawable.DrawableContainer.<init>():0:0 -> <init>
    1:14:void androidx.appcompat.graphics.drawable.StateListDrawable.<init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState):0 -> <init>
    1:14:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/b;Landroid/content/res/Resources;)V"}
    15:33:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources):0:0 -> <init>
    7:25:void androidx.appcompat.graphics.drawable.DrawableContainer.setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState):0:0 -> d
    7:25:void androidx.appcompat.graphics.drawable.StateListDrawable.setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState):0 -> d
    7:25:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState):0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/b;)V"}
    1:1:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.<init>():0:0 -> e
    1:1:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/content/res/Resources$Theme;Landroid/content/res/Resources;Landroid/util/AttributeSet;Landroid/content/res/XmlResourceParser;)Lh/e;"}
    2:2:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    2:2:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    3:3:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0:0 -> e
    3:3:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    3:3:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    4:4:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.setVariablePadding(boolean):0:0 -> e
    4:4:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0 -> e
    4:4:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    4:4:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    5:5:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0:0 -> e
    5:5:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    5:5:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    6:6:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.setConstantSize(boolean):0:0 -> e
    6:6:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0 -> e
    6:6:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    6:6:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    7:7:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0:0 -> e
    7:7:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    7:7:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    8:8:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.setEnterFadeDuration(int):0:0 -> e
    8:8:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0 -> e
    8:8:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    8:8:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    9:9:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0:0 -> e
    9:9:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    9:9:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    10:10:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.setExitFadeDuration(int):0:0 -> e
    10:10:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0 -> e
    10:10:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    10:10:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    11:11:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0:0 -> e
    11:11:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    11:11:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    12:12:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.updateDensity(android.content.res.Resources):0:0 -> e
    12:12:void androidx.appcompat.graphics.drawable.DrawableContainer.updateDensity(android.content.res.Resources):0 -> e
    12:12:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    12:12:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    13:13:int androidx.appcompat.graphics.drawable.DrawableContainer.resolveDensity(android.content.res.Resources,int):0:0 -> e
    13:13:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.updateDensity(android.content.res.Resources):0 -> e
    13:13:void androidx.appcompat.graphics.drawable.DrawableContainer.updateDensity(android.content.res.Resources):0 -> e
    13:13:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    13:13:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    14:14:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.updateDensity(android.content.res.Resources):0:0 -> e
    14:14:void androidx.appcompat.graphics.drawable.DrawableContainer.updateDensity(android.content.res.Resources):0 -> e
    14:14:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    14:14:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    15:15:void androidx.appcompat.graphics.drawable.DrawableContainer.updateDensity(android.content.res.Resources):0:0 -> e
    15:15:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    15:15:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    16:16:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    16:16:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    17:17:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    17:17:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    17:17:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    18:18:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    18:18:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    18:18:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    18:18:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    19:19:int[] androidx.appcompat.graphics.drawable.StateListDrawable.extractStateSet(android.util.AttributeSet):0:0 -> e
    19:19:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    19:19:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    19:19:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    19:19:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    20:20:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    20:20:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    20:20:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    20:20:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    21:21:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    21:21:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    21:21:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    21:21:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    21:21:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    22:22:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    22:22:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    22:22:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    22:22:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    23:23:int androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.addStateSet(int[],android.graphics.drawable.Drawable):0:0 -> e
    23:23:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.addStateSet(int[],android.graphics.drawable.Drawable,int):0 -> e
    23:23:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    23:23:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    23:23:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    23:23:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    24:24:int androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.addStateSet(int[],android.graphics.drawable.Drawable):0:0 -> e
    24:24:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.addStateSet(int[],android.graphics.drawable.Drawable,int):0 -> e
    24:24:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    24:24:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    24:24:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    24:24:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    25:25:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.addStateSet(int[],android.graphics.drawable.Drawable,int):0:0 -> e
    25:25:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    25:25:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    25:25:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    25:25:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    26:26:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    26:26:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    26:26:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    26:26:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    27:27:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    27:27:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    27:27:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    28:28:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    28:28:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    28:28:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    28:28:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    29:29:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    29:29:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    29:29:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    29:29:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    29:29:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    30:30:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.<init>(android.content.Context):0:0 -> e
    30:30:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    30:30:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    30:30:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    30:30:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    30:30:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    31:31:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    31:31:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    31:31:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    31:31:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    31:31:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    32:32:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    32:32:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    32:32:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    32:32:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    33:33:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.addTransition(int,int,android.graphics.drawable.Drawable,boolean):0:0 -> e
    33:33:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    33:33:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    33:33:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    33:33:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    34:34:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.addTransition(int,int,android.graphics.drawable.Drawable,boolean):0:0 -> e
    34:34:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    34:34:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    34:34:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    34:34:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    35:35:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    35:35:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    35:35:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    35:35:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    36:36:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.init():0:0 -> e
    36:36:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    36:36:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> e
    37:37:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> e
    1:1:boolean isStateful():0:0 -> isStateful
    1:1:void jumpToCurrentState():0:0 -> jumpToCurrentState
    10:11:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.mutate():0:0 -> mutate
    10:11:android.graphics.drawable.Drawable mutate():0 -> mutate
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:29:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.mutate():0:0 -> mutate
    12:29:android.graphics.drawable.Drawable mutate():0 -> mutate
    7:8:int androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.indexOfStateSet(int[]):0:0 -> onStateChange
    7:8:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.indexOfKeyframe(int[]):0 -> onStateChange
    7:8:boolean onStateChange(int[]):0 -> onStateChange
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    9:15:int androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChildCount():0:0 -> onStateChange
    9:15:int androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.indexOfStateSet(int[]):0 -> onStateChange
    9:15:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.indexOfKeyframe(int[]):0 -> onStateChange
    9:15:boolean onStateChange(int[]):0 -> onStateChange
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    16:31:int androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.indexOfStateSet(int[]):0:0 -> onStateChange
    16:31:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.indexOfKeyframe(int[]):0 -> onStateChange
    16:31:boolean onStateChange(int[]):0 -> onStateChange
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    32:33:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.indexOfKeyframe(int[]):0:0 -> onStateChange
    32:33:boolean onStateChange(int[]):0 -> onStateChange
    34:35:int androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.indexOfStateSet(int[]):0:0 -> onStateChange
    34:35:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.indexOfKeyframe(int[]):0 -> onStateChange
    34:35:boolean onStateChange(int[]):0 -> onStateChange
    36:40:int androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChildCount():0:0 -> onStateChange
    36:40:int androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.indexOfStateSet(int[]):0 -> onStateChange
    36:40:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.indexOfKeyframe(int[]):0 -> onStateChange
    36:40:boolean onStateChange(int[]):0 -> onStateChange
    41:72:int androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.indexOfStateSet(int[]):0:0 -> onStateChange
    41:72:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.indexOfKeyframe(int[]):0 -> onStateChange
    41:72:boolean onStateChange(int[]):0 -> onStateChange
    73:110:boolean androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0:0 -> onStateChange
    73:110:boolean onStateChange(int[]):0 -> onStateChange
    111:112:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.getKeyframeIdAt(int):0:0 -> onStateChange
    111:112:boolean androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0 -> onStateChange
    111:112:boolean onStateChange(int[]):0 -> onStateChange
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    113:152:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.getKeyframeIdAt(int):0:0 -> onStateChange
    113:152:boolean androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0 -> onStateChange
    113:152:boolean onStateChange(int[]):0 -> onStateChange
    153:182:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.indexOfTransition(int,int):0:0 -> onStateChange
    153:182:boolean androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0 -> onStateChange
    153:182:boolean onStateChange(int[]):0 -> onStateChange
    183:213:boolean androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.transitionHasReversibleFlag(int,int):0:0 -> onStateChange
    183:213:boolean androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0 -> onStateChange
    183:213:boolean onStateChange(int[]):0 -> onStateChange
    214:222:boolean androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0:0 -> onStateChange
    214:222:boolean onStateChange(int[]):0 -> onStateChange
    223:249:boolean androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.isTransitionReversed(int,int):0:0 -> onStateChange
    223:249:boolean androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0 -> onStateChange
    223:249:boolean onStateChange(int[]):0 -> onStateChange
    250:290:boolean androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0:0 -> onStateChange
    250:290:boolean onStateChange(int[]):0 -> onStateChange
    291:307:boolean onStateChange(int[]):0:0 -> onStateChange
    1:1:boolean setVisible(boolean,boolean):0:0 -> setVisible
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> h.a:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    int $r8$classId -> k
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.drawable.Animatable mA -> l
    1:8:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.<init>():0:0 -> <init>
    1:8:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1):0 -> <init>
    1:8:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition.<init>(android.graphics.drawable.Animatable):0 -> <init>
    1:8:void $r8$init$synthetic(android.graphics.drawable.Animatable,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    10:13:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition.start():0:0 -> d0
    10:13:void start$bridge():0 -> d0
      # {"id":"com.android.tools.r8.synthesized"}
    14:18:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition.start():0:0 -> d0
    14:18:void start$bridge():0 -> d0
    10:13:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition.stop():0:0 -> e0
    10:13:void stop$bridge():0 -> e0
      # {"id":"com.android.tools.r8.synthesized"}
    14:18:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition.stop():0:0 -> e0
    14:18:void stop$bridge():0 -> e0
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> h.b:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    androidx.collection.LongSparseArray mTransitions -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/c;"}
    androidx.collection.SparseArrayCompat mStateIds -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/j;"}
    int $r8$clinit -> K
      # {"id":"com.android.tools.r8.synthesized"}
    1:12:void androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.<init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources):0:0 -> <init>
    1:12:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/b;Lh/e;Landroid/content/res/Resources;)V"}
    13:13:int androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getCapacity():0:0 -> <init>
    13:13:void androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.<init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources):0 -> <init>
    13:13:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources):0 -> <init>
    14:19:void androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.<init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources):0:0 -> <init>
    14:19:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources):0 -> <init>
    20:42:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources):0:0 -> <init>
    1:1:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0:0 -> newDrawable
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> R8$$REMOVED$$CLASS$$8:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> h.c:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    android.animation.ObjectAnimator mAnim -> k
    boolean mHasReversibleFlag -> l
    1:3:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.<init>():0:0 -> <init>
    1:3:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1):0 -> <init>
    1:3:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean):0 -> <init>
    4:22:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean):0:0 -> <init>
    23:25:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator.<init>(android.graphics.drawable.AnimationDrawable,boolean):0:0 -> <init>
    23:25:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean):0 -> <init>
    26:72:int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator.updateFrames(android.graphics.drawable.AnimationDrawable,boolean):0:0 -> <init>
    26:72:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator.<init>(android.graphics.drawable.AnimationDrawable,boolean):0 -> <init>
    26:72:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean):0 -> <init>
    73:93:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean):0:0 -> <init>
    1:1:void reverse():0:0 -> T
    1:1:void start():0:0 -> d0
    1:1:boolean canReverse():0:0 -> e
    1:1:void stop():0:0 -> e0
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> h.d:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    int[] mFrameTimes -> a
    int mFrames -> b
    int mTotalDuration -> c
    1:1:float getInterpolation(float):0:0 -> getInterpolation
androidx.appcompat.graphics.drawable.DrawableContainer -> h.i:
# {"id":"sourceFile","fileName":"DrawableContainer.java"}
    androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/h;"}
    android.graphics.Rect mHotspotBounds -> c
    android.graphics.drawable.Drawable mCurrDrawable -> d
    android.graphics.drawable.Drawable mLastDrawable -> e
    int mAlpha -> f
    boolean mHasAlpha -> g
    int mCurIndex -> h
    boolean mMutated -> i
    java.lang.Runnable mAnimationRunnable -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/f;"}
    long mEnterAnimationEnd -> k
    long mExitAnimationEnd -> l
    androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/g;"}
    int $r8$clinit -> n
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void animate(boolean):0:0 -> a
    5:7:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.applyTheme(android.content.res.Resources$Theme):0:0 -> applyTheme
    5:7:void applyTheme(android.content.res.Resources$Theme):0 -> applyTheme
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:50:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.applyTheme(android.content.res.Resources$Theme):0:0 -> applyTheme
    8:50:void applyTheme(android.content.res.Resources$Theme):0 -> applyTheme
    51:52:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.updateDensity(android.content.res.Resources):0:0 -> applyTheme
    51:52:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.applyTheme(android.content.res.Resources$Theme):0 -> applyTheme
    51:52:void applyTheme(android.content.res.Resources$Theme):0 -> applyTheme
    53:62:int androidx.appcompat.graphics.drawable.DrawableContainer.resolveDensity(android.content.res.Resources,int):0:0 -> applyTheme
    53:62:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.updateDensity(android.content.res.Resources):0 -> applyTheme
    53:62:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.applyTheme(android.content.res.Resources$Theme):0 -> applyTheme
    53:62:void applyTheme(android.content.res.Resources$Theme):0 -> applyTheme
    63:73:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.updateDensity(android.content.res.Resources):0:0 -> applyTheme
    63:73:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.applyTheme(android.content.res.Resources$Theme):0 -> applyTheme
    63:73:void applyTheme(android.content.res.Resources$Theme):0 -> applyTheme
    74:77:void applyTheme(android.content.res.Resources$Theme):0:0 -> applyTheme
    18:19:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback.wrap(android.graphics.drawable.Drawable$Callback):0:0 -> b
    18:19:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    20:59:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0:0 -> b
    60:64:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> b
    60:64:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0 -> b
    65:70:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0:0 -> b
    71:73:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> b
    71:73:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0 -> b
    74:146:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0:0 -> b
    147:150:android.graphics.drawable.Drawable$Callback androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback.unwrap():0:0 -> b
    147:150:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    151:152:android.graphics.drawable.Drawable$Callback androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback.unwrap():0:0 -> b
    151:152:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0 -> b
    153:158:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0:0 -> b
    159:162:android.graphics.drawable.Drawable$Callback androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback.unwrap():0:0 -> b
    159:162:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    163:164:android.graphics.drawable.Drawable$Callback androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback.unwrap():0:0 -> b
    163:164:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0 -> b
    165:168:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0:0 -> b
    1:1:boolean selectDrawable(int):0:0 -> c
    1:1:boolean canApplyTheme():0:0 -> canApplyTheme
    void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/b;)V"}
    1:1:void draw(android.graphics.Canvas):0:0 -> draw
    1:1:int getAlpha():0:0 -> getAlpha
    1:1:int getChangingConfigurations():0:0 -> getChangingConfigurations
    3:3:boolean androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState():0:0 -> getConstantState
    3:3:android.graphics.drawable.Drawable$ConstantState getConstantState():0 -> getConstantState
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:50:boolean androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState():0:0 -> getConstantState
    4:50:android.graphics.drawable.Drawable$ConstantState getConstantState():0 -> getConstantState
    51:59:android.graphics.drawable.Drawable$ConstantState getConstantState():0:0 -> getConstantState
    60:61:boolean androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState():0:0 -> getConstantState
    60:61:android.graphics.drawable.Drawable$ConstantState getConstantState():0 -> getConstantState
    1:1:android.graphics.drawable.Drawable getCurrent():0:0 -> getCurrent
    1:1:void getHotspotBounds(android.graphics.Rect):0:0 -> getHotspotBounds
    3:6:boolean androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.isConstantSize():0:0 -> getIntrinsicHeight
    3:6:int getIntrinsicHeight():0 -> getIntrinsicHeight
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:10:int androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantHeight():0:0 -> getIntrinsicHeight
    7:10:int getIntrinsicHeight():0 -> getIntrinsicHeight
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:20:int androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantHeight():0:0 -> getIntrinsicHeight
    11:20:int getIntrinsicHeight():0 -> getIntrinsicHeight
    21:27:int getIntrinsicHeight():0:0 -> getIntrinsicHeight
    3:6:boolean androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.isConstantSize():0:0 -> getIntrinsicWidth
    3:6:int getIntrinsicWidth():0 -> getIntrinsicWidth
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:10:int androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantWidth():0:0 -> getIntrinsicWidth
    7:10:int getIntrinsicWidth():0 -> getIntrinsicWidth
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:20:int androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantWidth():0:0 -> getIntrinsicWidth
    11:20:int getIntrinsicWidth():0 -> getIntrinsicWidth
    21:27:int getIntrinsicWidth():0:0 -> getIntrinsicWidth
    3:6:boolean androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.isConstantSize():0:0 -> getMinimumHeight
    3:6:int getMinimumHeight():0 -> getMinimumHeight
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:10:int androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantMinimumHeight():0:0 -> getMinimumHeight
    7:10:int getMinimumHeight():0 -> getMinimumHeight
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:20:int androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantMinimumHeight():0:0 -> getMinimumHeight
    11:20:int getMinimumHeight():0 -> getMinimumHeight
    21:27:int getMinimumHeight():0:0 -> getMinimumHeight
    3:6:boolean androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.isConstantSize():0:0 -> getMinimumWidth
    3:6:int getMinimumWidth():0 -> getMinimumWidth
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:10:int androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantMinimumWidth():0:0 -> getMinimumWidth
    7:10:int getMinimumWidth():0 -> getMinimumWidth
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:20:int androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantMinimumWidth():0:0 -> getMinimumWidth
    11:20:int getMinimumWidth():0 -> getMinimumWidth
    21:27:int getMinimumWidth():0:0 -> getMinimumWidth
    15:18:int androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getOpacity():0:0 -> getOpacity
    15:18:int getOpacity():0 -> getOpacity
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    19:60:int androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getOpacity():0:0 -> getOpacity
    19:60:int getOpacity():0 -> getOpacity
    1:1:void getOutline(android.graphics.Outline):0:0 -> getOutline
    3:10:android.graphics.Rect androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantPadding():0:0 -> getPadding
    3:10:boolean getPadding(android.graphics.Rect):0 -> getPadding
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:92:android.graphics.Rect androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantPadding():0:0 -> getPadding
    11:92:boolean getPadding(android.graphics.Rect):0 -> getPadding
    93:125:boolean getPadding(android.graphics.Rect):0:0 -> getPadding
    126:129:boolean androidx.appcompat.graphics.drawable.DrawableContainer.isAutoMirrored():0:0 -> getPadding
    126:129:boolean androidx.appcompat.graphics.drawable.DrawableContainer.needsMirroring():0 -> getPadding
    126:129:boolean getPadding(android.graphics.Rect):0 -> getPadding
    130:135:boolean androidx.appcompat.graphics.drawable.DrawableContainer.needsMirroring():0:0 -> getPadding
    130:135:boolean getPadding(android.graphics.Rect):0 -> getPadding
    136:144:boolean getPadding(android.graphics.Rect):0:0 -> getPadding
    6:13:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.invalidateCache():0:0 -> invalidateDrawable
    6:13:void invalidateDrawable(android.graphics.drawable.Drawable):0 -> invalidateDrawable
    14:27:void invalidateDrawable(android.graphics.drawable.Drawable):0:0 -> invalidateDrawable
    1:1:boolean isAutoMirrored():0:0 -> isAutoMirrored
    1:1:void jumpToCurrentState():0:0 -> jumpToCurrentState
    14:23:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.cloneConstantState():0:0 -> mutate
    14:23:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.cloneConstantState():0 -> mutate
    14:23:android.graphics.drawable.Drawable mutate():0 -> mutate
    24:37:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.mutate():0:0 -> mutate
    24:37:android.graphics.drawable.Drawable mutate():0 -> mutate
    38:44:android.graphics.drawable.Drawable mutate():0:0 -> mutate
    1:1:void onBoundsChange(android.graphics.Rect):0:0 -> onBoundsChange
    5:6:boolean androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.setLayoutDirection(int,int):0:0 -> onLayoutDirectionChanged
    5:6:boolean onLayoutDirectionChanged(int):0 -> onLayoutDirectionChanged
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:38:boolean androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.setLayoutDirection(int,int):0:0 -> onLayoutDirectionChanged
    7:38:boolean onLayoutDirectionChanged(int):0 -> onLayoutDirectionChanged
    1:1:boolean onLevelChange(int):0:0 -> onLevelChange
    1:1:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long):0:0 -> scheduleDrawable
    1:1:void setAlpha(int):0:0 -> setAlpha
    13:16:void androidx.core.graphics.drawable.DrawableCompat.setAutoMirrored(android.graphics.drawable.Drawable,boolean):0:0 -> setAutoMirrored
    13:16:void setAutoMirrored(boolean):0 -> setAutoMirrored
    1:1:void setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
    1:1:void setDither(boolean):0:0 -> setDither
    5:8:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> setHotspot
    5:8:void setHotspot(float,float):0 -> setHotspot
    20:23:void androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setHotspotBounds
    20:23:void setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    1:1:void setTintList(android.content.res.ColorStateList):0:0 -> setTintList
    1:1:void setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    1:1:boolean setVisible(boolean,boolean):0:0 -> setVisible
    1:1:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable):0:0 -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> h.f:
# {"id":"sourceFile","fileName":"DrawableContainer.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.graphics.drawable.DrawableContainer this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:8:void androidx.appcompat.graphics.drawable.DrawableContainer$1.<init>(androidx.appcompat.graphics.drawable.DrawableContainer):0:0 -> <init>
    1:8:void $r8$init$synthetic(java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)V"}
    10:27:void androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable.run():0:0 -> run
    10:27:void run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    28:43:void androidx.core.widget.AutoScrollHelper$ClampedScroller.start():0:0 -> run
    28:43:void androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable.run():0 -> run
    28:43:void run$bridge():0 -> run
    44:45:void androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable.run():0:0 -> run
    44:45:void run$bridge():0 -> run
    46:53:boolean androidx.core.widget.AutoScrollHelper$ClampedScroller.isFinished():0:0 -> run
    46:53:void androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable.run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    46:53:void run$bridge():0 -> run
    54:68:boolean androidx.core.widget.AutoScrollHelper$ClampedScroller.isFinished():0:0 -> run
    54:68:void androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable.run():0 -> run
    54:68:void run$bridge():0 -> run
    69:83:void androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable.run():0:0 -> run
    69:83:void run$bridge():0 -> run
    84:104:void androidx.core.widget.AutoScrollHelper.cancelTargetTouch():0:0 -> run
    84:104:void androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable.run():0 -> run
    84:104:void run$bridge():0 -> run
    105:143:void androidx.core.widget.AutoScrollHelper$ClampedScroller.computeScrollDelta():0:0 -> run
    105:143:void androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable.run():0 -> run
    105:143:void run$bridge():0 -> run
    144:145:void androidx.core.widget.ListViewAutoScrollHelper.scrollTargetBy(int,int):0:0 -> run
    144:145:void androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable.run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    144:145:void run$bridge():0 -> run
    146:148:void androidx.core.widget.ListViewAutoScrollHelper.scrollTargetBy(int,int):0:0 -> run
    146:148:void androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable.run():0 -> run
    146:148:void run$bridge():0 -> run
    149:152:void androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable.run():0:0 -> run
    149:152:void run$bridge():0 -> run
    153:156:void androidx.core.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> run
    153:156:void androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable.run():0 -> run
    153:156:void run$bridge():0 -> run
    157:169:void androidx.core.widget.AutoScrollHelper$ClampedScroller.computeScrollDelta():0:0 -> run
    157:169:void androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable.run():0 -> run
    157:169:void run$bridge():0 -> run
    170:176:void androidx.appcompat.graphics.drawable.DrawableContainer$1.run():0:0 -> run
    170:176:void run$bridge():0 -> run
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> h.g:
# {"id":"sourceFile","fileName":"DrawableContainer.java"}
    int $r8$classId -> b
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.drawable.Drawable$Callback mCallback -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:1:void androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback.<init>():0:0 -> <init>
    1:1:void $r8$init$synthetic():0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1.<init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat):0:0 -> <init>
    2:2:void $r8$init$synthetic(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/d;)V"}
    10:14:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1.invalidateDrawable(android.graphics.drawable.Drawable):0:0 -> invalidateDrawable
    10:14:void invalidateDrawable$bridge(android.graphics.drawable.Drawable):0 -> invalidateDrawable
      # {"id":"com.android.tools.r8.synthesized"}
    10:19:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1.scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long):0:0 -> scheduleDrawable
    10:19:void scheduleDrawable$bridge(android.graphics.drawable.Drawable,java.lang.Runnable,long):0 -> scheduleDrawable
      # {"id":"com.android.tools.r8.synthesized"}
    20:24:void androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback.scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long):0:0 -> scheduleDrawable
    20:24:void scheduleDrawable$bridge(android.graphics.drawable.Drawable,java.lang.Runnable,long):0 -> scheduleDrawable
    10:19:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1.unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable):0:0 -> unscheduleDrawable
    10:19:void unscheduleDrawable$bridge(android.graphics.drawable.Drawable,java.lang.Runnable):0 -> unscheduleDrawable
      # {"id":"com.android.tools.r8.synthesized"}
    20:24:void androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback.unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable):0:0 -> unscheduleDrawable
    20:24:void unscheduleDrawable$bridge(android.graphics.drawable.Drawable,java.lang.Runnable):0 -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> h.h:
# {"id":"sourceFile","fileName":"DrawableContainer.java"}
    boolean mAutoMirrored -> A
    android.graphics.ColorFilter mColorFilter -> B
    boolean mHasColorFilter -> C
    android.content.res.ColorStateList mTintList -> D
    android.graphics.PorterDuff$Mode mTintMode -> E
    boolean mHasTintList -> F
    boolean mHasTintMode -> G
    androidx.appcompat.graphics.drawable.DrawableContainer mOwner -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/i;"}
    android.content.res.Resources mSourceRes -> b
    int mDensity -> c
    int mChangingConfigurations -> d
    int mChildrenChangingConfigurations -> e
    android.util.SparseArray mDrawableFutures -> f
    android.graphics.drawable.Drawable[] mDrawables -> g
    int mNumChildren -> h
    boolean mVariablePadding -> i
    boolean mCheckedPadding -> j
    android.graphics.Rect mConstantPadding -> k
    boolean mConstantSize -> l
    boolean mCheckedConstantSize -> m
    int mConstantWidth -> n
    int mConstantHeight -> o
    int mConstantMinimumWidth -> p
    int mConstantMinimumHeight -> q
    boolean mCheckedOpacity -> r
    int mOpacity -> s
    boolean mCheckedStateful -> t
    boolean mCheckedConstantState -> u
    boolean mCanConstantState -> v
    boolean mDither -> w
    int mLayoutDirection -> x
    int mEnterFadeDuration -> y
    int mExitFadeDuration -> z
    45:58:int androidx.appcompat.graphics.drawable.DrawableContainer.resolveDensity(android.content.res.Resources,int):0:0 -> <init>
    45:58:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/h;Lh/i;Landroid/content/res/Resources;)V"}
    59:247:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources):0:0 -> <init>
    14:22:void androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.growArray(int,int):0:0 -> a
    14:22:void androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.growArray(int,int):0 -> a
    14:22:int addChild(android.graphics.drawable.Drawable):0 -> a
    23:31:void androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.growArray(int,int):0:0 -> a
    23:31:int addChild(android.graphics.drawable.Drawable):0 -> a
    32:75:int addChild(android.graphics.drawable.Drawable):0:0 -> a
    1:1:void computeConstantSize():0:0 -> b
    42:53:android.graphics.drawable.Drawable androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable):0:0 -> c
    42:53:void createAllFutures():0 -> c
    54:62:void createAllFutures():0:0 -> c
    1:1:boolean canApplyTheme():0:0 -> canApplyTheme
    41:54:android.graphics.drawable.Drawable androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable):0:0 -> d
    41:54:android.graphics.drawable.Drawable getChild(int):0 -> d
    55:73:android.graphics.drawable.Drawable getChild(int):0:0 -> d
    1:1:int getChangingConfigurations():0:0 -> getChangingConfigurations
androidx.appcompat.graphics.drawable.DrawableWrapper -> R8$$REMOVED$$CLASS$$9:
# {"id":"sourceFile","fileName":"DrawableWrapper.java"}
androidx.appcompat.graphics.drawable.StateListDrawable -> h.k:
# {"id":"sourceFile","fileName":"StateListDrawable.java"}
    androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/j;"}
    boolean mMutated -> p
    1:1:void applyTheme(android.content.res.Resources$Theme):0:0 -> applyTheme
    12:13:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.mutate():0:0 -> mutate
    12:13:android.graphics.drawable.Drawable mutate():0 -> mutate
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:31:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.mutate():0:0 -> mutate
    14:31:android.graphics.drawable.Drawable mutate():0 -> mutate
    boolean onStateChange(int[]) -> onStateChange
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> h.j:
# {"id":"sourceFile","fileName":"StateListDrawable.java"}
    int[][] mStateSets -> H
androidx.appcompat.resources.R$styleable -> i.a:
    int[] AnimatedStateListDrawableCompat -> a
    int[] AnimatedStateListDrawableItem -> b
    int[] AnimatedStateListDrawableTransition -> c
    1:1:void <clinit>():0:0 -> <clinit>
androidx.appcompat.text.AllCapsTransformationMethod -> j.a:
# {"id":"sourceFile","fileName":"AllCapsTransformationMethod.java"}
    java.util.Locale mLocale -> a
    1:1:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View):0:0 -> getTransformation
    1:1:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect):0:0 -> onFocusChanged
androidx.appcompat.view.ActionBarPolicy -> k.a:
# {"id":"sourceFile","fileName":"ActionBarPolicy.java"}
    int $r8$classId -> b
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.Context mContext -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:1:void androidx.core.graphics.TypefaceCompatBaseImpl.<init>():0:0 -> <init>
    1:1:void $r8$init$synthetic(int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    2:2:void androidx.appcompat.view.ActionBarPolicy.<init>(android.content.Context):0:0 -> <init>
    2:2:void $r8$init$synthetic(java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)V"}
    3:3:void androidx.core.provider.FontsContractCompat$FontRequestCallback.<init>():0:0 -> <init>
    3:3:void androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter.<init>(androidx.core.content.res.ResourcesCompat$FontCallback):0 -> <init>
    3:3:void $r8$init$synthetic(androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/a0;)V"}
    1:1:void androidx.appcompat.view.menu.CascadingMenuPopup$3.onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Ll/k;)V"}
    1:1:void androidx.appcompat.view.menu.CascadingMenuPopup$3.onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Landroid/view/MenuItem;)V"}
    5:8:void androidx.profileinstaller.ProfileInstaller$2.onDiagnosticReceived(int,java.lang.Object):0:0 -> c
    5:8:void androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics.onDiagnosticReceived(int,java.lang.Object):0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    48:60:void androidx.profileinstaller.ProfileInstaller$2.onResultReceived(int,java.lang.Object):0:0 -> d
    48:60:void androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics.onResultReceived(int,java.lang.Object):0 -> d
    61:64:void androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics.onResultReceived(int,java.lang.Object):0:0 -> d
    1:18:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry androidx.core.graphics.TypefaceCompatBaseImpl.findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int):0:0 -> e
    1:18:android.graphics.Typeface androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lv/g;Landroid/content/res/Resources;I)Landroid/graphics/Typeface;"}
    19:20:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getResourceId():0:0 -> e
    19:20:android.graphics.Typeface androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    21:22:java.lang.String androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getFileName():0:0 -> e
    21:22:android.graphics.Typeface androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    23:59:android.graphics.Typeface androidx.core.graphics.TypefaceCompat.createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int,int):0:0 -> e
    23:59:android.graphics.Typeface androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    60:92:long androidx.core.graphics.TypefaceCompatBaseImpl.getUniqueKey(android.graphics.Typeface):0:0 -> e
    60:92:void androidx.core.graphics.TypefaceCompatBaseImpl.addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry):0 -> e
    60:92:android.graphics.Typeface androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    93:100:void androidx.core.graphics.TypefaceCompatBaseImpl.addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry):0:0 -> e
    93:100:android.graphics.Typeface androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    15:16:android.net.Uri androidx.core.provider.FontsContractCompat$FontInfo.getUri():0:0 -> f
    15:16:android.graphics.Typeface androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;[La0/j;I)Landroid/graphics/Typeface;"}
    17:43:android.graphics.Typeface androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    1:1:android.graphics.Typeface androidx.core.graphics.TypefaceCompatBaseImpl.createFromInputStream(android.content.Context,java.io.InputStream):0:0 -> g
    1:1:android.graphics.Typeface androidx.core.graphics.TypefaceCompatBaseImpl.createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int):0:0 -> h
    19:33:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0:0 -> i
    19:33:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;ILm/m;)Ljava/lang/Object;"}
    34:36:int androidx.core.graphics.TypefaceCompatBaseImpl$2.getWeight(java.lang.Object):0:0 -> i
    34:36:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    34:36:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    37:39:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getWeight():0:0 -> i
    37:39:int androidx.core.graphics.TypefaceCompatBaseImpl$2.getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry):0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    37:39:int androidx.core.graphics.TypefaceCompatBaseImpl$2.getWeight(java.lang.Object):0 -> i
    37:39:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    37:39:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    40:42:int androidx.core.graphics.TypefaceCompatBaseImpl$1.getWeight(java.lang.Object):0:0 -> i
    40:42:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    40:42:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    43:45:int androidx.core.provider.FontsContractCompat$FontInfo.getWeight():0:0 -> i
    43:45:int androidx.core.graphics.TypefaceCompatBaseImpl$1.getWeight(androidx.core.provider.FontsContractCompat$FontInfo):0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    43:45:int androidx.core.graphics.TypefaceCompatBaseImpl$1.getWeight(java.lang.Object):0 -> i
    43:45:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    43:45:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    46:54:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0:0 -> i
    46:54:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    55:57:boolean androidx.core.graphics.TypefaceCompatBaseImpl$2.isItalic(java.lang.Object):0:0 -> i
    55:57:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    55:57:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    58:60:boolean androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.isItalic():0:0 -> i
    58:60:boolean androidx.core.graphics.TypefaceCompatBaseImpl$2.isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry):0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    58:60:boolean androidx.core.graphics.TypefaceCompatBaseImpl$2.isItalic(java.lang.Object):0 -> i
    58:60:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    58:60:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    61:63:boolean androidx.core.graphics.TypefaceCompatBaseImpl$1.isItalic(java.lang.Object):0:0 -> i
    61:63:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    61:63:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    64:82:boolean androidx.core.provider.FontsContractCompat$FontInfo.isItalic():0:0 -> i
    64:82:boolean androidx.core.graphics.TypefaceCompatBaseImpl$1.isItalic(androidx.core.provider.FontsContractCompat$FontInfo):0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    64:82:boolean androidx.core.graphics.TypefaceCompatBaseImpl$1.isItalic(java.lang.Object):0 -> i
    64:82:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    64:82:java.lang.Object androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> i
    1:1:androidx.core.provider.FontsContractCompat$FontInfo androidx.core.graphics.TypefaceCompatBaseImpl.findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[La0/j;)La0/j;"}
    11:34:java.lang.String kotlinx.coroutines.internal.Symbol.toString():0:0 -> toString
    11:34:java.lang.String kotlinx.coroutines.internal.Symbol.toString$bridge():0 -> toString
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.view.CollapsibleActionView -> k.b:
# {"id":"sourceFile","fileName":"CollapsibleActionView.java"}
androidx.appcompat.view.SupportMenuInflater -> k.f:
# {"id":"sourceFile","fileName":"SupportMenuInflater.java"}
    java.lang.Object[] mActionViewConstructorArguments -> a
    java.lang.Object[] mActionProviderConstructorArguments -> b
    android.content.Context mContext -> c
    java.lang.Object mRealOwner -> d
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> e
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:java.lang.Object findRealOwner(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Ljava/lang/Object;"}
    115:136:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/XmlResourceParser;Landroid/util/AttributeSet;Landroid/view/Menu;)V"}
    137:144:void androidx.appcompat.view.SupportMenuInflater$MenuState.addItem():0:0 -> b
    137:144:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    145:173:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
    174:223:void androidx.appcompat.view.SupportMenuInflater$MenuState.readGroup(android.util.AttributeSet):0:0 -> b
    174:223:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    224:229:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
    230:233:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> b
    230:233:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    234:243:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> b
    234:243:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0 -> b
    234:243:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    244:303:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> b
    244:303:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    304:313:char androidx.appcompat.view.SupportMenuInflater$MenuState.getShortcut(java.lang.String):0:0 -> b
    304:313:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0 -> b
    304:313:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    314:329:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> b
    314:329:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    330:337:char androidx.appcompat.view.SupportMenuInflater$MenuState.getShortcut(java.lang.String):0:0 -> b
    330:337:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0 -> b
    330:337:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    338:525:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> b
    338:525:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    526:543:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
    544:556:android.view.SubMenu androidx.appcompat.view.SupportMenuInflater$MenuState.addSubMenuItem():0:0 -> b
    544:556:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    557:583:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
    1:1:void inflate(int,android.view.Menu):0:0 -> inflate
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> k.c:
# {"id":"sourceFile","fileName":"SupportMenuInflater.java"}
    java.lang.Object mRealOwner -> a
    java.lang.reflect.Method mMethod -> b
    java.lang.Class[] PARAM_TYPES -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:boolean onMenuItemClick(android.view.MenuItem):0:0 -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> k.e:
# {"id":"sourceFile","fileName":"SupportMenuInflater.java"}
    java.lang.CharSequence itemTooltipText -> A
    android.content.res.ColorStateList itemIconTintList -> B
    android.graphics.PorterDuff$Mode itemIconTintMode -> C
    androidx.appcompat.view.SupportMenuInflater this$0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/f;"}
    android.view.Menu menu -> a
    int groupId -> b
    int groupCategory -> c
    int groupOrder -> d
    int groupCheckable -> e
    boolean groupVisible -> f
    boolean groupEnabled -> g
    boolean itemAdded -> h
    int itemId -> i
    int itemCategoryOrder -> j
    java.lang.CharSequence itemTitle -> k
    java.lang.CharSequence itemTitleCondensed -> l
    int itemIconResId -> m
    char itemAlphabeticShortcut -> n
    int itemAlphabeticModifiers -> o
    char itemNumericShortcut -> p
    int itemNumericModifiers -> q
    int itemCheckable -> r
    boolean itemChecked -> s
    boolean itemVisible -> t
    boolean itemEnabled -> u
    int itemShowAsAction -> v
    int itemActionViewLayout -> w
    java.lang.String itemActionViewClassName -> x
    java.lang.String itemListenerMethodName -> y
    java.lang.CharSequence itemContentDescription -> z
    1:1:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/f;Landroid/view/Menu;)V"}
    1:1:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]):0:0 -> a
    66:69:java.lang.Object androidx.appcompat.view.SupportMenuInflater.getRealOwner():0:0 -> b
    66:69:void setItem(android.view.MenuItem):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    70:81:java.lang.Object androidx.appcompat.view.SupportMenuInflater.getRealOwner():0:0 -> b
    70:81:void setItem(android.view.MenuItem):0 -> b
    82:98:void androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener.<init>(java.lang.Object,java.lang.String):0:0 -> b
    82:98:void setItem(android.view.MenuItem):0 -> b
    99:103:void setItem(android.view.MenuItem):0:0 -> b
    104:138:void androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener.<init>(java.lang.Object,java.lang.String):0:0 -> b
    104:138:void setItem(android.view.MenuItem):0 -> b
    139:163:void setItem(android.view.MenuItem):0:0 -> b
    164:175:void androidx.appcompat.view.menu.MenuItemImpl.setExclusiveCheckable(boolean):0:0 -> b
    164:175:void setItem(android.view.MenuItem):0 -> b
    176:208:void setItem(android.view.MenuItem):0:0 -> b
    209:232:void androidx.core.view.MenuItemCompat.setContentDescription(android.view.MenuItem,java.lang.CharSequence):0:0 -> b
    209:232:void setItem(android.view.MenuItem):0 -> b
    233:252:void androidx.core.view.MenuItemCompat.setTooltipText(android.view.MenuItem,java.lang.CharSequence):0:0 -> b
    233:252:void setItem(android.view.MenuItem):0 -> b
    253:272:void androidx.core.view.MenuItemCompat.setAlphabeticShortcut(android.view.MenuItem,char,int):0:0 -> b
    253:272:void setItem(android.view.MenuItem):0 -> b
    273:292:void androidx.core.view.MenuItemCompat.setNumericShortcut(android.view.MenuItem,char,int):0:0 -> b
    273:292:void setItem(android.view.MenuItem):0 -> b
    293:312:void androidx.core.view.MenuItemCompat.setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode):0:0 -> b
    293:312:void setItem(android.view.MenuItem):0 -> b
    313:326:void androidx.core.view.MenuItemCompat.setIconTintList(android.view.MenuItem,android.content.res.ColorStateList):0:0 -> b
    313:326:void setItem(android.view.MenuItem):0 -> b
androidx.appcompat.view.SupportMenuInflater$MenuState$$ExternalSyntheticThrowCCEIfNotNull0 -> k.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:long androidx.profileinstaller.FileSectionType$EnumUnboxingLocalUtility.getMValue(int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.appcompat.view.SupportMenuInflater$MenuState$$InternalSyntheticThrowCCEIfNotNull$24$1f1bf5bf05a6f5b167c477219d9a10ba874be4646be09322f10d69f2d6725be3$0.m(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
# {"id":"sourceFile","fileName":"ActionMenuItemView.java"}
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/k;"}
    java.lang.CharSequence mTitle -> g
    android.graphics.drawable.Drawable mIcon -> h
    androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/i;"}
    androidx.appcompat.widget.ForwardingListener mForwardingListener -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/a;"}
    androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/b;"}
    boolean mAllowTextWithIcon -> l
    boolean mExpandedFormat -> m
    int mMinWidth -> n
    int mSavedPaddingLeft -> o
    int mMaxIconSize -> p
    2:55:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    2:55:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:14:boolean hasText():0:0 -> a
    1:14:boolean needsDividerBefore():0 -> a
    15:23:boolean needsDividerBefore():0:0 -> a
    1:11:boolean hasText():0:0 -> b
    1:11:boolean needsDividerAfter():0 -> b
    10:13:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView):0:0 -> c
    10:13:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)V"}
    14:59:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> c
    1:1:boolean shouldAllowTextWithIcon():0:0 -> e
    15:38:boolean androidx.appcompat.view.menu.MenuItemImpl.showsTextAsAction():0:0 -> f
    15:38:void updateTextButtonVisibility():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    39:43:void updateTextButtonVisibility():0:0 -> f
    44:45:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getContentDescription():0:0 -> f
    44:45:void updateTextButtonVisibility():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    46:57:void updateTextButtonVisibility():0:0 -> f
    58:59:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> f
    58:59:void updateTextButtonVisibility():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    60:64:void updateTextButtonVisibility():0:0 -> f
    65:66:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTooltipText():0:0 -> f
    65:66:void updateTextButtonVisibility():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    67:77:void updateTextButtonVisibility():0:0 -> f
    78:79:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> f
    78:79:void updateTextButtonVisibility():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    80:87:void updateTextButtonVisibility():0:0 -> f
    1:1:androidx.appcompat.view.menu.MenuItemImpl getItemData():0:0 -> getItemData
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/k;"}
    1:16:boolean hasText():0:0 -> onMeasure
    1:16:void onMeasure(int,int):0 -> onMeasure
    17:112:void onMeasure(int,int):0:0 -> onMeasure
    11:13:void androidx.appcompat.view.menu.MenuItemImpl.actionFormatChanged():0:0 -> setExpandedFormat
    11:13:void setExpandedFormat(boolean):0 -> setExpandedFormat
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:15:void androidx.appcompat.view.menu.MenuBuilder.onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> setExpandedFormat
    14:15:void androidx.appcompat.view.menu.MenuItemImpl.actionFormatChanged():0 -> setExpandedFormat
    14:15:void setExpandedFormat(boolean):0 -> setExpandedFormat
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    16:19:void androidx.appcompat.view.menu.MenuBuilder.onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> setExpandedFormat
    16:19:void androidx.appcompat.view.menu.MenuItemImpl.actionFormatChanged():0 -> setExpandedFormat
    16:19:void setExpandedFormat(boolean):0 -> setExpandedFormat
    1:1:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker):0:0 -> setItemInvoker
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/i;)V"}
    1:1:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback):0:0 -> setPopupCallback
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/b;)V"}
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> l.a:
# {"id":"sourceFile","fileName":"ActionMenuItemView.java"}
    androidx.appcompat.view.menu.ActionMenuItemView this$0 -> j
    1:1:void <init>(androidx.appcompat.view.menu.ActionMenuItemView):0:0 -> <init>
    10:11:androidx.appcompat.view.menu.ShowableListMenu androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback.getPopup():0:0 -> b
    10:11:androidx.appcompat.view.menu.ShowableListMenu getPopup():0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/l;"}
    12:20:androidx.appcompat.view.menu.ShowableListMenu androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback.getPopup():0:0 -> b
    12:20:androidx.appcompat.view.menu.ShowableListMenu getPopup():0 -> b
    1:1:boolean onForwardingStarted():0:0 -> c
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> l.b:
# {"id":"sourceFile","fileName":"ActionMenuItemView.java"}
androidx.appcompat.view.menu.BaseMenuPresenter -> R8$$REMOVED$$CLASS$$10:
# {"id":"sourceFile","fileName":"BaseMenuPresenter.java"}
androidx.appcompat.view.menu.CascadingMenuPopup -> l.g:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> A
    boolean mShouldCloseImmediately -> B
    android.content.Context mContext -> c
    int mMenuMaxWidth -> d
    int mPopupStyleAttr -> e
    int mPopupStyleRes -> f
    boolean mOverflowOnly -> g
    android.os.Handler mSubMenuHoverHandler -> h
    java.util.List mPendingMenus -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List mShowingMenus -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/c;"}
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/d;"}
    androidx.appcompat.widget.MenuItemHoverListener mMenuItemHoverListener -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/a;"}
    int mRawDropDownGravity -> n
    int mDropDownGravity -> o
    android.view.View mAnchorView -> p
    android.view.View mShownAnchorView -> q
    int mLastPosition -> r
    boolean mHasXOffset -> s
    boolean mHasYOffset -> t
    int mXOffset -> u
    int mYOffset -> v
    boolean mForceShowIcon -> w
    boolean mShowTitle -> x
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/o;"}
    android.view.ViewTreeObserver mTreeObserver -> z
    57:58:int androidx.appcompat.view.menu.CascadingMenuPopup.getInitialMenuPosition():0:0 -> <init>
    57:58:void <init>(android.content.Context,android.view.View,int,int,boolean):0 -> <init>
    59:68:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> <init>
    59:68:int androidx.appcompat.view.menu.CascadingMenuPopup.getInitialMenuPosition():0 -> <init>
    59:68:void <init>(android.content.Context,android.view.View,int,int,boolean):0 -> <init>
    69:101:void <init>(android.content.Context,android.view.View,int,int,boolean):0:0 -> <init>
    3:30:int androidx.appcompat.view.menu.CascadingMenuPopup.findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> a
    3:30:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Z)V"}
    31:55:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
    56:57:void androidx.appcompat.view.menu.MenuBuilder.removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter):0:0 -> a
    56:57:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    58:89:void androidx.appcompat.view.menu.MenuBuilder.removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter):0:0 -> a
    58:89:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
    90:99:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
    100:101:void androidx.appcompat.widget.MenuPopupWindow.setExitTransition(java.lang.Object):0:0 -> a
    100:101:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    102:105:void androidx.appcompat.widget.MenuPopupWindow.setExitTransition(java.lang.Object):0:0 -> a
    102:105:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
    106:108:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
    109:110:void androidx.appcompat.widget.ListPopupWindow.setAnimationStyle(int):0:0 -> a
    109:110:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    111:113:void androidx.appcompat.widget.ListPopupWindow.setAnimationStyle(int):0:0 -> a
    111:113:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
    114:138:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
    139:140:int androidx.appcompat.view.menu.CascadingMenuPopup.getInitialMenuPosition():0:0 -> a
    139:140:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
    141:152:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> a
    141:152:int androidx.appcompat.view.menu.CascadingMenuPopup.getInitialMenuPosition():0 -> a
    141:152:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
    153:209:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
    19:20:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> b
    19:20:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    19:20:void updateMenuView(boolean):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    21:22:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> b
    21:22:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    21:22:void updateMenuView(boolean):0 -> b
    23:26:void updateMenuView(boolean):0:0 -> b
    27:38:androidx.appcompat.view.menu.MenuAdapter androidx.appcompat.view.menu.MenuPopup.toMenuAdapter(android.widget.ListAdapter):0:0 -> b
    27:38:void updateMenuView(boolean):0 -> b
    39:43:void updateMenuView(boolean):0:0 -> b
    24:27:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> d
    24:27:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    24:27:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/t;)Z"}
    28:50:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> d
    25:26:boolean androidx.appcompat.widget.ListPopupWindow.isShowing():0:0 -> dismiss
    25:26:void dismiss():0 -> dismiss
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    27:32:boolean androidx.appcompat.widget.ListPopupWindow.isShowing():0:0 -> dismiss
    27:32:void dismiss():0 -> dismiss
    33:41:void dismiss():0:0 -> dismiss
    18:19:boolean androidx.appcompat.widget.ListPopupWindow.isShowing():0:0 -> e
    18:19:boolean isShowing():0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    20:27:boolean androidx.appcompat.widget.ListPopupWindow.isShowing():0:0 -> e
    20:27:boolean isShowing():0 -> e
    23:24:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> f
    23:24:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    23:24:android.widget.ListView getListView():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    25:27:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> f
    25:27:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    25:27:android.widget.ListView getListView():0 -> f
    1:1:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/o;)V"}
    1:1:void show():0:0 -> h
    1:1:boolean flagActionItems():0:0 -> j
    1:1:void addMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;)V"}
    11:14:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> n
    11:14:void setAnchorView(android.view.View):0 -> n
    15:21:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> n
    15:21:void setAnchorView(android.view.View):0 -> n
    1:1:void setForceShowIcon(boolean):0:0 -> o
    19:20:boolean androidx.appcompat.widget.ListPopupWindow.isShowing():0:0 -> onDismiss
    19:20:void onDismiss():0 -> onDismiss
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    21:33:boolean androidx.appcompat.widget.ListPopupWindow.isShowing():0:0 -> onDismiss
    21:33:void onDismiss():0 -> onDismiss
    34:39:void onDismiss():0:0 -> onDismiss
    1:1:boolean onKey(android.view.View,int,android.view.KeyEvent):0:0 -> onKey
    11:14:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> p
    11:14:void setGravity(int):0 -> p
    15:21:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> p
    15:21:void setGravity(int):0 -> p
    1:1:void setHorizontalOffset(int):0:0 -> q
    1:1:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> r
    1:1:void setShowTitle(boolean):0:0 -> s
    1:1:void setVerticalOffset(int):0:0 -> t
    35:52:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;)V"}
    53:58:androidx.appcompat.widget.MenuPopupWindow androidx.appcompat.view.menu.CascadingMenuPopup.createPopupWindow():0:0 -> v
    53:58:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    59:69:void androidx.appcompat.widget.MenuPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> v
    59:69:androidx.appcompat.widget.MenuPopupWindow androidx.appcompat.view.menu.CascadingMenuPopup.createPopupWindow():0 -> v
    59:69:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    70:84:void androidx.appcompat.widget.ListPopupWindow.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> v
    70:84:androidx.appcompat.widget.MenuPopupWindow androidx.appcompat.view.menu.CascadingMenuPopup.createPopupWindow():0 -> v
    70:84:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    85:90:void androidx.appcompat.widget.ListPopupWindow.setModal(boolean):0:0 -> v
    85:90:androidx.appcompat.widget.MenuPopupWindow androidx.appcompat.view.menu.CascadingMenuPopup.createPopupWindow():0 -> v
    85:90:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    91:93:void androidx.appcompat.widget.ListPopupWindow.setInputMethodMode(int):0:0 -> v
    91:93:androidx.appcompat.widget.MenuPopupWindow androidx.appcompat.view.menu.CascadingMenuPopup.createPopupWindow():0 -> v
    91:93:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    94:98:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> v
    99:126:void androidx.appcompat.widget.ListPopupWindow.setContentWidth(int):0:0 -> v
    99:126:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    127:143:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> v
    144:145:android.view.View androidx.appcompat.view.menu.CascadingMenuPopup.findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0:0 -> v
    144:145:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    146:147:int androidx.appcompat.view.menu.MenuBuilder.size():0:0 -> v
    146:147:android.view.MenuItem androidx.appcompat.view.menu.CascadingMenuPopup.findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder):0 -> v
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    146:147:android.view.View androidx.appcompat.view.menu.CascadingMenuPopup.findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0 -> v
    146:147:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    148:154:int androidx.appcompat.view.menu.MenuBuilder.size():0:0 -> v
    148:154:android.view.MenuItem androidx.appcompat.view.menu.CascadingMenuPopup.findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder):0 -> v
    148:154:android.view.View androidx.appcompat.view.menu.CascadingMenuPopup.findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0 -> v
    148:154:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    155:178:android.view.MenuItem androidx.appcompat.view.menu.CascadingMenuPopup.findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder):0:0 -> v
    155:178:android.view.View androidx.appcompat.view.menu.CascadingMenuPopup.findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0 -> v
    155:178:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    179:182:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> v
    179:182:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> v
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    179:182:android.view.View androidx.appcompat.view.menu.CascadingMenuPopup.findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0 -> v
    179:182:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    183:260:android.view.View androidx.appcompat.view.menu.CascadingMenuPopup.findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0:0 -> v
    183:260:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    261:294:void androidx.appcompat.widget.MenuPopupWindow.setTouchModal(boolean):0:0 -> v
    261:294:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    295:297:void androidx.appcompat.widget.MenuPopupWindow.setEnterTransition(java.lang.Object):0:0 -> v
    295:297:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    298:308:int androidx.appcompat.view.menu.CascadingMenuPopup.getNextMenuPosition(int):0:0 -> v
    298:308:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    309:310:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> v
    309:310:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> v
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    309:310:int androidx.appcompat.view.menu.CascadingMenuPopup.getNextMenuPosition(int):0 -> v
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    309:310:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    311:315:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> v
    311:315:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> v
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    311:315:int androidx.appcompat.view.menu.CascadingMenuPopup.getNextMenuPosition(int):0 -> v
    311:315:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    316:378:int androidx.appcompat.view.menu.CascadingMenuPopup.getNextMenuPosition(int):0:0 -> v
    316:378:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    379:481:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> v
    482:490:void androidx.appcompat.widget.ListPopupWindow.setEpicenterBounds(android.graphics.Rect):0:0 -> v
    482:490:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    491:514:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> v
    515:522:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> v
    515:522:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    523:540:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> v
    541:542:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> v
    541:542:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> v
    543:553:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> v
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> l.c:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    int $r8$classId -> b
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/l;"}
    1:8:void androidx.appcompat.view.menu.CascadingMenuPopup$1.<init>(androidx.appcompat.view.menu.CascadingMenuPopup):0:0 -> <init>
    1:8:void $r8$init$synthetic(androidx.appcompat.view.menu.MenuPopup,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/l;I)V"}
    10:15:void androidx.appcompat.view.menu.StandardMenuPopup$1.onGlobalLayout():0:0 -> onGlobalLayout
    10:15:void onGlobalLayout$bridge():0 -> onGlobalLayout
      # {"id":"com.android.tools.r8.synthesized"}
    16:21:boolean androidx.appcompat.widget.ListPopupWindow.isModal():0:0 -> onGlobalLayout
    16:21:void androidx.appcompat.view.menu.StandardMenuPopup$1.onGlobalLayout():0 -> onGlobalLayout
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:21:void onGlobalLayout$bridge():0 -> onGlobalLayout
    22:42:void androidx.appcompat.view.menu.StandardMenuPopup$1.onGlobalLayout():0:0 -> onGlobalLayout
    22:42:void onGlobalLayout$bridge():0 -> onGlobalLayout
    43:65:void androidx.appcompat.view.menu.CascadingMenuPopup$1.onGlobalLayout():0:0 -> onGlobalLayout
    43:65:void onGlobalLayout$bridge():0 -> onGlobalLayout
    66:69:boolean androidx.appcompat.widget.ListPopupWindow.isModal():0:0 -> onGlobalLayout
    66:69:void androidx.appcompat.view.menu.CascadingMenuPopup$1.onGlobalLayout():0 -> onGlobalLayout
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    66:69:void onGlobalLayout$bridge():0 -> onGlobalLayout
    70:106:void androidx.appcompat.view.menu.CascadingMenuPopup$1.onGlobalLayout():0:0 -> onGlobalLayout
    70:106:void onGlobalLayout$bridge():0 -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> l.d:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/l;"}
    1:8:void androidx.appcompat.view.menu.CascadingMenuPopup$2.<init>(androidx.appcompat.view.menu.CascadingMenuPopup):0:0 -> <init>
    1:8:void $r8$init$synthetic(androidx.appcompat.view.menu.MenuPopup,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/l;I)V"}
    1:1:void onViewAttachedToWindow$bridge(android.view.View):0:0 -> onViewAttachedToWindow
      # {"id":"com.android.tools.r8.synthesized"}
    10:38:void androidx.appcompat.view.menu.StandardMenuPopup$2.onViewDetachedFromWindow(android.view.View):0:0 -> onViewDetachedFromWindow
    10:38:void onViewDetachedFromWindow$bridge(android.view.View):0 -> onViewDetachedFromWindow
      # {"id":"com.android.tools.r8.synthesized"}
    39:66:void androidx.appcompat.view.menu.CascadingMenuPopup$2.onViewDetachedFromWindow(android.view.View):0:0 -> onViewDetachedFromWindow
    39:66:void onViewDetachedFromWindow$bridge(android.view.View):0 -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> R8$$REMOVED$$CLASS$$11:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> l.e:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/f;"}
    android.view.MenuItem val$item -> b
    androidx.appcompat.view.menu.MenuBuilder val$menu -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/j;"}
    androidx.appcompat.view.menu.CascadingMenuPopup$3 this$1 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/a;"}
    1:1:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/a;Ll/f;Ll/k;Ll/j;)V"}
    44:47:boolean androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int):0:0 -> run
    44:47:void run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> l.f:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    androidx.appcompat.widget.MenuPopupWindow window -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/x0;"}
    androidx.appcompat.view.menu.MenuBuilder menu -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/j;"}
    int position -> c
    1:1:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/x0;Ll/j;I)V"}
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
# {"id":"sourceFile","fileName":"ExpandedMenuView.java"}
    int[] TINT_ATTRS -> b
    1:8:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:8:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    9:21:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    9:21:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:21:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    22:52:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    22:52:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
    12:12:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> onItemClick
    12:12:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0 -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
# {"id":"sourceFile","fileName":"ListMenuItemView.java"}
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/k;"}
    android.widget.ImageView mIconView -> c
    android.widget.RadioButton mRadioButton -> d
    android.widget.TextView mTitleView -> e
    android.widget.CheckBox mCheckBox -> f
    android.widget.TextView mShortcutView -> g
    android.widget.ImageView mSubMenuArrowView -> h
    android.widget.ImageView mGroupDivider -> i
    android.widget.LinearLayout mContent -> j
    android.graphics.drawable.Drawable mBackground -> k
    int mTextAppearance -> l
    android.content.Context mTextAppearanceContext -> m
    boolean mPreserveIconSpacing -> n
    android.graphics.drawable.Drawable mSubMenuArrow -> o
    boolean mHasListDivider -> p
    android.view.LayoutInflater mInflater -> q
    boolean mForceShowIcon -> r
    1:81:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:81:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    19:20:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> c
    19:20:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView):0 -> c
    19:20:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)V"}
    21:30:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> c
    31:39:boolean androidx.appcompat.view.menu.MenuItemImpl.shouldShowShortcut():0:0 -> c
    31:39:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    40:57:char androidx.appcompat.view.menu.MenuItemImpl.getShortcut():0:0 -> c
    40:57:boolean androidx.appcompat.view.menu.MenuItemImpl.shouldShowShortcut():0 -> c
    40:57:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    58:66:char androidx.appcompat.view.menu.MenuItemImpl.getShortcut():0:0 -> c
    58:66:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    67:68:boolean androidx.appcompat.view.menu.MenuItemImpl.shouldShowShortcut():0:0 -> c
    67:68:void setShortcut(boolean,char):0 -> c
    67:68:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    69:74:boolean androidx.appcompat.view.menu.MenuItemImpl.shouldShowShortcut():0:0 -> c
    69:74:void setShortcut(boolean,char):0 -> c
    69:74:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    75:98:char androidx.appcompat.view.menu.MenuItemImpl.getShortcut():0:0 -> c
    75:98:boolean androidx.appcompat.view.menu.MenuItemImpl.shouldShowShortcut():0 -> c
    75:98:void setShortcut(boolean,char):0 -> c
    75:98:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    99:100:char androidx.appcompat.view.menu.MenuItemImpl.getShortcut():0:0 -> c
    99:100:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0 -> c
    99:100:void setShortcut(boolean,char):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    99:100:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    101:117:char androidx.appcompat.view.menu.MenuItemImpl.getShortcut():0:0 -> c
    101:117:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0 -> c
    101:117:void setShortcut(boolean,char):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    101:117:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    118:121:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> c
    118:121:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    118:121:void setShortcut(boolean,char):0 -> c
    118:121:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    122:266:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0:0 -> c
    122:266:void setShortcut(boolean,char):0 -> c
    122:266:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    267:282:void setShortcut(boolean,char):0:0 -> c
    267:282:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    283:303:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> c
    304:305:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getContentDescription():0:0 -> c
    304:305:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    306:309:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> c
    1:1:androidx.appcompat.view.menu.MenuItemImpl getItemData():0:0 -> getItemData
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/k;"}
    8:13:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> onFinishInflate
    8:13:void onFinishInflate():0 -> onFinishInflate
    14:83:void onFinishInflate():0:0 -> onFinishInflate
    14:25:boolean androidx.appcompat.view.menu.MenuItemImpl.isExclusiveCheckable():0:0 -> setCheckable
    14:25:void setCheckable(boolean):0 -> setCheckable
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    26:44:void insertRadioButton():0:0 -> setCheckable
    26:44:void setCheckable(boolean):0 -> setCheckable
    45:60:void addContentView(android.view.View,int):0:0 -> setCheckable
    45:60:void addContentView(android.view.View):0 -> setCheckable
    45:60:void insertRadioButton():0 -> setCheckable
    45:60:void setCheckable(boolean):0 -> setCheckable
    61:79:void insertCheckBox():0:0 -> setCheckable
    61:79:void setCheckable(boolean):0 -> setCheckable
    80:96:void addContentView(android.view.View,int):0:0 -> setCheckable
    80:96:void addContentView(android.view.View):0 -> setCheckable
    80:96:void insertCheckBox():0 -> setCheckable
    80:96:void setCheckable(boolean):0 -> setCheckable
    97:139:void setCheckable(boolean):0:0 -> setCheckable
    3:14:boolean androidx.appcompat.view.menu.MenuItemImpl.isExclusiveCheckable():0:0 -> setChecked
    3:14:void setChecked(boolean):0 -> setChecked
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:33:void insertRadioButton():0:0 -> setChecked
    15:33:void setChecked(boolean):0 -> setChecked
    34:47:void addContentView(android.view.View,int):0:0 -> setChecked
    34:47:void addContentView(android.view.View):0 -> setChecked
    34:47:void insertRadioButton():0 -> setChecked
    34:47:void setChecked(boolean):0 -> setChecked
    48:66:void insertCheckBox():0:0 -> setChecked
    48:66:void setChecked(boolean):0 -> setChecked
    67:75:void addContentView(android.view.View,int):0:0 -> setChecked
    67:75:void addContentView(android.view.View):0 -> setChecked
    67:75:void insertCheckBox():0 -> setChecked
    67:75:void setChecked(boolean):0 -> setChecked
    76:79:void setChecked(boolean):0:0 -> setChecked
    3:4:boolean androidx.appcompat.view.menu.MenuItemImpl.shouldShowIcon():0:0 -> setIcon
    3:4:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:30:boolean androidx.appcompat.view.menu.MenuItemImpl.shouldShowIcon():0:0 -> setIcon
    5:30:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    31:49:void insertIconView():0:0 -> setIcon
    31:49:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    50:67:void addContentView(android.view.View,int):0:0 -> setIcon
    50:67:void insertIconView():0 -> setIcon
    50:67:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    68:94:void setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
androidx.appcompat.view.menu.MenuAdapter -> l.h:
# {"id":"sourceFile","fileName":"MenuAdapter.java"}
    androidx.appcompat.view.menu.MenuBuilder mAdapterMenu -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/j;"}
    int mExpandedIndex -> c
    boolean mForceShowIcon -> d
    boolean mOverflowOnly -> e
    android.view.LayoutInflater mInflater -> f
    int mItemLayoutRes -> g
    1:1:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Landroid/view/LayoutInflater;ZI)V"}
    3:6:androidx.appcompat.view.menu.MenuItemImpl androidx.appcompat.view.menu.MenuBuilder.getExpandedItem():0:0 -> a
    3:6:void findExpandedIndex():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:9:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> a
    7:9:void findExpandedIndex():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:11:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> a
    10:11:void findExpandedIndex():0 -> a
    12:36:void findExpandedIndex():0:0 -> a
    7:9:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> b
    7:9:androidx.appcompat.view.menu.MenuItemImpl getItem(int):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll/k;"}
    10:12:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> b
    10:12:androidx.appcompat.view.menu.MenuItemImpl getItem(int):0 -> b
    13:31:androidx.appcompat.view.menu.MenuItemImpl getItem(int):0:0 -> b
    7:9:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> getCount
    7:9:int getCount():0 -> getCount
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:12:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> getCount
    10:12:int getCount():0 -> getCount
    13:28:int getCount():0:0 -> getCount
    1:1:java.lang.Object getItem(int):0:0 -> getItem
    1:1:long getItemId(int):0:0 -> getItemId
    16:21:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> getView
    16:21:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    22:25:android.view.View getView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
    26:29:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> getView
    26:29:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    30:65:android.view.View getView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
    1:1:void notifyDataSetChanged():0:0 -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuBuilder -> l.j:
# {"id":"sourceFile","fileName":"MenuBuilder.java"}
    android.content.Context mContext -> a
    android.content.res.Resources mResources -> b
    boolean mQwertyMode -> c
    boolean mShortcutsVisible -> d
    androidx.appcompat.view.menu.MenuBuilder$Callback mCallback -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/o;"}
    java.util.ArrayList mItems -> f
    java.util.ArrayList mVisibleItems -> g
    boolean mIsVisibleItemsStale -> h
    java.util.ArrayList mActionItems -> i
    java.util.ArrayList mNonActionItems -> j
    boolean mIsActionItemsStale -> k
    java.lang.CharSequence mHeaderTitle -> l
    boolean mPreventDispatchingItemsChanged -> m
    boolean mItemsChangedWhileDispatchPrevented -> n
    boolean mStructureChangedWhileDispatchPrevented -> o
    boolean mIsClosing -> p
    java.util.ArrayList mTempShortcutItemList -> q
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> r
    androidx.appcompat.view.menu.MenuItemImpl mExpandedItem -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/k;"}
    boolean mGroupDividerEnabled -> t
    int[] sCategoryToOrder -> u
    1:1:void <clinit>():0:0 -> <clinit>
    70:89:void androidx.appcompat.view.menu.MenuBuilder.setShortcutsVisibleInner(boolean):0:0 -> <init>
    70:89:void <init>(android.content.Context):0 -> <init>
    90:106:boolean androidx.core.view.ViewConfigurationCompat.shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context):0:0 -> <init>
    90:106:void androidx.appcompat.view.menu.MenuBuilder.setShortcutsVisibleInner(boolean):0 -> <init>
    90:106:void <init>(android.content.Context):0 -> <init>
    107:112:int androidx.core.view.ViewConfigurationCompat.getPlatformResId(android.content.res.Resources,java.lang.String,java.lang.String):0:0 -> <init>
    107:112:boolean androidx.core.view.ViewConfigurationCompat.shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context):0 -> <init>
    107:112:void androidx.appcompat.view.menu.MenuBuilder.setShortcutsVisibleInner(boolean):0 -> <init>
    107:112:void <init>(android.content.Context):0 -> <init>
    113:122:boolean androidx.core.view.ViewConfigurationCompat.shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context):0:0 -> <init>
    113:122:void androidx.appcompat.view.menu.MenuBuilder.setShortcutsVisibleInner(boolean):0 -> <init>
    113:122:void <init>(android.content.Context):0 -> <init>
    13:21:int androidx.appcompat.view.menu.MenuBuilder.getOrdering(int):0:0 -> a
    13:21:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIILjava/lang/CharSequence;)Ll/k;"}
    22:35:androidx.appcompat.view.menu.MenuItemImpl androidx.appcompat.view.menu.MenuBuilder.createNewMenuItem(int,int,int,int,java.lang.CharSequence,int):0:0 -> a
    22:35:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    36:49:int androidx.appcompat.view.menu.MenuBuilder.findInsertIndex(java.util.ArrayList,int):0:0 -> a
    36:49:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    50:59:int androidx.appcompat.view.menu.MenuItemImpl.getOrdering():0:0 -> a
    50:59:int androidx.appcompat.view.menu.MenuBuilder.findInsertIndex(java.util.ArrayList,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    50:59:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    60:66:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0:0 -> a
    67:74:int androidx.appcompat.view.menu.MenuBuilder.getOrdering(int):0:0 -> a
    67:74:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    1:1:android.view.MenuItem add(int):0:0 -> add
    2:2:android.view.MenuItem add(int,int,int,int):0:0 -> add
    3:3:android.view.MenuItem add(int,int,int,java.lang.CharSequence):0:0 -> add
    4:4:android.view.MenuItem add(java.lang.CharSequence):0:0 -> add
    1:1:android.view.MenuItem androidx.appcompat.view.menu.MenuBuilder.add(int,int,int,java.lang.CharSequence):0:0 -> addIntentOptions
    1:1:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]):0 -> addIntentOptions
    2:2:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]):0:0 -> addIntentOptions
    3:3:android.view.MenuItem androidx.appcompat.view.menu.MenuItemImpl.setIntent(android.content.Intent):0:0 -> addIntentOptions
    3:3:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]):0 -> addIntentOptions
    4:4:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]):0:0 -> addIntentOptions
    1:1:android.view.SubMenu addSubMenu(int):0:0 -> addSubMenu
    2:2:android.view.SubMenu addSubMenu(int,int,int,int):0:0 -> addSubMenu
    3:3:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> addSubMenu
    3:3:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0 -> addSubMenu
    4:4:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> addSubMenu
    4:4:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0 -> addSubMenu
    4:4:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0 -> addSubMenu
    5:5:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> addSubMenu
    5:5:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0 -> addSubMenu
    6:6:android.view.SubMenu addSubMenu(java.lang.CharSequence):0:0 -> addSubMenu
    1:1:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Landroid/content/Context;)V"}
    1:1:void close(boolean):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:void clearHeader():0:0 -> clearHeader
    1:1:void close():0:0 -> close
    1:1:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
    5:8:boolean androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback.onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> e
    5:8:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Landroid/view/MenuItem;)Z"}
    9:14:boolean androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback.onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> e
    9:14:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0 -> e
    15:18:boolean androidx.appcompat.widget.Toolbar$1.onMenuItemClick(android.view.MenuItem):0:0 -> e
    15:18:boolean androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback.onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:18:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0 -> e
    19:23:boolean androidx.appcompat.widget.Toolbar$1.onMenuItemClick(android.view.MenuItem):0:0 -> e
    19:23:boolean androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback.onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0 -> e
    19:23:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0 -> e
    1:1:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
    3:9:int androidx.appcompat.view.menu.MenuBuilder.size():0:0 -> findItem
    3:9:android.view.MenuItem findItem(int):0 -> findItem
    10:15:android.view.MenuItem findItem(int):0:0 -> findItem
    16:20:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> findItem
    16:20:android.view.MenuItem findItem(int):0 -> findItem
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    21:26:android.view.MenuItem findItem(int):0:0 -> findItem
    27:28:android.view.SubMenu androidx.appcompat.view.menu.MenuItemImpl.getSubMenu():0:0 -> findItem
    27:28:android.view.MenuItem findItem(int):0 -> findItem
    29:40:android.view.MenuItem findItem(int):0:0 -> findItem
    59:61:char androidx.appcompat.view.menu.MenuItemImpl.getAlphabeticShortcut():0:0 -> g
    59:61:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent):0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroid/view/KeyEvent;)Ll/k;"}
    62:65:char androidx.appcompat.view.menu.MenuItemImpl.getNumericShortcut():0:0 -> g
    62:65:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent):0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    66:97:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent):0:0 -> g
    1:1:android.view.MenuItem getItem(int):0:0 -> getItem
    55:56:android.view.SubMenu androidx.appcompat.view.menu.MenuItemImpl.getSubMenu():0:0 -> h
    55:56:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;ILandroid/view/KeyEvent;)V"}
    57:61:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0:0 -> h
    62:64:char androidx.appcompat.view.menu.MenuItemImpl.getAlphabeticShortcut():0:0 -> h
    62:64:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    65:68:char androidx.appcompat.view.menu.MenuItemImpl.getNumericShortcut():0:0 -> h
    65:68:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    69:71:int androidx.appcompat.view.menu.MenuItemImpl.getAlphabeticModifiers():0:0 -> h
    69:71:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    72:85:int androidx.appcompat.view.menu.MenuItemImpl.getNumericModifiers():0:0 -> h
    72:85:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    86:123:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0:0 -> h
    3:10:int androidx.appcompat.view.menu.MenuBuilder.size():0:0 -> hasVisibleItems
    3:10:boolean hasVisibleItems():0 -> hasVisibleItems
    11:28:boolean hasVisibleItems():0:0 -> hasVisibleItems
    1:1:void flagActionItems():0:0 -> i
    1:1:boolean isShortcutKey(int,android.view.KeyEvent):0:0 -> isShortcutKey
    1:1:androidx.appcompat.view.menu.MenuBuilder getRootMenu():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/j;"}
    1:1:java.util.ArrayList getVisibleItems():0:0 -> k
    1:1:boolean isGroupDividerEnabled():0:0 -> l
    1:1:boolean isQwertyMode():0:0 -> m
    1:1:boolean isShortcutsVisible():0:0 -> n
    14:66:void androidx.appcompat.view.menu.MenuBuilder.dispatchPresenterUpdate(boolean):0:0 -> o
    14:66:void onItemsChanged(boolean):0 -> o
    14:39:boolean androidx.appcompat.view.menu.MenuItemImpl.invoke():0:0 -> p
    14:39:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/MenuItem;Ll/p;I)Z"}
    40:41:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> p
    40:41:boolean androidx.appcompat.view.menu.MenuItemImpl.invoke():0 -> p
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    40:41:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> p
    42:54:boolean androidx.appcompat.view.menu.MenuItemImpl.invoke():0:0 -> p
    42:54:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> p
    55:102:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0:0 -> p
    103:104:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> p
    103:104:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> p
    105:106:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> p
    105:106:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0 -> p
    105:106:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> p
    107:109:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> p
    107:109:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> p
    110:113:android.view.SubMenu androidx.appcompat.view.menu.MenuItemImpl.getSubMenu():0:0 -> p
    110:113:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> p
    114:167:boolean androidx.appcompat.view.menu.MenuBuilder.dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter):0:0 -> p
    114:167:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> p
    6:10:boolean androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int):0:0 -> performIdentifierAction
    6:10:boolean performIdentifierAction(int,int):0 -> performIdentifierAction
    8:18:boolean androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int):0:0 -> performShortcut
    8:18:boolean performShortcut(int,android.view.KeyEvent,int):0 -> performShortcut
    19:22:boolean performShortcut(int,android.view.KeyEvent,int):0:0 -> performShortcut
    26:29:android.graphics.drawable.Drawable androidx.core.content.ContextCompat.getDrawable(android.content.Context,int):0:0 -> q
    26:29:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/CharSequence;ILandroid/view/View;)V"}
    30:33:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0:0 -> q
    1:1:void startDispatchingItemsChanged():0:0 -> r
    3:10:int androidx.appcompat.view.menu.MenuBuilder.size():0:0 -> removeGroup
    3:10:int androidx.appcompat.view.menu.MenuBuilder.findGroupIndex(int,int):0 -> removeGroup
    3:10:int androidx.appcompat.view.menu.MenuBuilder.findGroupIndex(int):0 -> removeGroup
    3:10:void removeGroup(int):0 -> removeGroup
    11:16:int androidx.appcompat.view.menu.MenuBuilder.findGroupIndex(int,int):0:0 -> removeGroup
    11:16:int androidx.appcompat.view.menu.MenuBuilder.findGroupIndex(int):0 -> removeGroup
    11:16:void removeGroup(int):0 -> removeGroup
    17:27:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> removeGroup
    17:27:int androidx.appcompat.view.menu.MenuBuilder.findGroupIndex(int,int):0 -> removeGroup
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    17:27:int androidx.appcompat.view.menu.MenuBuilder.findGroupIndex(int):0 -> removeGroup
    17:27:void removeGroup(int):0 -> removeGroup
    28:42:void removeGroup(int):0:0 -> removeGroup
    43:50:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> removeGroup
    43:50:void removeGroup(int):0 -> removeGroup
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    51:63:void androidx.appcompat.view.menu.MenuBuilder.removeItemAtInt(int,boolean):0:0 -> removeGroup
    51:63:void removeGroup(int):0 -> removeGroup
    64:67:void removeGroup(int):0:0 -> removeGroup
    3:9:int androidx.appcompat.view.menu.MenuBuilder.size():0:0 -> removeItem
    3:9:int androidx.appcompat.view.menu.MenuBuilder.findItemIndex(int):0 -> removeItem
    3:9:void removeItem(int):0 -> removeItem
    10:15:int androidx.appcompat.view.menu.MenuBuilder.findItemIndex(int):0:0 -> removeItem
    10:15:void removeItem(int):0 -> removeItem
    16:28:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> removeItem
    16:28:int androidx.appcompat.view.menu.MenuBuilder.findItemIndex(int):0 -> removeItem
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:28:void removeItem(int):0 -> removeItem
    29:43:void androidx.appcompat.view.menu.MenuBuilder.removeItemAtInt(int,boolean):0:0 -> removeItem
    29:43:void removeItem(int):0 -> removeItem
    1:1:void stopDispatchingItemsChanged():0:0 -> s
    17:20:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> setGroupCheckable
    17:20:void setGroupCheckable(int,boolean,boolean):0 -> setGroupCheckable
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    21:32:void androidx.appcompat.view.menu.MenuItemImpl.setExclusiveCheckable(boolean):0:0 -> setGroupCheckable
    21:32:void setGroupCheckable(int,boolean,boolean):0 -> setGroupCheckable
    33:39:void setGroupCheckable(int,boolean,boolean):0:0 -> setGroupCheckable
    1:1:void setGroupDividerEnabled(boolean):0:0 -> setGroupDividerEnabled
    16:19:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> setGroupEnabled
    16:19:void setGroupEnabled(int,boolean):0 -> setGroupEnabled
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    20:26:void setGroupEnabled(int,boolean):0:0 -> setGroupEnabled
    19:22:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> setGroupVisible
    19:22:void setGroupVisible(int,boolean):0 -> setGroupVisible
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    23:43:boolean androidx.appcompat.view.menu.MenuItemImpl.setVisibleInt(boolean):0:0 -> setGroupVisible
    23:43:void setGroupVisible(int,boolean):0 -> setGroupVisible
    44:47:void setGroupVisible(int,boolean):0:0 -> setGroupVisible
    1:1:void setQwertyMode(boolean):0:0 -> setQwertyMode
    1:1:int size():0:0 -> size
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker -> l.i:
# {"id":"sourceFile","fileName":"MenuBuilder.java"}
    boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
androidx.appcompat.view.menu.MenuItemImpl -> l.k:
# {"id":"sourceFile","fileName":"MenuItemImpl.java"}
    android.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> A
    boolean mIsActionViewExpanded -> B
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    int mShortcutNumericModifiers -> i
    char mShortcutAlphabeticChar -> j
    int mShortcutAlphabeticModifiers -> k
    android.graphics.drawable.Drawable mIconDrawable -> l
    int mIconResId -> m
    androidx.appcompat.view.menu.MenuBuilder mMenu -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/j;"}
    androidx.appcompat.view.menu.SubMenuBuilder mSubMenu -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/t;"}
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> p
    java.lang.CharSequence mContentDescription -> q
    java.lang.CharSequence mTooltipText -> r
    android.content.res.ColorStateList mIconTintList -> s
    android.graphics.PorterDuff$Mode mIconTintMode -> t
    boolean mHasIconTint -> u
    boolean mHasIconTintMode -> v
    boolean mNeedToApplyIconTint -> w
    int mFlags -> x
    int mShowAsAction -> y
    android.view.View mActionView -> z
    1:1:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;IIIILjava/lang/CharSequence;)V"}
    1:1:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String):0:0 -> a
    29:37:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> b
    29:37:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0 -> b
    38:44:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> b
    38:44:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0 -> b
    1:1:boolean hasCollapsibleActionView():0:0 -> c
    1:1:boolean collapseActionView():0:0 -> collapseActionView
    1:1:boolean isActionButton():0:0 -> d
    1:1:void setIsActionButton(boolean):0:0 -> e
    1:1:boolean expandActionView():0:0 -> expandActionView
    1:1:android.view.ActionProvider getActionProvider():0:0 -> getActionProvider
    1:1:android.view.View getActionView():0:0 -> getActionView
    1:1:int getAlphabeticModifiers():0:0 -> getAlphabeticModifiers
    1:1:char getAlphabeticShortcut():0:0 -> getAlphabeticShortcut
    1:1:java.lang.CharSequence getContentDescription():0:0 -> getContentDescription
    1:1:int getGroupId():0:0 -> getGroupId
    16:17:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> getIcon
    16:17:android.graphics.drawable.Drawable getIcon():0 -> getIcon
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:33:android.graphics.drawable.Drawable getIcon():0:0 -> getIcon
    1:1:android.content.res.ColorStateList getIconTintList():0:0 -> getIconTintList
    1:1:android.graphics.PorterDuff$Mode getIconTintMode():0:0 -> getIconTintMode
    1:1:android.content.Intent getIntent():0:0 -> getIntent
    1:1:int getItemId():0:0 -> getItemId
    1:1:android.view.ContextMenu$ContextMenuInfo getMenuInfo():0:0 -> getMenuInfo
    1:1:int getNumericModifiers():0:0 -> getNumericModifiers
    1:1:char getNumericShortcut():0:0 -> getNumericShortcut
    1:1:int getOrder():0:0 -> getOrder
    1:1:android.view.SubMenu getSubMenu():0:0 -> getSubMenu
    1:1:java.lang.CharSequence getTitle():0:0 -> getTitle
    1:1:java.lang.CharSequence getTitleCondensed():0:0 -> getTitleCondensed
    1:1:java.lang.CharSequence getTooltipText():0:0 -> getTooltipText
    1:1:boolean hasSubMenu():0:0 -> hasSubMenu
    1:1:boolean isActionViewExpanded():0:0 -> isActionViewExpanded
    1:1:boolean isCheckable():0:0 -> isCheckable
    1:1:boolean isChecked():0:0 -> isChecked
    1:1:boolean isEnabled():0:0 -> isEnabled
    1:1:boolean isVisible():0:0 -> isVisible
    1:1:android.view.MenuItem setActionProvider(android.view.ActionProvider):0:0 -> setActionProvider
    1:1:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> setActionView
    1:1:androidx.core.internal.view.SupportMenuItem androidx.appcompat.view.menu.MenuItemImpl.setActionView(int):0 -> setActionView
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:android.view.MenuItem setActionView(int):0 -> setActionView
    2:2:androidx.core.internal.view.SupportMenuItem androidx.appcompat.view.menu.MenuItemImpl.setActionView(int):0:0 -> setActionView
    2:2:android.view.MenuItem setActionView(int):0 -> setActionView
    3:3:androidx.core.internal.view.SupportMenuItem androidx.appcompat.view.menu.MenuItemImpl.setActionView(android.view.View):0:0 -> setActionView
    3:3:androidx.core.internal.view.SupportMenuItem androidx.appcompat.view.menu.MenuItemImpl.setActionView(int):0 -> setActionView
    3:3:android.view.MenuItem setActionView(int):0 -> setActionView
    4:4:void androidx.appcompat.view.menu.MenuBuilder.onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> setActionView
    4:4:androidx.core.internal.view.SupportMenuItem androidx.appcompat.view.menu.MenuItemImpl.setActionView(android.view.View):0 -> setActionView
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:androidx.core.internal.view.SupportMenuItem androidx.appcompat.view.menu.MenuItemImpl.setActionView(int):0 -> setActionView
    4:4:android.view.MenuItem setActionView(int):0 -> setActionView
    5:5:void androidx.appcompat.view.menu.MenuBuilder.onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> setActionView
    5:5:androidx.core.internal.view.SupportMenuItem androidx.appcompat.view.menu.MenuItemImpl.setActionView(android.view.View):0 -> setActionView
    5:5:androidx.core.internal.view.SupportMenuItem androidx.appcompat.view.menu.MenuItemImpl.setActionView(int):0 -> setActionView
    5:5:android.view.MenuItem setActionView(int):0 -> setActionView
    6:6:androidx.core.internal.view.SupportMenuItem androidx.appcompat.view.menu.MenuItemImpl.setActionView(android.view.View):0:0 -> setActionView
    6:6:android.view.MenuItem setActionView(android.view.View):0 -> setActionView
    7:7:void androidx.appcompat.view.menu.MenuBuilder.onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> setActionView
    7:7:androidx.core.internal.view.SupportMenuItem androidx.appcompat.view.menu.MenuItemImpl.setActionView(android.view.View):0 -> setActionView
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:android.view.MenuItem setActionView(android.view.View):0 -> setActionView
    8:8:void androidx.appcompat.view.menu.MenuBuilder.onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> setActionView
    8:8:androidx.core.internal.view.SupportMenuItem androidx.appcompat.view.menu.MenuItemImpl.setActionView(android.view.View):0 -> setActionView
    8:8:android.view.MenuItem setActionView(android.view.View):0 -> setActionView
    1:1:android.view.MenuItem setAlphabeticShortcut(char):0:0 -> setAlphabeticShortcut
    2:2:android.view.MenuItem setAlphabeticShortcut(char,int):0:0 -> setAlphabeticShortcut
    1:1:android.view.MenuItem setCheckable(boolean):0:0 -> setCheckable
    14:31:void androidx.appcompat.view.menu.MenuBuilder.setExclusiveItemChecked(android.view.MenuItem):0:0 -> setChecked
    14:31:android.view.MenuItem setChecked(boolean):0 -> setChecked
    32:37:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> setChecked
    32:37:void androidx.appcompat.view.menu.MenuBuilder.setExclusiveItemChecked(android.view.MenuItem):0 -> setChecked
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    32:37:android.view.MenuItem setChecked(boolean):0 -> setChecked
    38:43:boolean androidx.appcompat.view.menu.MenuItemImpl.isExclusiveCheckable():0:0 -> setChecked
    38:43:void androidx.appcompat.view.menu.MenuBuilder.setExclusiveItemChecked(android.view.MenuItem):0 -> setChecked
    38:43:android.view.MenuItem setChecked(boolean):0 -> setChecked
    44:55:void androidx.appcompat.view.menu.MenuBuilder.setExclusiveItemChecked(android.view.MenuItem):0:0 -> setChecked
    44:55:android.view.MenuItem setChecked(boolean):0 -> setChecked
    56:77:void androidx.appcompat.view.menu.MenuItemImpl.setCheckedInt(boolean):0:0 -> setChecked
    56:77:void androidx.appcompat.view.menu.MenuBuilder.setExclusiveItemChecked(android.view.MenuItem):0 -> setChecked
    56:77:android.view.MenuItem setChecked(boolean):0 -> setChecked
    78:95:void androidx.appcompat.view.menu.MenuBuilder.setExclusiveItemChecked(android.view.MenuItem):0:0 -> setChecked
    78:95:android.view.MenuItem setChecked(boolean):0 -> setChecked
    96:99:void androidx.appcompat.view.menu.MenuItemImpl.setCheckedInt(boolean):0:0 -> setChecked
    96:99:android.view.MenuItem setChecked(boolean):0 -> setChecked
    1:1:android.view.MenuItem setContentDescription(java.lang.CharSequence):0:0 -> setContentDescription
    2:2:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence):0:0 -> setContentDescription
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Ly/b;"}
    1:1:android.view.MenuItem setEnabled(boolean):0:0 -> setEnabled
    1:1:android.view.MenuItem setIcon(int):0:0 -> setIcon
    2:2:android.view.MenuItem setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    1:1:android.view.MenuItem setIconTintList(android.content.res.ColorStateList):0:0 -> setIconTintList
    1:1:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode):0:0 -> setIconTintMode
    1:1:android.view.MenuItem setIntent(android.content.Intent):0:0 -> setIntent
    1:1:android.view.MenuItem setNumericShortcut(char):0:0 -> setNumericShortcut
    2:2:android.view.MenuItem setNumericShortcut(char,int):0:0 -> setNumericShortcut
    1:1:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener):0:0 -> setOnActionExpandListener
    1:1:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener):0:0 -> setOnMenuItemClickListener
    1:1:android.view.MenuItem setShortcut(char,char):0:0 -> setShortcut
    2:2:android.view.MenuItem setShortcut(char,char,int,int):0:0 -> setShortcut
    24:25:void androidx.appcompat.view.menu.MenuBuilder.onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> setShowAsAction
    24:25:void setShowAsAction(int):0 -> setShowAsAction
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    26:29:void androidx.appcompat.view.menu.MenuBuilder.onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> setShowAsAction
    26:29:void setShowAsAction(int):0 -> setShowAsAction
    1:4:androidx.core.internal.view.SupportMenuItem androidx.appcompat.view.menu.MenuItemImpl.setShowAsActionFlags(int):0:0 -> setShowAsActionFlags
    1:4:android.view.MenuItem setShowAsActionFlags(int):0 -> setShowAsActionFlags
    1:1:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> setTitle
    1:1:android.view.MenuItem setTitle(int):0 -> setTitle
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:android.view.MenuItem setTitle(int):0:0 -> setTitle
    3:3:android.view.MenuItem setTitle(java.lang.CharSequence):0:0 -> setTitle
    1:1:android.view.MenuItem setTitleCondensed(java.lang.CharSequence):0:0 -> setTitleCondensed
    1:1:android.view.MenuItem setTooltipText(java.lang.CharSequence):0:0 -> setTooltipText
    2:2:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence):0:0 -> setTooltipText
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Ly/b;"}
    19:20:void androidx.appcompat.view.menu.MenuBuilder.onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> setVisible
    19:20:android.view.MenuItem setVisible(boolean):0 -> setVisible
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    21:24:void androidx.appcompat.view.menu.MenuBuilder.onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> setVisible
    21:24:android.view.MenuItem setVisible(boolean):0 -> setVisible
    1:1:java.lang.String toString():0:0 -> toString
androidx.appcompat.view.menu.MenuPopup -> l.l:
# {"id":"sourceFile","fileName":"MenuPopup.java"}
    android.graphics.Rect mEpicenterBounds -> b
    1:1:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll/j;)V"}
    1:1:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
    1:1:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
    void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;)V"}
    1:1:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/h;Landroid/content/Context;I)I"}
    void setAnchorView(android.view.View) -> n
    void setForceShowIcon(boolean) -> o
    7:23:androidx.appcompat.view.menu.MenuAdapter androidx.appcompat.view.menu.MenuPopup.toMenuAdapter(android.widget.ListAdapter):0:0 -> onItemClick
    7:23:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0 -> onItemClick
    24:31:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemClick
    32:40:boolean androidx.appcompat.view.menu.MenuPopup.closeMenuOnSubMenuOpened():0:0 -> onItemClick
    32:40:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0 -> onItemClick
    41:44:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemClick
    void setGravity(int) -> p
    void setHorizontalOffset(int) -> q
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> r
    void setShowTitle(boolean) -> s
    void setVerticalOffset(int) -> t
    1:2:int androidx.appcompat.view.menu.MenuBuilder.size():0:0 -> u
    1:2:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder):0 -> u
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;)Z"}
    3:10:int androidx.appcompat.view.menu.MenuBuilder.size():0:0 -> u
    3:10:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder):0 -> u
    11:32:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder):0:0 -> u
androidx.appcompat.view.menu.MenuPopupHelper -> l.n:
# {"id":"sourceFile","fileName":"MenuPopupHelper.java"}
    android.content.Context mContext -> a
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/j;"}
    boolean mOverflowOnly -> c
    int mPopupStyleAttr -> d
    int mPopupStyleRes -> e
    android.view.View mAnchorView -> f
    int mDropDownGravity -> g
    boolean mForceShowIcon -> h
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/o;"}
    androidx.appcompat.view.menu.MenuPopup mPopup -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/l;"}
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> k
    android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/m;"}
    1:1:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILandroid/content/Context;Landroid/view/View;Ll/j;Z)V"}
    9:117:androidx.appcompat.view.menu.MenuPopup androidx.appcompat.view.menu.MenuPopupHelper.createPopup():0:0 -> a
    9:117:androidx.appcompat.view.menu.MenuPopup getPopup():0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/l;"}
    1:1:boolean isShowing():0:0 -> b
    1:1:void onDismiss():0:0 -> c
    16:19:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> d
    16:19:void showPopup(int,int,boolean,boolean):0 -> d
    20:30:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> d
    20:30:void showPopup(int,int,boolean,boolean):0 -> d
    31:72:void showPopup(int,int,boolean,boolean):0:0 -> d
    73:74:void androidx.appcompat.view.menu.MenuPopup.setEpicenterBounds(android.graphics.Rect):0:0 -> d
    73:74:void showPopup(int,int,boolean,boolean):0 -> d
    75:78:void showPopup(int,int,boolean,boolean):0:0 -> d
androidx.appcompat.view.menu.MenuPopupHelper$1 -> l.m:
# {"id":"sourceFile","fileName":"MenuPopupHelper.java"}
    androidx.appcompat.view.menu.MenuPopupHelper this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/n;"}
    1:1:void <init>(androidx.appcompat.view.menu.MenuPopupHelper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/n;)V"}
    1:1:void onDismiss():0:0 -> onDismiss
androidx.appcompat.view.menu.MenuPresenter -> l.p:
# {"id":"sourceFile","fileName":"MenuPresenter.java"}
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Z)V"}
    void updateMenuView(boolean) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll/j;)V"}
    boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/t;)Z"}
    void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/o;)V"}
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
    boolean flagActionItems() -> j
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
androidx.appcompat.view.menu.MenuPresenter$Callback -> l.o:
# {"id":"sourceFile","fileName":"MenuPresenter.java"}
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Z)V"}
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;)Z"}
androidx.appcompat.view.menu.MenuView$ItemView -> l.q:
# {"id":"sourceFile","fileName":"MenuView.java"}
    void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)V"}
    androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/k;"}
androidx.appcompat.view.menu.ShowableListMenu -> l.r:
# {"id":"sourceFile","fileName":"ShowableListMenu.java"}
    void dismiss() -> dismiss
    boolean isShowing() -> e
    android.widget.ListView getListView() -> f
    void show() -> h
androidx.appcompat.view.menu.StandardMenuPopup -> l.s:
# {"id":"sourceFile","fileName":"StandardMenuPopup.java"}
    android.content.Context mContext -> c
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/j;"}
    androidx.appcompat.view.menu.MenuAdapter mAdapter -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/h;"}
    boolean mOverflowOnly -> f
    int mPopupMaxWidth -> g
    int mPopupStyleAttr -> h
    int mPopupStyleRes -> i
    androidx.appcompat.widget.MenuPopupWindow mPopup -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/x0;"}
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/c;"}
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/d;"}
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> m
    android.view.View mAnchorView -> n
    android.view.View mShownAnchorView -> o
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/o;"}
    android.view.ViewTreeObserver mTreeObserver -> q
    boolean mWasDismissed -> r
    boolean mHasContentWidth -> s
    int mContentWidth -> t
    int mDropDownGravity -> u
    boolean mShowTitle -> v
    1:1:void androidx.appcompat.widget.MenuPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILandroid/content/Context;Landroid/view/View;Ll/j;Z)V"}
    2:2:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean):0:0 -> <init>
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Z)V"}
    1:1:void updateMenuView(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    33:35:void androidx.appcompat.view.menu.MenuPopupHelper.setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> d
    33:35:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/t;)Z"}
    36:45:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> d
    46:57:void androidx.appcompat.view.menu.MenuPopupHelper.setForceShowIcon(boolean):0:0 -> d
    46:57:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
    58:62:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> d
    63:64:int androidx.appcompat.widget.ListPopupWindow.getHorizontalOffset():0:0 -> d
    63:64:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    65:70:int androidx.appcompat.widget.ListPopupWindow.getVerticalOffset():0:0 -> d
    65:70:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    71:76:int androidx.appcompat.widget.ListPopupWindow.getVerticalOffset():0:0 -> d
    71:76:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
    77:78:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> d
    79:82:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> d
    79:82:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
    83:98:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> d
    99:118:boolean androidx.appcompat.view.menu.MenuPopupHelper.tryShow(int,int):0:0 -> d
    99:118:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
    119:123:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> d
    1:1:void dismiss():0:0 -> dismiss
    7:8:boolean androidx.appcompat.widget.ListPopupWindow.isShowing():0:0 -> e
    7:8:boolean isShowing():0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:18:boolean androidx.appcompat.widget.ListPopupWindow.isShowing():0:0 -> e
    9:18:boolean isShowing():0 -> e
    3:5:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> f
    3:5:android.widget.ListView getListView():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/o;)V"}
    1:20:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0:0 -> h
    1:20:void show():0 -> h
    21:22:void androidx.appcompat.widget.ListPopupWindow.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> h
    21:22:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0 -> h
    21:22:void show():0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    23:25:void androidx.appcompat.widget.ListPopupWindow.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> h
    23:25:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0 -> h
    23:25:void show():0 -> h
    26:28:void androidx.appcompat.widget.ListPopupWindow.setOnItemClickListener(android.widget.AdapterView$OnItemClickListener):0:0 -> h
    26:28:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    26:28:void show():0 -> h
    29:45:void androidx.appcompat.widget.ListPopupWindow.setModal(boolean):0:0 -> h
    29:45:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0 -> h
    29:45:void show():0 -> h
    46:63:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0:0 -> h
    46:63:void show():0 -> h
    64:67:void androidx.appcompat.widget.ListPopupWindow.setAnchorView(android.view.View):0:0 -> h
    64:67:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    64:67:void show():0 -> h
    68:79:void androidx.appcompat.widget.ListPopupWindow.setDropDownGravity(int):0:0 -> h
    68:79:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    68:79:void show():0 -> h
    80:89:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0:0 -> h
    80:89:void show():0 -> h
    90:111:void androidx.appcompat.widget.ListPopupWindow.setContentWidth(int):0:0 -> h
    90:111:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0 -> h
    90:111:void show():0 -> h
    112:114:void androidx.appcompat.widget.ListPopupWindow.setWidth(int):0:0 -> h
    112:114:void androidx.appcompat.widget.ListPopupWindow.setContentWidth(int):0 -> h
    112:114:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0 -> h
    112:114:void show():0 -> h
    115:124:void androidx.appcompat.widget.ListPopupWindow.setInputMethodMode(int):0:0 -> h
    115:124:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0 -> h
    115:124:void show():0 -> h
    125:133:void androidx.appcompat.widget.ListPopupWindow.setEpicenterBounds(android.graphics.Rect):0:0 -> h
    125:133:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0 -> h
    125:133:void show():0 -> h
    134:136:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0:0 -> h
    134:136:void show():0 -> h
    137:138:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> h
    137:138:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    137:138:void show():0 -> h
    139:147:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0:0 -> h
    139:147:void show():0 -> h
    148:151:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> h
    148:151:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    148:151:void show():0 -> h
    152:175:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0:0 -> h
    152:175:void show():0 -> h
    176:177:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> h
    176:177:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    176:177:void show():0 -> h
    178:193:boolean androidx.appcompat.view.menu.StandardMenuPopup.tryShow():0:0 -> h
    178:193:void show():0 -> h
    194:201:void show():0:0 -> h
    1:1:boolean flagActionItems():0:0 -> j
    1:1:void addMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;)V"}
    1:1:void setAnchorView(android.view.View):0:0 -> n
    3:5:void androidx.appcompat.view.menu.MenuAdapter.setForceShowIcon(boolean):0:0 -> o
    3:5:void setForceShowIcon(boolean):0 -> o
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:12:void androidx.appcompat.view.menu.MenuBuilder.close():0:0 -> onDismiss
    6:12:void onDismiss():0 -> onDismiss
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:51:void onDismiss():0:0 -> onDismiss
    1:1:boolean onKey(android.view.View,int,android.view.KeyEvent):0:0 -> onKey
    1:1:void setGravity(int):0:0 -> p
    3:5:void androidx.appcompat.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> q
    3:5:void setHorizontalOffset(int):0 -> q
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> r
    1:1:void setShowTitle(boolean):0:0 -> s
    3:5:void androidx.appcompat.widget.ListPopupWindow.setVerticalOffset(int):0:0 -> t
    3:5:void setVerticalOffset(int):0 -> t
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:8:void androidx.appcompat.widget.ListPopupWindow.setVerticalOffset(int):0:0 -> t
    6:8:void setVerticalOffset(int):0 -> t
androidx.appcompat.view.menu.StandardMenuPopup$1 -> R8$$REMOVED$$CLASS$$12:
# {"id":"sourceFile","fileName":"StandardMenuPopup.java"}
androidx.appcompat.view.menu.StandardMenuPopup$2 -> R8$$REMOVED$$CLASS$$13:
# {"id":"sourceFile","fileName":"StandardMenuPopup.java"}
androidx.appcompat.view.menu.SubMenuBuilder -> l.t:
# {"id":"sourceFile","fileName":"SubMenuBuilder.java"}
    androidx.appcompat.view.menu.MenuBuilder mParentMenu -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/j;"}
    androidx.appcompat.view.menu.MenuItemImpl mItem -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/k;"}
    1:1:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll/j;Ll/k;)V"}
    1:1:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
    1:1:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Landroid/view/MenuItem;)Z"}
    1:1:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
    1:1:android.view.MenuItem getItem():0:0 -> getItem
    1:1:androidx.appcompat.view.menu.MenuBuilder getRootMenu():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/j;"}
    1:1:boolean isGroupDividerEnabled():0:0 -> l
    1:1:boolean isQwertyMode():0:0 -> m
    1:1:boolean isShortcutsVisible():0:0 -> n
    1:1:void setGroupDividerEnabled(boolean):0:0 -> setGroupDividerEnabled
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderIconInt(int):0:0 -> setHeaderIcon
    1:1:android.view.SubMenu setHeaderIcon(int):0 -> setHeaderIcon
    2:2:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderIconInt(android.graphics.drawable.Drawable):0:0 -> setHeaderIcon
    2:2:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable):0 -> setHeaderIcon
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderTitleInt(int):0:0 -> setHeaderTitle
    1:1:android.view.SubMenu setHeaderTitle(int):0 -> setHeaderTitle
    2:2:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderTitleInt(java.lang.CharSequence):0:0 -> setHeaderTitle
    2:2:android.view.SubMenu setHeaderTitle(java.lang.CharSequence):0 -> setHeaderTitle
    3:6:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderViewInt(android.view.View):0:0 -> setHeaderView
    3:6:android.view.SubMenu setHeaderView(android.view.View):0 -> setHeaderView
    1:1:android.view.SubMenu setIcon(int):0:0 -> setIcon
    2:2:android.view.SubMenu setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    1:1:void setQwertyMode(boolean):0:0 -> setQwertyMode
androidx.appcompat.widget.AbsActionBarView -> R8$$REMOVED$$CLASS$$14:
# {"id":"sourceFile","fileName":"AbsActionBarView.java"}
androidx.appcompat.widget.ActionBarBackgroundDrawable -> m.a:
# {"id":"sourceFile","fileName":"ActionBarBackgroundDrawable.java"}
    androidx.appcompat.widget.ActionBarContainer mContainer -> a
    1:1:void <init>(androidx.appcompat.widget.ActionBarContainer):0:0 -> <init>
    1:1:void draw(android.graphics.Canvas):0:0 -> draw
    1:1:int getOpacity():0:0 -> getOpacity
    1:1:void getOutline(android.graphics.Outline):0:0 -> getOutline
    1:1:void setAlpha(int):0:0 -> setAlpha
    1:1:void setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
# {"id":"sourceFile","fileName":"ActionBarContainer.java"}
    boolean mIsTransitioning -> b
    android.view.View mActionBarView -> c
    android.view.View mContextView -> d
    android.graphics.drawable.Drawable mBackground -> e
    android.graphics.drawable.Drawable mStackedBackground -> f
    android.graphics.drawable.Drawable mSplitBackground -> g
    boolean mIsSplit -> h
    boolean mIsStacked -> i
    int mHeight -> j
    11:15:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> <init>
    11:15:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    16:86:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    1:1:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView):0:0 -> setTabContainer
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/d1;)V"}
    1:1:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback):0:0 -> startActionModeForChild
    2:2:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int):0:0 -> startActionModeForChild
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
# {"id":"sourceFile","fileName":"ActionBarContextView.java"}
    int androidx.appcompat.widget.AbsActionBarView.mContentHeight -> b
    boolean androidx.appcompat.widget.AbsActionBarView.mEatingTouch -> c
    boolean androidx.appcompat.widget.AbsActionBarView.mEatingHover -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mSubtitle -> f
    android.view.View mCustomView -> g
    android.widget.LinearLayout mTitleLayout -> h
    android.widget.TextView mTitleView -> i
    android.widget.TextView mSubtitleView -> j
    int mTitleStyleRes -> k
    int mSubtitleStyleRes -> l
    boolean mTitleOptional -> m
    4:39:void androidx.appcompat.widget.AbsActionBarView.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    4:39:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:39:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    40:43:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    44:64:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    44:64:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    44:64:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    67:70:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> <init>
    67:70:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    67:70:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    71:84:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    71:84:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    71:84:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    85:94:int androidx.appcompat.widget.TintTypedArray.getLayoutDimension(int,int):0:0 -> <init>
    85:94:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    85:94:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    95:97:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    95:97:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    95:97:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    98:101:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    98:101:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    98:101:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void initTitle():0:0 -> a
    1:1:void androidx.appcompat.widget.AbsActionBarView.onConfigurationChanged(android.content.res.Configuration):0:0 -> b
    1:1:boolean androidx.appcompat.widget.AbsActionBarView.onHoverEvent(android.view.MotionEvent):0:0 -> c
    1:1:boolean androidx.appcompat.widget.AbsActionBarView.onTouchEvent(android.view.MotionEvent):0:0 -> d
    1:31:int androidx.appcompat.widget.AbsActionBarView.positionChild(android.view.View,int,int,int,boolean):0:0 -> e
    1:31:int positionChild(android.view.View,int,int,int,boolean):0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.appcompat.widget.AbsActionBarView.setVisibility(int):0:0 -> f
    1:5:int androidx.appcompat.widget.AbsActionBarView.getAnimatedVisibility():0:0 -> getAnimatedVisibility
    1:5:int getAnimatedVisibility():0 -> getAnimatedVisibility
    1:4:void onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:boolean onHoverEvent(android.view.MotionEvent):0:0 -> onHoverEvent
      # {"id":"com.android.tools.r8.synthesized"}
    104:123:int androidx.appcompat.widget.AbsActionBarView.measureChildView(android.view.View,int,int,int):0:0 -> onMeasure
    104:123:void onMeasure(int,int):0 -> onMeasure
    124:239:void onMeasure(int,int):0:0 -> onMeasure
    1:5:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    int mActionBarHeight -> b
    androidx.appcompat.widget.ContentFrameLayout mContent -> c
    androidx.appcompat.widget.ActionBarContainer mActionBarTop -> d
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/f0;"}
    android.graphics.drawable.Drawable mWindowContentOverlay -> f
    boolean mIgnoreWindowContentOverlay -> g
    boolean mOverlayMode -> h
    boolean mHasNonEmbeddedTabs -> i
    boolean mHideOnContentScroll -> j
    boolean mAnimatingForFling -> k
    int mHideOnContentScrollReference -> l
    android.graphics.Rect mBaseContentInsets -> m
    android.graphics.Rect mLastBaseContentInsets -> n
    android.graphics.Rect mContentInsets -> o
    android.graphics.Rect mBaseInnerInsets -> p
    android.graphics.Rect mLastBaseInnerInsets -> q
    android.graphics.Rect mInnerInsets -> r
    android.graphics.Rect mLastInnerInsets -> s
    android.widget.OverScroller mFlingEstimator -> t
    android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator -> u
    android.animation.AnimatorListenerAdapter mTopAnimatorListener -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b;"}
    java.lang.Runnable mRemoveActionBarHideOffset -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/c;"}
    java.lang.Runnable mAddActionBarHideOffset -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/c;"}
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld0/j;"}
    int[] ATTRS -> z
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> a
    1:1:void onNestedScroll(android.view.View,int,int,int,int,int,int[]):0:0 -> b
    1:1:void onNestedScroll(android.view.View,int,int,int,int,int):0:0 -> c
    1:1:void onStopNestedScroll(android.view.View,int):0:0 -> d
    1:1:void onNestedPreScroll(android.view.View,int,int,int[],int):0:0 -> e
    1:1:boolean onStartNestedScroll(android.view.View,android.view.View,int,int):0:0 -> f
    6:11:int androidx.core.view.ViewCompat.getWindowSystemUiVisibility(android.view.View):0:0 -> fitSystemWindows
    6:11:boolean fitSystemWindows(android.graphics.Rect):0 -> fitSystemWindows
    12:20:boolean fitSystemWindows(android.graphics.Rect):0:0 -> fitSystemWindows
    21:48:void androidx.appcompat.widget.ViewUtils.computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect):0:0 -> fitSystemWindows
    21:48:boolean fitSystemWindows(android.graphics.Rect):0 -> fitSystemWindows
    49:76:boolean fitSystemWindows(android.graphics.Rect):0:0 -> fitSystemWindows
    1:1:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/FrameLayout;Landroid/graphics/Rect;Z)Z"}
    1:3:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams():0:0 -> generateDefaultLayoutParams
    1:3:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams():0 -> generateDefaultLayoutParams
    4:7:void androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams.<init>(int,int):0:0 -> generateDefaultLayoutParams
    4:7:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams():0 -> generateDefaultLayoutParams
    4:7:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams():0 -> generateDefaultLayoutParams
    1:1:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    2:2:void androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams.<init>(android.content.Context,android.util.AttributeSet):0:0 -> generateLayoutParams
    2:2:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    2:2:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    3:3:void androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams.<init>(android.view.ViewGroup$LayoutParams):0:0 -> generateLayoutParams
    3:3:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0 -> generateLayoutParams
    3:4:int androidx.core.view.NestedScrollingParentHelper.getNestedScrollAxes():0:0 -> getNestedScrollAxes
    3:4:int getNestedScrollAxes():0 -> getNestedScrollAxes
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:8:int androidx.core.view.NestedScrollingParentHelper.getNestedScrollAxes():0:0 -> getNestedScrollAxes
    5:8:int getNestedScrollAxes():0 -> getNestedScrollAxes
    8:9:java.lang.CharSequence androidx.appcompat.widget.ToolbarWidgetWrapper.getTitle():0:0 -> getTitle
    8:9:java.lang.CharSequence getTitle():0 -> getTitle
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:14:java.lang.CharSequence androidx.appcompat.widget.ToolbarWidgetWrapper.getTitle():0:0 -> getTitle
    10:14:java.lang.CharSequence getTitle():0 -> getTitle
    1:1:void haltActionBarHideOffsetAnimations():0:0 -> h
    1:1:void init(android.content.Context):0:0 -> i
    34:74:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View):0:0 -> j
    34:74:void pullChildren():0 -> j
    13:16:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> onConfigurationChanged
    13:16:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    67:88:int androidx.core.view.ViewCompat.getWindowSystemUiVisibility(android.view.View):0:0 -> onMeasure
    67:88:void onMeasure(int,int):0 -> onMeasure
    89:284:void onMeasure(int,int):0:0 -> onMeasure
    21:37:boolean shouldHideActionBarOnFling(float,float):0:0 -> onNestedFling
    21:37:boolean onNestedFling(android.view.View,float,float,boolean):0 -> onNestedFling
    38:46:void addActionBarHideOffset():0:0 -> onNestedFling
    38:46:boolean onNestedFling(android.view.View,float,float,boolean):0 -> onNestedFling
    47:60:void removeActionBarHideOffset():0:0 -> onNestedFling
    47:60:boolean onNestedFling(android.view.View,float,float,boolean):0 -> onNestedFling
    3:4:void androidx.core.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> onNestedScrollAccepted
    3:4:void androidx.core.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    3:4:void onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:14:void onNestedScrollAccepted(android.view.View,android.view.View,int):0:0 -> onNestedScrollAccepted
    21:29:void postRemoveActionBarHideOffset():0:0 -> onStopNestedScroll
    21:29:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    30:38:void postAddActionBarHideOffset():0:0 -> onStopNestedScroll
    30:38:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    1:1:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback):0:0 -> setActionBarVisibilityCallback
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/d;)V"}
    1:1:android.content.Context androidx.appcompat.widget.ToolbarWidgetWrapper.getContext():0:0 -> setIcon
    1:1:void androidx.appcompat.widget.ToolbarWidgetWrapper.setIcon(int):0 -> setIcon
    1:1:void setIcon(int):0 -> setIcon
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    2:2:android.content.Context androidx.appcompat.widget.ToolbarWidgetWrapper.getContext():0:0 -> setIcon
    2:2:void androidx.appcompat.widget.ToolbarWidgetWrapper.setIcon(int):0 -> setIcon
    2:2:void setIcon(int):0 -> setIcon
    3:3:void androidx.appcompat.widget.ToolbarWidgetWrapper.setIcon(int):0:0 -> setIcon
    3:3:void setIcon(int):0 -> setIcon
    4:4:void androidx.appcompat.widget.ToolbarWidgetWrapper.setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    4:4:void androidx.appcompat.widget.ToolbarWidgetWrapper.setIcon(int):0 -> setIcon
    4:4:void setIcon(int):0 -> setIcon
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    5:5:void androidx.appcompat.widget.ToolbarWidgetWrapper.setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    5:5:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void androidx.appcompat.widget.ToolbarWidgetWrapper.setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    6:6:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    10:11:android.content.Context androidx.appcompat.widget.ToolbarWidgetWrapper.getContext():0:0 -> setLogo
    10:11:void androidx.appcompat.widget.ToolbarWidgetWrapper.setLogo(int):0 -> setLogo
    10:11:void setLogo(int):0 -> setLogo
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    12:15:android.content.Context androidx.appcompat.widget.ToolbarWidgetWrapper.getContext():0:0 -> setLogo
    12:15:void androidx.appcompat.widget.ToolbarWidgetWrapper.setLogo(int):0 -> setLogo
    12:15:void setLogo(int):0 -> setLogo
    16:21:void androidx.appcompat.widget.ToolbarWidgetWrapper.setLogo(int):0:0 -> setLogo
    16:21:void setLogo(int):0 -> setLogo
    22:27:void androidx.appcompat.widget.ToolbarWidgetWrapper.setLogo(android.graphics.drawable.Drawable):0:0 -> setLogo
    22:27:void androidx.appcompat.widget.ToolbarWidgetWrapper.setLogo(int):0 -> setLogo
    22:27:void setLogo(int):0 -> setLogo
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    8:10:void androidx.appcompat.widget.ToolbarWidgetWrapper.setWindowCallback(android.view.Window$Callback):0:0 -> setWindowCallback
    8:10:void setWindowCallback(android.view.Window$Callback):0 -> setWindowCallback
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:11:void androidx.appcompat.widget.ToolbarWidgetWrapper.setWindowTitle(java.lang.CharSequence):0:0 -> setWindowTitle
    8:11:void setWindowTitle(java.lang.CharSequence):0 -> setWindowTitle
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:25:void androidx.appcompat.widget.ToolbarWidgetWrapper.setTitleInt(java.lang.CharSequence):0:0 -> setWindowTitle
    12:25:void androidx.appcompat.widget.ToolbarWidgetWrapper.setWindowTitle(java.lang.CharSequence):0 -> setWindowTitle
    12:25:void setWindowTitle(java.lang.CharSequence):0 -> setWindowTitle
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> m.b:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> a
    1:1:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout):0:0 -> <init>
    1:1:void onAnimationCancel(android.animation.Animator):0:0 -> onAnimationCancel
    1:1:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> m.c:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> b
    1:8:void androidx.appcompat.widget.ActionBarOverlayLayout$2.<init>(androidx.appcompat.widget.ActionBarOverlayLayout):0:0 -> <init>
    1:8:void $r8$init$synthetic(androidx.appcompat.widget.ActionBarOverlayLayout,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    8:37:void androidx.appcompat.widget.ActionBarOverlayLayout$3.run():0:0 -> run
    8:37:void run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    38:60:void androidx.appcompat.widget.ActionBarOverlayLayout$2.run():0:0 -> run
    38:60:void run$bridge():0 -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> R8$$REMOVED$$CLASS$$15:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> m.d:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> m.e:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
androidx.appcompat.widget.ActionMenuPresenter -> m.k:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    android.content.Context androidx.appcompat.view.menu.BaseMenuPresenter.mSystemContext -> b
    android.content.Context androidx.appcompat.view.menu.BaseMenuPresenter.mContext -> c
    androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.BaseMenuPresenter.mMenu -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/j;"}
    android.view.LayoutInflater androidx.appcompat.view.menu.BaseMenuPresenter.mSystemInflater -> e
    androidx.appcompat.view.menu.MenuPresenter$Callback androidx.appcompat.view.menu.BaseMenuPresenter.mCallback -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/o;"}
    int androidx.appcompat.view.menu.BaseMenuPresenter.mItemLayoutRes -> g
    androidx.appcompat.view.menu.MenuView androidx.appcompat.view.menu.BaseMenuPresenter.mMenuView -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/ActionMenuView;"}
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/j;"}
    android.graphics.drawable.Drawable mPendingOverflowIcon -> j
    boolean mPendingOverflowIconSet -> k
    boolean mReserveOverflow -> l
    boolean mReserveOverflowSet -> m
    int mWidthLimit -> n
    int mActionItemWidthLimit -> o
    int mMaxItems -> p
    boolean mExpandedActionViewsExclusive -> q
    android.util.SparseBooleanArray mActionButtonGroups -> r
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/f;"}
    androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/f;"}
    androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/h;"}
    androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/g;"}
    androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/o;"}
    1:16:void androidx.appcompat.view.menu.BaseMenuPresenter.<init>(android.content.Context,int,int):0:0 -> <init>
    1:16:void <init>(android.content.Context):0 -> <init>
    17:31:void <init>(android.content.Context):0:0 -> <init>
    1:7:boolean androidx.appcompat.widget.ActionMenuPresenter.dismissPopupMenus():0:0 -> a
    1:7:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Z)V"}
    8:22:void androidx.appcompat.view.menu.MenuPopupHelper.dismiss():0:0 -> a
    8:22:boolean androidx.appcompat.widget.ActionMenuPresenter.hideSubMenus():0 -> a
    8:22:boolean androidx.appcompat.widget.ActionMenuPresenter.dismissPopupMenus():0 -> a
    8:22:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
    23:26:void androidx.appcompat.view.menu.BaseMenuPresenter.onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
    23:26:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
    13:35:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0:0 -> b
    13:35:void updateMenuView(boolean):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    36:41:boolean androidx.appcompat.widget.ActionMenuPresenter.shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> b
    36:41:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0 -> b
    36:41:void updateMenuView(boolean):0 -> b
    42:72:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0:0 -> b
    42:72:void updateMenuView(boolean):0 -> b
    73:94:void androidx.appcompat.view.menu.BaseMenuPresenter.addItemView(android.view.View,int):0:0 -> b
    73:94:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0 -> b
    73:94:void updateMenuView(boolean):0 -> b
    95:100:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0:0 -> b
    95:100:void updateMenuView(boolean):0 -> b
    101:111:boolean androidx.appcompat.widget.ActionMenuPresenter.filterLeftoverView(android.view.ViewGroup,int):0:0 -> b
    101:111:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0 -> b
    101:111:void updateMenuView(boolean):0 -> b
    112:117:boolean androidx.appcompat.view.menu.BaseMenuPresenter.filterLeftoverView(android.view.ViewGroup,int):0:0 -> b
    112:117:boolean androidx.appcompat.widget.ActionMenuPresenter.filterLeftoverView(android.view.ViewGroup,int):0 -> b
    112:117:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0 -> b
    112:117:void updateMenuView(boolean):0 -> b
    118:124:void updateMenuView(boolean):0:0 -> b
    125:127:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getActionItems():0:0 -> b
    125:127:void updateMenuView(boolean):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    128:129:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getActionItems():0:0 -> b
    128:129:void updateMenuView(boolean):0 -> b
    130:152:void updateMenuView(boolean):0:0 -> b
    153:155:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> b
    153:155:void updateMenuView(boolean):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    156:163:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> b
    156:163:void updateMenuView(boolean):0 -> b
    164:176:void updateMenuView(boolean):0:0 -> b
    177:188:boolean androidx.appcompat.view.menu.MenuItemImpl.isActionViewExpanded():0:0 -> b
    177:188:void updateMenuView(boolean):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    189:223:void updateMenuView(boolean):0:0 -> b
    224:229:androidx.appcompat.widget.ActionMenuView$LayoutParams androidx.appcompat.widget.ActionMenuView.generateOverflowButtonLayoutParams():0:0 -> b
    224:229:void updateMenuView(boolean):0 -> b
    230:258:void updateMenuView(boolean):0:0 -> b
    3:7:void androidx.appcompat.view.menu.BaseMenuPresenter.initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    3:7:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll/j;)V"}
    8:18:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    19:32:int androidx.appcompat.view.ActionBarPolicy.getEmbeddedMenuWidthLimit():0:0 -> c
    19:32:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0 -> c
    33:104:int androidx.appcompat.view.ActionBarPolicy.getMaxActionButtons():0:0 -> c
    33:104:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0 -> c
    105:155:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    10:15:android.view.Menu androidx.appcompat.view.menu.SubMenuBuilder.getParentMenu():0:0 -> d
    10:15:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/t;)Z"}
    16:25:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> d
    26:59:android.view.View androidx.appcompat.widget.ActionMenuPresenter.findViewForItem(android.view.MenuItem):0:0 -> d
    26:59:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
    60:64:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> d
    65:74:int androidx.appcompat.view.menu.MenuBuilder.size():0:0 -> d
    65:74:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
    75:111:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> d
    112:116:void androidx.appcompat.view.menu.MenuPopupHelper.setForceShowIcon(boolean):0:0 -> d
    112:116:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
    117:134:boolean androidx.appcompat.view.menu.MenuPopupHelper.tryShow():0:0 -> d
    117:134:void androidx.appcompat.view.menu.MenuPopupHelper.show():0 -> d
    117:134:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    135:138:boolean androidx.appcompat.view.menu.BaseMenuPresenter.onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> d
    135:138:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
    139:146:void androidx.appcompat.view.menu.MenuPopupHelper.show():0:0 -> d
    139:146:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> d
    1:9:android.view.View androidx.appcompat.view.menu.MenuItemImpl.getActionView():0:0 -> e
    1:9:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;Landroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;"}
    10:15:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> e
    16:26:android.view.View androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> e
    16:26:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    27:32:androidx.appcompat.view.menu.MenuView$ItemView androidx.appcompat.view.menu.BaseMenuPresenter.createItemView(android.view.ViewGroup):0:0 -> e
    27:32:android.view.View androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    27:32:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    33:59:void androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView):0:0 -> e
    33:59:android.view.View androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    33:59:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    60:62:android.view.View androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> e
    60:62:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    63:68:boolean androidx.appcompat.view.menu.MenuItemImpl.isActionViewExpanded():0:0 -> e
    63:68:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    69:91:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> e
    21:34:void androidx.appcompat.view.menu.MenuPopupHelper.dismiss():0:0 -> f
    21:34:boolean hideOverflowMenu():0 -> f
    1:1:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/o;)V"}
    9:27:boolean androidx.appcompat.widget.ActionMenuPresenter.isOverflowMenuShowing():0:0 -> h
    9:27:boolean showOverflowMenu():0 -> h
    28:30:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> h
    28:30:boolean showOverflowMenu():0 -> h
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    31:32:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> h
    31:32:boolean showOverflowMenu():0 -> h
    33:66:boolean showOverflowMenu():0:0 -> h
    67:73:boolean androidx.appcompat.view.menu.BaseMenuPresenter.onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> h
    67:73:boolean showOverflowMenu():0 -> h
    1:1:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
    43:63:boolean androidx.appcompat.view.menu.MenuItemImpl.requiresActionButton():0:0 -> j
    43:63:boolean flagActionItems():0 -> j
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    64:86:boolean androidx.appcompat.view.menu.MenuItemImpl.isActionViewExpanded():0:0 -> j
    64:86:boolean flagActionItems():0 -> j
    87:99:boolean flagActionItems():0:0 -> j
    100:108:boolean androidx.appcompat.view.menu.MenuItemImpl.requiresActionButton():0:0 -> j
    100:108:boolean flagActionItems():0 -> j
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    109:206:boolean flagActionItems():0:0 -> j
    207:210:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> j
    207:210:boolean flagActionItems():0 -> j
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    211:246:boolean flagActionItems():0:0 -> j
    1:1:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> m.f:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    int $r8$classId -> m
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/k;"}
    1:1:void androidx.appcompat.view.menu.MenuPopupHelper.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int):0:0 -> <init>
    1:1:void androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup.<init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean):0 -> <init>
    1:1:void $r8$init$synthetic(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/k;Landroid/content/Context;Ll/j;Lm/j;)V"}
    2:2:void androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup.<init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean):0:0 -> <init>
    2:2:void $r8$init$synthetic(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean):0 -> <init>
    3:3:void androidx.appcompat.view.menu.MenuPopupHelper.setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> <init>
    3:3:void androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup.<init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean):0 -> <init>
    3:3:void $r8$init$synthetic(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean):0 -> <init>
    4:4:void androidx.appcompat.view.menu.MenuPopupHelper.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int):0:0 -> <init>
    4:4:void androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu.<init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    4:4:void $r8$init$synthetic(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/k;Landroid/content/Context;Ll/t;Landroid/view/View;)V"}
    5:5:android.view.MenuItem androidx.appcompat.view.menu.SubMenuBuilder.getItem():0:0 -> <init>
    5:5:void androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu.<init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:void $r8$init$synthetic(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    6:6:void androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu.<init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0:0 -> <init>
    6:6:void $r8$init$synthetic(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    7:7:androidx.appcompat.view.menu.MenuView androidx.appcompat.widget.ActionMenuPresenter.access$200(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> <init>
    7:7:void androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu.<init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    7:7:void $r8$init$synthetic(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    8:8:void androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu.<init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0:0 -> <init>
    8:8:void $r8$init$synthetic(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    9:9:void androidx.appcompat.view.menu.MenuPopupHelper.setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> <init>
    9:9:void androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu.<init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    9:9:void $r8$init$synthetic(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    9:13:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuPresenter.access$000(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> c
    9:13:void androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup.onDismiss():0 -> c
    9:13:void onDismiss$bridge():0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    14:16:void androidx.appcompat.view.menu.MenuBuilder.close():0:0 -> c
    14:16:void androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup.onDismiss():0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:16:void onDismiss$bridge():0 -> c
    17:22:void androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup.onDismiss():0:0 -> c
    17:22:void onDismiss$bridge():0 -> c
    23:28:void androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu.onDismiss():0:0 -> c
    23:28:void onDismiss$bridge():0 -> c
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> m.g:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/k;"}
    1:6:void androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback.<init>():0:0 -> <init>
    1:6:void <init>(androidx.appcompat.widget.ActionMenuPresenter):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/k;)V"}
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> m.h:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mPopup -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/f;"}
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/k;"}
    1:1:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/k;Lm/f;)V"}
    3:6:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuPresenter.access$300(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> run
    3:6:void run():0 -> run
    7:10:void androidx.appcompat.view.menu.MenuBuilder.changeMenuMode():0:0 -> run
    7:10:void run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:13:void androidx.appcompat.view.menu.MenuBuilder.changeMenuMode():0:0 -> run
    11:13:void run():0 -> run
    14:17:androidx.appcompat.view.menu.MenuView androidx.appcompat.widget.ActionMenuPresenter.access$500(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> run
    14:17:void run():0 -> run
    18:25:void run():0:0 -> run
    26:32:boolean androidx.appcompat.view.menu.MenuPopupHelper.tryShow():0:0 -> run
    26:32:void run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    33:41:boolean androidx.appcompat.view.menu.MenuPopupHelper.tryShow():0:0 -> run
    33:41:void run():0 -> run
    42:47:void run():0:0 -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> m.j:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/k;"}
    1:1:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/k;Landroid/content/Context;)V"}
    1:1:boolean needsDividerBefore():0:0 -> a
    1:1:boolean needsDividerAfter():0:0 -> b
    1:1:boolean performClick():0:0 -> performClick
    61:64:void androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setFrame
    61:64:boolean setFrame(int,int,int,int):0 -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> m.i:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/j;"}
    1:1:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/j;Landroid/view/View;)V"}
    1:1:androidx.appcompat.view.menu.ShowableListMenu getPopup():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/l;"}
    1:1:boolean onForwardingStarted():0:0 -> c
    1:1:boolean onForwardingStopped():0:0 -> d
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> R8$$REMOVED$$CLASS$$16:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> R8$$REMOVED$$CLASS$$17:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/p;"}
    androidx.appcompat.view.menu.MenuBuilder mMenu -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/j;"}
    android.content.Context mPopupContext -> r
    int mPopupTheme -> s
    androidx.appcompat.widget.ActionMenuPresenter mPresenter -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/k;"}
    androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/o;"}
    androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/o;"}
    boolean mFormatItems -> w
    int mFormatItemsWidth -> x
    int mMinCellSize -> y
    int mGeneratedItemPadding -> z
    2:4:void androidx.appcompat.widget.LinearLayoutCompat.<init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:36:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    5:9:boolean androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int):0:0 -> a
    5:9:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
    1:1:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/n0;"}
    1:6:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> e
    1:6:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/AttributeSet;)Lm/n0;"}
    7:10:void androidx.appcompat.widget.ActionMenuView$LayoutParams.<init>(android.content.Context,android.util.AttributeSet):0:0 -> e
    7:10:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> e
    7:10:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> e
    1:1:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup$LayoutParams;)Lm/n0;"}
    1:1:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    2:2:void androidx.appcompat.widget.ActionMenuView$LayoutParams.<init>(android.content.Context,android.util.AttributeSet):0:0 -> generateLayoutParams
    2:2:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    2:2:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    3:3:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> generateLayoutParams
    23:56:android.view.Menu getMenu():0:0 -> getMenu
    57:58:void androidx.appcompat.widget.ActionMenuPresenter.setMenuView(androidx.appcompat.widget.ActionMenuView):0:0 -> getMenu
    57:58:android.view.Menu getMenu():0 -> getMenu
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    59:65:void androidx.appcompat.widget.ActionMenuPresenter.setMenuView(androidx.appcompat.widget.ActionMenuView):0:0 -> getMenu
    59:65:android.view.Menu getMenu():0 -> getMenu
    6:9:android.graphics.drawable.Drawable androidx.appcompat.widget.ActionMenuPresenter.getOverflowIcon():0:0 -> getOverflowIcon
    6:9:android.graphics.drawable.Drawable getOverflowIcon():0 -> getOverflowIcon
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:23:android.graphics.drawable.Drawable androidx.appcompat.widget.ActionMenuPresenter.getOverflowIcon():0:0 -> getOverflowIcon
    10:23:android.graphics.drawable.Drawable getOverflowIcon():0 -> getOverflowIcon
    4:14:void androidx.appcompat.widget.ActionMenuView$LayoutParams.<init>(int,int):0:0 -> h
    4:14:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams():0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/n;"}
    11:18:void androidx.appcompat.widget.ActionMenuView$LayoutParams.<init>(androidx.appcompat.widget.ActionMenuView$LayoutParams):0:0 -> i
    11:18:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup$LayoutParams;)Lm/n;"}
    19:20:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> i
    21:32:void androidx.appcompat.widget.ActionMenuView$LayoutParams.<init>(android.view.ViewGroup$LayoutParams):0:0 -> i
    21:32:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0 -> i
    33:37:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> i
    1:1:boolean hasSupportDividerBeforeChildAt(int):0:0 -> j
    13:16:boolean androidx.appcompat.widget.ActionMenuPresenter.isOverflowMenuShowing():0:0 -> onConfigurationChanged
    13:16:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    17:24:boolean androidx.appcompat.widget.ActionMenuPresenter.isOverflowMenuShowing():0:0 -> onConfigurationChanged
    17:24:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    25:33:void onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    8:10:boolean androidx.appcompat.widget.ActionMenuPresenter.dismissPopupMenus():0:0 -> onDetachedFromWindow
    8:10:void dismissPopupMenus():0 -> onDetachedFromWindow
    8:10:void onDetachedFromWindow():0 -> onDetachedFromWindow
    11:14:boolean androidx.appcompat.widget.ActionMenuPresenter.hideSubMenus():0:0 -> onDetachedFromWindow
    11:14:boolean androidx.appcompat.widget.ActionMenuPresenter.dismissPopupMenus():0 -> onDetachedFromWindow
    11:14:void dismissPopupMenus():0 -> onDetachedFromWindow
    11:14:void onDetachedFromWindow():0 -> onDetachedFromWindow
    15:26:void androidx.appcompat.view.menu.MenuPopupHelper.dismiss():0:0 -> onDetachedFromWindow
    15:26:boolean androidx.appcompat.widget.ActionMenuPresenter.hideSubMenus():0 -> onDetachedFromWindow
    15:26:boolean androidx.appcompat.widget.ActionMenuPresenter.dismissPopupMenus():0 -> onDetachedFromWindow
    15:26:void dismissPopupMenus():0 -> onDetachedFromWindow
    15:26:void onDetachedFromWindow():0 -> onDetachedFromWindow
    55:178:void onMeasureExactFormat(int,int):0:0 -> onMeasure
    55:178:void onMeasure(int,int):0 -> onMeasure
    179:195:boolean androidx.appcompat.view.menu.ActionMenuItemView.hasText():0:0 -> onMeasure
    179:195:void onMeasureExactFormat(int,int):0 -> onMeasure
    179:195:void onMeasure(int,int):0 -> onMeasure
    196:204:void onMeasureExactFormat(int,int):0:0 -> onMeasure
    196:204:void onMeasure(int,int):0 -> onMeasure
    205:241:int measureChildForCells(android.view.View,int,int,int,int):0:0 -> onMeasure
    205:241:void onMeasureExactFormat(int,int):0 -> onMeasure
    205:241:void onMeasure(int,int):0 -> onMeasure
    242:267:boolean androidx.appcompat.view.menu.ActionMenuItemView.hasText():0:0 -> onMeasure
    242:267:int measureChildForCells(android.view.View,int,int,int,int):0 -> onMeasure
    242:267:void onMeasureExactFormat(int,int):0 -> onMeasure
    242:267:void onMeasure(int,int):0 -> onMeasure
    268:317:int measureChildForCells(android.view.View,int,int,int,int):0:0 -> onMeasure
    268:317:void onMeasureExactFormat(int,int):0 -> onMeasure
    268:317:void onMeasure(int,int):0 -> onMeasure
    318:804:void onMeasureExactFormat(int,int):0:0 -> onMeasure
    318:804:void onMeasure(int,int):0 -> onMeasure
    805:826:void onMeasure(int,int):0:0 -> onMeasure
    3:5:void androidx.appcompat.widget.ActionMenuPresenter.setExpandedActionViewsExclusive(boolean):0:0 -> setExpandedActionViewsExclusive
    3:5:void setExpandedActionViewsExclusive(boolean):0 -> setExpandedActionViewsExclusive
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener):0:0 -> setOnMenuItemClickListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/p;)V"}
    6:9:void androidx.appcompat.widget.ActionMenuPresenter.setOverflowIcon(android.graphics.drawable.Drawable):0:0 -> setOverflowIcon
    6:9:void setOverflowIcon(android.graphics.drawable.Drawable):0 -> setOverflowIcon
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:19:void androidx.appcompat.widget.ActionMenuPresenter.setOverflowIcon(android.graphics.drawable.Drawable):0:0 -> setOverflowIcon
    10:19:void setOverflowIcon(android.graphics.drawable.Drawable):0 -> setOverflowIcon
    3:4:void androidx.appcompat.widget.ActionMenuPresenter.setMenuView(androidx.appcompat.widget.ActionMenuView):0:0 -> setPresenter
    3:4:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter):0 -> setPresenter
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/k;)V"}
    5:9:void androidx.appcompat.widget.ActionMenuPresenter.setMenuView(androidx.appcompat.widget.ActionMenuView):0:0 -> setPresenter
    5:9:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter):0 -> setPresenter
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView -> m.l:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> m.m:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    int $r8$classId -> b
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.preference.EditTextPreference$SimpleSummaryProvider androidx.preference.EditTextPreference$SimpleSummaryProvider.sSimpleSummaryProvider -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/m;"}
    androidx.preference.ListPreference$SimpleSummaryProvider androidx.preference.ListPreference$SimpleSummaryProvider.sSimpleSummaryProvider -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/m;"}
    3:6:void androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback.$r8$init$synthetic(int):0:0 -> <init>
    3:6:void m.ActionMenuView$ActionMenuPresenterCallback.$r8$init$synthetic(int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Z)V"}
    1:1:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;)Z"}
    10:14:void androidx.profileinstaller.ProfileInstaller$2.onDiagnosticReceived(int,java.lang.Object):0:0 -> c
    10:14:void androidx.profileinstaller.ProfileInstaller$1.onDiagnosticReceived$bridge(int,java.lang.Object):0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    53:62:void androidx.profileinstaller.ProfileInstaller$2.onResultReceived(int,java.lang.Object):0:0 -> d
    53:62:void androidx.profileinstaller.ProfileInstaller$1.onResultReceived$bridge(int,java.lang.Object):0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.getkeepsafe.relinker.ApkLibraryInstaller.closeSilently(java.io.Closeable):0:0 -> e
    19:28:void androidx.lifecycle.ReportFragment$Companion.dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/lifecycle/d;)V"}
    1:1:com.getkeepsafe.relinker.ApkLibraryInstaller$ZipFileInZipEntry com.getkeepsafe.relinker.ApkLibraryInstaller.findAPKWithLibrary(android.content.Context,java.lang.String[],java.lang.String,com.getkeepsafe.relinker.ReLinkerInstance):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;[Ljava/lang/String;Ljava/lang/String;Ls0/b;)Lm/y;"}
    1:1:java.lang.String[] com.getkeepsafe.relinker.ApkLibraryInstaller.getSupportedABIs(android.content.Context,java.lang.String):0:0 -> h
    1:1:java.lang.String com.getkeepsafe.relinker.SystemLibraryLoader.mapLibraryName(java.lang.String):0:0 -> i
    10:11:java.lang.CharSequence androidx.preference.ListPreference$SimpleSummaryProvider.provideSummary(androidx.preference.Preference):0:0 -> j
    10:11:java.lang.CharSequence androidx.preference.EditTextPreference$SimpleSummaryProvider.provideSummary$bridge(androidx.preference.Preference):0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    12:27:java.lang.CharSequence androidx.preference.ListPreference$SimpleSummaryProvider.provideSummary(androidx.preference.ListPreference):0:0 -> j
    12:27:java.lang.CharSequence androidx.preference.ListPreference$SimpleSummaryProvider.provideSummary(androidx.preference.Preference):0 -> j
    12:27:java.lang.CharSequence androidx.preference.EditTextPreference$SimpleSummaryProvider.provideSummary$bridge(androidx.preference.Preference):0 -> j
    28:29:java.lang.CharSequence androidx.preference.EditTextPreference$SimpleSummaryProvider.provideSummary(androidx.preference.Preference):0:0 -> j
    28:29:java.lang.CharSequence androidx.preference.EditTextPreference$SimpleSummaryProvider.provideSummary$bridge(androidx.preference.Preference):0 -> j
    30:46:java.lang.CharSequence androidx.preference.EditTextPreference$SimpleSummaryProvider.provideSummary(androidx.preference.EditTextPreference):0:0 -> j
    30:46:java.lang.CharSequence androidx.preference.EditTextPreference$SimpleSummaryProvider.provideSummary(androidx.preference.Preference):0 -> j
    30:46:java.lang.CharSequence androidx.preference.EditTextPreference$SimpleSummaryProvider.provideSummary$bridge(androidx.preference.Preference):0 -> j
    1:1:java.lang.String[] com.getkeepsafe.relinker.ApkLibraryInstaller.sourceDirectories(android.content.Context):0:0 -> k
androidx.appcompat.widget.ActionMenuView$LayoutParams -> m.n:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    boolean isOverflowButton -> c
    int cellsUsed -> d
    int extraPixels -> e
    boolean expandable -> f
    boolean preventEdgeOffset -> g
    boolean expanded -> h
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> m.o:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    androidx.appcompat.widget.ActionMenuView this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:6:void androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback.<init>(androidx.appcompat.widget.ActionMenuView):0:0 -> <init>
    1:6:void $r8$init$synthetic(java.lang.Object):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    17:20:androidx.appcompat.view.menu.MenuPresenter$Callback androidx.appcompat.view.menu.BaseMenuPresenter.getCallback():0:0 -> a
    17:20:void androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback.onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Z)V"}
    21:24:void androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback.onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
    23:26:androidx.appcompat.view.menu.MenuPresenter$Callback androidx.appcompat.view.menu.BaseMenuPresenter.getCallback():0:0 -> b
    23:26:boolean androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback.onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;)Z"}
    27:31:boolean androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback.onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> b
    1:1:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener -> m.p:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
# {"id":"sourceFile","fileName":"ActivityChooserView.java"}
    int[] TINT_ATTRS -> b
    6:10:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> <init>
    6:10:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    11:31:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    11:31:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    32:34:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    35:38:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    35:38:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
# {"id":"sourceFile","fileName":"AlertDialogLayout.java"}
    2:5:void androidx.appcompat.widget.LinearLayoutCompat.<init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:9:int androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> h
    3:9:int resolveMinimumHeight(android.view.View):0 -> h
    10:33:int resolveMinimumHeight(android.view.View):0:0 -> h
    118:121:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onLayout
    118:121:void onLayout(boolean,int,int,int,int):0 -> onLayout
    122:133:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> onLayout
    122:133:void onLayout(boolean,int,int,int,int):0 -> onLayout
    134:165:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    166:168:void setChildFrame(android.view.View,int,int,int,int):0:0 -> onLayout
    166:168:void onLayout(boolean,int,int,int,int):0 -> onLayout
    169:177:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    5:58:boolean tryOnMeasure(int,int):0:0 -> onMeasure
    5:58:void onMeasure(int,int):0 -> onMeasure
    59:67:void onMeasure(int,int):0:0 -> onMeasure
    68:278:boolean tryOnMeasure(int,int):0:0 -> onMeasure
    68:278:void onMeasure(int,int):0 -> onMeasure
    279:335:void forceUniformWidth(int,int):0:0 -> onMeasure
    279:335:boolean tryOnMeasure(int,int):0 -> onMeasure
    279:335:void onMeasure(int,int):0 -> onMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> m.q:
# {"id":"sourceFile","fileName":"AppCompatAutoCompleteTextView.java"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/r;"}
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b0;"}
    int[] TINT_ATTRS -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)V"}
    1:1:void drawableStateChanged():0:0 -> drawableStateChanged
    1:1:android.content.res.ColorStateList getSupportBackgroundTintList():0:0 -> getSupportBackgroundTintList
    1:1:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode():0:0 -> getSupportBackgroundTintMode
    7:24:android.view.inputmethod.InputConnection androidx.appcompat.widget.AppCompatHintHelper.onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View):0:0 -> onCreateInputConnection
    7:24:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo):0 -> onCreateInputConnection
    9:18:void androidx.appcompat.widget.AppCompatBackgroundHelper.onSetBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> setBackgroundDrawable
    9:18:void setBackgroundDrawable(android.graphics.drawable.Drawable):0 -> setBackgroundDrawable
    1:1:void setBackgroundResource(int):0:0 -> setBackgroundResource
    1:1:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback):0:0 -> setCustomSelectionActionModeCallback
    1:1:void setDropDownBackgroundResource(int):0:0 -> setDropDownBackgroundResource
    1:1:void setSupportBackgroundTintList(android.content.res.ColorStateList):0:0 -> setSupportBackgroundTintList
    1:1:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportBackgroundTintMode
    1:1:void setTextAppearance(android.content.Context,int):0:0 -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> m.r:
# {"id":"sourceFile","fileName":"AppCompatBackgroundHelper.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    int mBackgroundResId -> b
    android.view.View mView -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    androidx.appcompat.widget.AppCompatDrawableManager mDrawableManager -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    androidx.appcompat.widget.TintInfo mInternalBackgroundTint -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    androidx.appcompat.widget.TintInfo mBackgroundTint -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    androidx.appcompat.widget.TintInfo mTmpInfo -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:1:void androidx.appcompat.widget.AppCompatBackgroundHelper.<init>(android.view.View):0:0 -> <init>
    1:1:void $r8$init$synthetic(android.view.View):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void androidx.core.provider.FontRequest.<init>(java.lang.String,java.lang.String,java.lang.String,java.util.List):0:0 -> <init>
    2:2:void $r8$init$synthetic(java.lang.String,java.lang.String,java.lang.String,java.util.List):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    3:3:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> <init>
    3:3:void androidx.core.provider.FontRequest.<init>(java.lang.String,java.lang.String,java.lang.String,java.util.List):0 -> <init>
    3:3:void $r8$init$synthetic(java.lang.String,java.lang.String,java.lang.String,java.util.List):0 -> <init>
    4:4:java.lang.String androidx.core.provider.FontRequest.createIdentifier(java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    4:4:void androidx.core.provider.FontRequest.<init>(java.lang.String,java.lang.String,java.lang.String,java.util.List):0 -> <init>
    4:4:void $r8$init$synthetic(java.lang.String,java.lang.String,java.lang.String,java.util.List):0 -> <init>
    32:43:boolean androidx.appcompat.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    32:43:void applySupportBackgroundTint():0 -> a
    44:46:void androidx.appcompat.widget.TintInfo.clear():0:0 -> a
    44:46:boolean androidx.appcompat.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    44:46:void applySupportBackgroundTint():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    47:52:void androidx.appcompat.widget.TintInfo.clear():0:0 -> a
    47:52:boolean androidx.appcompat.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    47:52:void applySupportBackgroundTint():0 -> a
    53:54:boolean androidx.appcompat.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    53:54:void applySupportBackgroundTint():0 -> a
    55:61:android.content.res.ColorStateList androidx.core.view.ViewCompat.getBackgroundTintList(android.view.View):0:0 -> a
    55:61:boolean androidx.appcompat.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    55:61:void applySupportBackgroundTint():0 -> a
    62:65:boolean androidx.appcompat.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    62:65:void applySupportBackgroundTint():0 -> a
    66:71:android.graphics.PorterDuff$Mode androidx.core.view.ViewCompat.getBackgroundTintMode(android.view.View):0:0 -> a
    66:71:boolean androidx.appcompat.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    66:71:void applySupportBackgroundTint():0 -> a
    72:97:boolean androidx.appcompat.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    72:97:void applySupportBackgroundTint():0 -> a
    98:119:void applySupportBackgroundTint():0:0 -> a
    1:1:android.content.res.ColorStateList getSupportBackgroundTintList():0:0 -> b
    1:1:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode():0:0 -> c
    43:43:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatDrawableManager.getTintList(android.content.Context,int):0:0 -> d
    43:43:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    44:52:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatDrawableManager.getTintList(android.content.Context,int):0:0 -> d
    44:52:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    53:60:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    61:63:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatDrawableManager.getTintList(android.content.Context,int):0:0 -> d
    61:63:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    64:82:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    83:128:void androidx.core.view.ViewCompat.setBackgroundTintList(android.view.View,android.content.res.ColorStateList):0:0 -> d
    83:128:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    129:149:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    150:191:void androidx.core.view.ViewCompat.setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode):0:0 -> d
    150:191:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    192:199:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    17:17:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatDrawableManager.getTintList(android.content.Context,int):0:0 -> e
    17:17:void onSetBackgroundResource(int):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:29:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatDrawableManager.getTintList(android.content.Context,int):0:0 -> e
    18:29:void onSetBackgroundResource(int):0 -> e
    30:36:void onSetBackgroundResource(int):0:0 -> e
    1:1:void setInternalBackgroundTint(android.content.res.ColorStateList):0:0 -> f
    1:1:void setSupportBackgroundTintList(android.content.res.ColorStateList):0:0 -> g
    1:1:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode):0:0 -> h
    11:162:java.lang.String androidx.core.provider.FontRequest.toString():0:0 -> toString
    11:162:java.lang.String androidx.core.provider.FontRequest.toString$bridge():0 -> toString
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatDrawableManager -> m.t:
# {"id":"sourceFile","fileName":"AppCompatDrawableManager.java"}
    androidx.appcompat.widget.ResourceManagerInternal mResourceManager -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b1;"}
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> b
    androidx.appcompat.widget.AppCompatDrawableManager INSTANCE -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/t;"}
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:androidx.appcompat.widget.AppCompatDrawableManager get():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/t;"}
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int):0:0 -> b
    10:14:void androidx.appcompat.widget.AppCompatDrawableManager.<init>():0:0 -> c
    10:14:void preload():0 -> c
    15:39:void preload():0:0 -> c
    3:57:void androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0:0 -> d
    3:57:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/drawable/Drawable;Lm/w1;[I)V"}
    58:65:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.ResourceManagerInternal.createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]):0:0 -> d
    58:65:void androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0 -> d
    58:65:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0 -> d
    66:78:void androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0:0 -> d
    66:78:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0 -> d
androidx.appcompat.widget.AppCompatDrawableManager$1 -> m.s:
# {"id":"sourceFile","fileName":"AppCompatDrawableManager.java"}
    int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL -> a
    int[] TINT_COLOR_CONTROL_NORMAL -> b
    int[] COLORFILTER_COLOR_CONTROL_ACTIVATED -> c
    int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY -> d
    int[] TINT_COLOR_CONTROL_STATE_LIST -> e
    int[] TINT_CHECKABLE_BUTTON_LIST -> f
    1:1:void <init>():0:0 -> <init>
    1:1:boolean arrayContains(int[],int):0:0 -> a
    1:1:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int):0:0 -> b
    41:132:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatDrawableManager$1.createSwitchThumbColorStateList(android.content.Context):0:0 -> c
    41:132:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> c
    133:146:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatDrawableManager$1.createDefaultButtonColorStateList(android.content.Context):0:0 -> c
    133:146:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> c
    147:159:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatDrawableManager$1.createBorderlessButtonColorStateList(android.content.Context):0:0 -> c
    147:159:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> c
    160:181:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatDrawableManager$1.createColoredButtonColorStateList(android.content.Context):0:0 -> c
    160:181:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> c
    182:250:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0:0 -> c
    13:14:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> d
    13:14:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode):0 -> d
    15:18:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode):0:0 -> d
    19:24:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.AppCompatDrawableManager.getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> d
    19:24:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode):0 -> d
    25:29:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode):0:0 -> d
    30:31:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.AppCompatDrawableManager.getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> d
    30:31:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode):0 -> d
androidx.appcompat.widget.AppCompatHintHelper -> R8$$REMOVED$$CLASS$$18:
# {"id":"sourceFile","fileName":"AppCompatHintHelper.java"}
androidx.appcompat.widget.AppCompatImageButton -> m.u:
# {"id":"sourceFile","fileName":"AppCompatImageButton.java"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/r;"}
    androidx.appcompat.widget.AppCompatImageHelper mImageHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/v;"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)V"}
    1:1:void drawableStateChanged():0:0 -> drawableStateChanged
    1:1:android.content.res.ColorStateList getSupportBackgroundTintList():0:0 -> getSupportBackgroundTintList
    1:1:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode():0:0 -> getSupportBackgroundTintMode
    6:14:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatImageHelper.getSupportImageTintList():0:0 -> getSupportImageTintList
    6:14:android.content.res.ColorStateList getSupportImageTintList():0 -> getSupportImageTintList
    6:14:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatImageHelper.getSupportImageTintMode():0:0 -> getSupportImageTintMode
    6:14:android.graphics.PorterDuff$Mode getSupportImageTintMode():0 -> getSupportImageTintMode
    3:6:boolean androidx.appcompat.widget.AppCompatImageHelper.hasOverlappingRendering():0:0 -> hasOverlappingRendering
    3:6:boolean hasOverlappingRendering():0 -> hasOverlappingRendering
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:16:boolean androidx.appcompat.widget.AppCompatImageHelper.hasOverlappingRendering():0:0 -> hasOverlappingRendering
    7:16:boolean hasOverlappingRendering():0 -> hasOverlappingRendering
    17:25:boolean hasOverlappingRendering():0:0 -> hasOverlappingRendering
    9:18:void androidx.appcompat.widget.AppCompatBackgroundHelper.onSetBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> setBackgroundDrawable
    9:18:void setBackgroundDrawable(android.graphics.drawable.Drawable):0 -> setBackgroundDrawable
    1:1:void setBackgroundResource(int):0:0 -> setBackgroundResource
    1:1:void setImageBitmap(android.graphics.Bitmap):0:0 -> setImageBitmap
    1:1:void setImageDrawable(android.graphics.drawable.Drawable):0:0 -> setImageDrawable
    1:1:void setImageResource(int):0:0 -> setImageResource
    1:1:void setImageURI(android.net.Uri):0:0 -> setImageURI
    1:1:void setSupportBackgroundTintList(android.content.res.ColorStateList):0:0 -> setSupportBackgroundTintList
    1:1:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportBackgroundTintMode
    5:30:void androidx.appcompat.widget.AppCompatImageHelper.setSupportImageTintList(android.content.res.ColorStateList):0:0 -> setSupportImageTintList
    5:30:void setSupportImageTintList(android.content.res.ColorStateList):0 -> setSupportImageTintList
    5:30:void androidx.appcompat.widget.AppCompatImageHelper.setSupportImageTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportImageTintMode
    5:30:void setSupportImageTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> m.v:
# {"id":"sourceFile","fileName":"AppCompatImageHelper.java"}
    android.widget.ImageView mView -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    androidx.appcompat.widget.TintInfo mInternalImageTint -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/f;"}
    androidx.appcompat.widget.TintInfo mImageTint -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    androidx.appcompat.widget.TintInfo mTmpInfo -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:1:void <init>(android.widget.ImageView):0:0 -> <init>
    37:48:boolean androidx.appcompat.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    37:48:void applySupportImageTint():0 -> a
    49:51:void androidx.appcompat.widget.TintInfo.clear():0:0 -> a
    49:51:boolean androidx.appcompat.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    49:51:void applySupportImageTint():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    52:61:void androidx.appcompat.widget.TintInfo.clear():0:0 -> a
    52:61:boolean androidx.appcompat.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    52:61:void applySupportImageTint():0 -> a
    62:68:android.content.res.ColorStateList androidx.core.widget.ImageViewCompat.getImageTintList(android.widget.ImageView):0:0 -> a
    62:68:boolean androidx.appcompat.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    62:68:void applySupportImageTint():0 -> a
    69:76:boolean androidx.appcompat.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    69:76:void applySupportImageTint():0 -> a
    77:82:android.graphics.PorterDuff$Mode androidx.core.widget.ImageViewCompat.getImageTintMode(android.widget.ImageView):0:0 -> a
    77:82:boolean androidx.appcompat.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    77:82:void applySupportImageTint():0 -> a
    83:116:boolean androidx.appcompat.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    83:116:void applySupportImageTint():0 -> a
    117:142:void applySupportImageTint():0:0 -> a
    1:1:java.lang.Object androidx.collection.ArrayMap$1.colGetEntry(int,int):0:0 -> b
    1:1:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> c
    1:1:void androidx.collection.ArrayMap$1.colRemoveAt(int):0:0 -> d
    1:1:boolean androidx.collection.MapCollections.equalsSetHelper(java.util.Set,java.lang.Object):0:0 -> e
    83:116:void androidx.core.widget.ImageViewCompat.setImageTintList(android.widget.ImageView,android.content.res.ColorStateList):0:0 -> f
    83:116:void loadFromAttributes(android.util.AttributeSet,int):0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    117:136:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> f
    137:169:void androidx.core.widget.ImageViewCompat.setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode):0:0 -> f
    137:169:void loadFromAttributes(android.util.AttributeSet,int):0 -> f
    170:177:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> f
    1:1:void setImageResource(int):0:0 -> g
    1:40:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(java.lang.Object[],int):0:0 -> h
    1:40:java.lang.Object[] androidx.collection.ArrayMap$1.toArrayHelper(java.lang.Object[],int):0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[Ljava/lang/Object;)[Ljava/lang/Object;"}
androidx.appcompat.widget.AppCompatImageView -> m.w:
# {"id":"sourceFile","fileName":"AppCompatImageView.java"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/r;"}
    androidx.appcompat.widget.AppCompatImageHelper mImageHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/v;"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;I)V"}
    1:1:void drawableStateChanged():0:0 -> drawableStateChanged
    1:1:android.content.res.ColorStateList getSupportBackgroundTintList():0:0 -> getSupportBackgroundTintList
    1:1:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode():0:0 -> getSupportBackgroundTintMode
    6:14:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatImageHelper.getSupportImageTintList():0:0 -> getSupportImageTintList
    6:14:android.content.res.ColorStateList getSupportImageTintList():0 -> getSupportImageTintList
    6:14:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatImageHelper.getSupportImageTintMode():0:0 -> getSupportImageTintMode
    6:14:android.graphics.PorterDuff$Mode getSupportImageTintMode():0 -> getSupportImageTintMode
    3:6:boolean androidx.appcompat.widget.AppCompatImageHelper.hasOverlappingRendering():0:0 -> hasOverlappingRendering
    3:6:boolean hasOverlappingRendering():0 -> hasOverlappingRendering
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:16:boolean androidx.appcompat.widget.AppCompatImageHelper.hasOverlappingRendering():0:0 -> hasOverlappingRendering
    7:16:boolean hasOverlappingRendering():0 -> hasOverlappingRendering
    17:25:boolean hasOverlappingRendering():0:0 -> hasOverlappingRendering
    9:18:void androidx.appcompat.widget.AppCompatBackgroundHelper.onSetBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> setBackgroundDrawable
    9:18:void setBackgroundDrawable(android.graphics.drawable.Drawable):0 -> setBackgroundDrawable
    1:1:void setBackgroundResource(int):0:0 -> setBackgroundResource
    1:1:void setImageBitmap(android.graphics.Bitmap):0:0 -> setImageBitmap
    1:1:void setImageDrawable(android.graphics.drawable.Drawable):0:0 -> setImageDrawable
    1:1:void setImageResource(int):0:0 -> setImageResource
    1:1:void setImageURI(android.net.Uri):0:0 -> setImageURI
    1:1:void setSupportBackgroundTintList(android.content.res.ColorStateList):0:0 -> setSupportBackgroundTintList
    1:1:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportBackgroundTintMode
    5:30:void androidx.appcompat.widget.AppCompatImageHelper.setSupportImageTintList(android.content.res.ColorStateList):0:0 -> setSupportImageTintList
    5:30:void setSupportImageTintList(android.content.res.ColorStateList):0 -> setSupportImageTintList
    5:30:void androidx.appcompat.widget.AppCompatImageHelper.setSupportImageTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportImageTintMode
    5:30:void setSupportImageTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatPopupWindow -> m.x:
# {"id":"sourceFile","fileName":"AppCompatPopupWindow.java"}
    1:1:void showAsDropDown(android.view.View,int,int):0:0 -> showAsDropDown
    2:2:void showAsDropDown(android.view.View,int,int,int):0:0 -> showAsDropDown
    1:1:void update(android.view.View,int,int,int,int):0:0 -> update
androidx.appcompat.widget.AppCompatTextClassifierHelper -> m.y:
# {"id":"sourceFile","fileName":"AppCompatTextClassifierHelper.java"}
    android.widget.TextView mTextView -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    android.view.textclassifier.TextClassifier mTextClassifier -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:8:void androidx.core.provider.CallbackWithHandler.<init>(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler):0:0 -> <init>
    1:8:void $r8$init$synthetic(java.lang.Object,java.lang.Object):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:12:boolean androidx.core.provider.FontRequestWorker$TypefaceResult.isSuccess():0:0 -> a
    1:12:void androidx.core.provider.CallbackWithHandler.onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La0/g;)V"}
    13:30:void androidx.core.provider.CallbackWithHandler.onTypefaceRetrieved(android.graphics.Typeface):0:0 -> a
    13:30:void androidx.core.provider.CallbackWithHandler.onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
    31:39:void androidx.core.provider.CallbackWithHandler.onTypefaceRequestFailed(int):0:0 -> a
    31:39:void androidx.core.provider.CallbackWithHandler.onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
androidx.appcompat.widget.AppCompatTextHelper -> m.b0:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    android.widget.TextView mView -> a
    androidx.appcompat.widget.TintInfo mDrawableLeftTint -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/w1;"}
    androidx.appcompat.widget.TintInfo mDrawableTopTint -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/w1;"}
    androidx.appcompat.widget.TintInfo mDrawableRightTint -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/w1;"}
    androidx.appcompat.widget.TintInfo mDrawableBottomTint -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/w1;"}
    androidx.appcompat.widget.TintInfo mDrawableStartTint -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/w1;"}
    androidx.appcompat.widget.TintInfo mDrawableEndTint -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/w1;"}
    androidx.appcompat.widget.TintInfo mDrawableTint -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/w1;"}
    androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/d0;"}
    int mStyle -> j
    int mFontWeight -> k
    android.graphics.Typeface mFontTypeface -> l
    boolean mAsyncFontPending -> m
    1:1:void <init>(android.widget.TextView):0:0 -> <init>
    1:1:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/drawable/Drawable;Lm/w1;)V"}
    1:1:void applyCompoundDrawablesTints():0:0 -> b
    1:1:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatDrawableManager.getTintList(android.content.Context,int):0:0 -> c
    1:1:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lm/t;I)Lm/w1;"}
    2:10:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatDrawableManager.getTintList(android.content.Context,int):0:0 -> c
    2:10:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int):0 -> c
    11:24:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int):0:0 -> c
    25:26:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatDrawableManager.getTintList(android.content.Context,int):0:0 -> c
    25:26:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int):0 -> c
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,int,int[]):0:0 -> d
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    3:3:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> d
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    4:4:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    5:5:void androidx.appcompat.widget.AppCompatTextHelper.setAllCaps(boolean):0:0 -> d
    5:5:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    6:6:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    7:7:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    7:7:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    8:8:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    9:9:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setupAutoSizeUniformPresetSizes(android.content.res.TypedArray):0:0 -> d
    9:9:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0 -> d
    9:9:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    10:10:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    10:10:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    11:11:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    12:12:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextType():0:0 -> d
    12:12:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:13:int[] androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextAvailableSizes():0:0 -> d
    13:13:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:14:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    15:15:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMinTextSize():0:0 -> d
    15:15:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:16:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMinTextSize():0:0 -> d
    16:16:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    17:17:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMaxTextSize():0:0 -> d
    17:17:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:18:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMaxTextSize():0:0 -> d
    18:18:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    19:19:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeStepGranularity():0:0 -> d
    19:19:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    20:20:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeStepGranularity():0:0 -> d
    20:20:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    21:21:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    22:22:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> d
    22:22:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    23:23:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    24:24:void androidx.appcompat.widget.AppCompatTextHelper.setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0:0 -> d
    24:24:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    25:25:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    26:26:void androidx.core.widget.TextViewCompat.setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList):0:0 -> d
    26:26:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    27:27:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    28:28:void androidx.core.widget.TextViewCompat.setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode):0:0 -> d
    28:28:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    29:29:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    30:30:void androidx.core.widget.TextViewCompat.setLineHeight(android.widget.TextView,int):0:0 -> d
    30:30:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    31:31:int androidx.core.util.Preconditions.checkArgumentNonnegative(int):0:0 -> d
    31:31:void androidx.core.widget.TextViewCompat.setLineHeight(android.widget.TextView,int):0 -> d
    31:31:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    3:13:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,int,int[]):0:0 -> e
    3:13:void onSetTextAppearance(android.content.Context,int):0 -> e
    14:26:void onSetTextAppearance(android.content.Context,int):0:0 -> e
    27:36:void androidx.appcompat.widget.AppCompatTextHelper.setAllCaps(boolean):0:0 -> e
    27:36:void onSetTextAppearance(android.content.Context,int):0 -> e
    37:105:void onSetTextAppearance(android.content.Context,int):0:0 -> e
    1:1:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lm/k1;)V"}
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback -> m.a0:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    java.lang.ref.WeakReference mParent -> a
    int mFontWeight -> b
    int mStyle -> c
    1:3:void androidx.core.content.res.ResourcesCompat$FontCallback.<init>():0:0 -> <init>
    1:3:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b0;II)V"}
    4:15:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int):0:0 -> <init>
    1:9:android.os.Handler androidx.core.content.res.ResourcesCompat$FontCallback.getHandler(android.os.Handler):0:0 -> a
    1:9:void androidx.core.content.res.ResourcesCompat$FontCallback.callbackFailAsync(int,android.os.Handler):0 -> a
    1:9:void callbackFailAsync(int,android.os.Handler):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    10:18:void androidx.core.content.res.ResourcesCompat$FontCallback.callbackFailAsync(int,android.os.Handler):0:0 -> a
    10:18:void callbackFailAsync(int,android.os.Handler):0 -> a
    1:9:android.os.Handler androidx.core.content.res.ResourcesCompat$FontCallback.getHandler(android.os.Handler):0:0 -> b
    1:9:void androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler):0 -> b
    1:9:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Typeface;)V"}
    10:19:void androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler):0:0 -> b
    10:19:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler):0 -> b
    42:47:void androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable):0:0 -> c
    42:47:void onFontRetrieved(android.graphics.Typeface):0 -> c
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback -> m.z:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Typeface mTypeface -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    java.lang.ref.WeakReference mParent -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:12:void androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback.<init>(androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback,java.lang.ref.WeakReference,android.graphics.Typeface):0:0 -> <init>
    1:12:void $r8$init$synthetic(java.lang.Object,java.lang.Object,java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    12:37:void androidx.core.provider.RequestExecutor$ReplyRunnable.run():0:0 -> run
    12:37:void run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    38:45:void androidx.core.provider.RequestExecutor$ReplyRunnable$1.run():0:0 -> run
    38:45:void run$bridge():0 -> run
    46:51:void androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter.onTypefaceRetrieved(android.graphics.Typeface):0:0 -> run
    46:51:void androidx.core.provider.CallbackWithHandler$1.run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    46:51:void run$bridge():0 -> run
    52:57:void androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter.onTypefaceRetrieved(android.graphics.Typeface):0:0 -> run
    52:57:void androidx.core.provider.CallbackWithHandler$1.run():0 -> run
    52:57:void run$bridge():0 -> run
    58:68:void androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback.run():0:0 -> run
    58:68:void run$bridge():0 -> run
    69:80:void androidx.appcompat.widget.AppCompatTextHelper.setTypefaceByCallback(android.graphics.Typeface):0:0 -> run
    69:80:void androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback.run():0 -> run
    69:80:void run$bridge():0 -> run
androidx.appcompat.widget.AppCompatTextView -> m.c0:
# {"id":"sourceFile","fileName":"AppCompatTextView.java"}
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/r;"}
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b0;"}
    androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/y;"}
    java.util.concurrent.Future mPrecomputedTextFuture -> e
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    2:2:void androidx.appcompat.widget.AppCompatTextClassifierHelper.<init>(android.widget.TextView):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    22:27:void androidx.core.widget.TextViewCompat.setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat):0:0 -> d
    22:27:void consumeTextFutureAndSetBlocking():0 -> d
    1:1:void drawableStateChanged():0:0 -> drawableStateChanged
    14:15:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMaxTextSize():0:0 -> getAutoSizeMaxTextSize
    14:15:int androidx.appcompat.widget.AppCompatTextHelper.getAutoSizeMaxTextSize():0 -> getAutoSizeMaxTextSize
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:15:int getAutoSizeMaxTextSize():0 -> getAutoSizeMaxTextSize
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    16:17:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMaxTextSize():0:0 -> getAutoSizeMaxTextSize
    16:17:int androidx.appcompat.widget.AppCompatTextHelper.getAutoSizeMaxTextSize():0 -> getAutoSizeMaxTextSize
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:17:int getAutoSizeMaxTextSize():0 -> getAutoSizeMaxTextSize
    18:24:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMaxTextSize():0:0 -> getAutoSizeMaxTextSize
    18:24:int androidx.appcompat.widget.AppCompatTextHelper.getAutoSizeMaxTextSize():0 -> getAutoSizeMaxTextSize
    18:24:int getAutoSizeMaxTextSize():0 -> getAutoSizeMaxTextSize
    14:15:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMinTextSize():0:0 -> getAutoSizeMinTextSize
    14:15:int androidx.appcompat.widget.AppCompatTextHelper.getAutoSizeMinTextSize():0 -> getAutoSizeMinTextSize
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:15:int getAutoSizeMinTextSize():0 -> getAutoSizeMinTextSize
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    16:17:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMinTextSize():0:0 -> getAutoSizeMinTextSize
    16:17:int androidx.appcompat.widget.AppCompatTextHelper.getAutoSizeMinTextSize():0 -> getAutoSizeMinTextSize
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:17:int getAutoSizeMinTextSize():0 -> getAutoSizeMinTextSize
    18:24:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMinTextSize():0:0 -> getAutoSizeMinTextSize
    18:24:int androidx.appcompat.widget.AppCompatTextHelper.getAutoSizeMinTextSize():0 -> getAutoSizeMinTextSize
    18:24:int getAutoSizeMinTextSize():0 -> getAutoSizeMinTextSize
    14:15:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeStepGranularity():0:0 -> getAutoSizeStepGranularity
    14:15:int androidx.appcompat.widget.AppCompatTextHelper.getAutoSizeStepGranularity():0 -> getAutoSizeStepGranularity
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:15:int getAutoSizeStepGranularity():0 -> getAutoSizeStepGranularity
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    16:17:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeStepGranularity():0:0 -> getAutoSizeStepGranularity
    16:17:int androidx.appcompat.widget.AppCompatTextHelper.getAutoSizeStepGranularity():0 -> getAutoSizeStepGranularity
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:17:int getAutoSizeStepGranularity():0 -> getAutoSizeStepGranularity
    18:24:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeStepGranularity():0:0 -> getAutoSizeStepGranularity
    18:24:int androidx.appcompat.widget.AppCompatTextHelper.getAutoSizeStepGranularity():0 -> getAutoSizeStepGranularity
    18:24:int getAutoSizeStepGranularity():0 -> getAutoSizeStepGranularity
    14:15:int[] androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextAvailableSizes():0:0 -> getAutoSizeTextAvailableSizes
    14:15:int[] androidx.appcompat.widget.AppCompatTextHelper.getAutoSizeTextAvailableSizes():0 -> getAutoSizeTextAvailableSizes
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:15:int[] getAutoSizeTextAvailableSizes():0 -> getAutoSizeTextAvailableSizes
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    16:22:int[] androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextAvailableSizes():0:0 -> getAutoSizeTextAvailableSizes
    16:22:int[] androidx.appcompat.widget.AppCompatTextHelper.getAutoSizeTextAvailableSizes():0 -> getAutoSizeTextAvailableSizes
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:22:int[] getAutoSizeTextAvailableSizes():0 -> getAutoSizeTextAvailableSizes
    19:20:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextType():0:0 -> getAutoSizeTextType
    19:20:int androidx.appcompat.widget.AppCompatTextHelper.getAutoSizeTextType():0 -> getAutoSizeTextType
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    19:20:int getAutoSizeTextType():0 -> getAutoSizeTextType
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    21:24:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextType():0:0 -> getAutoSizeTextType
    21:24:int androidx.appcompat.widget.AppCompatTextHelper.getAutoSizeTextType():0 -> getAutoSizeTextType
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    21:24:int getAutoSizeTextType():0 -> getAutoSizeTextType
    1:16:int androidx.core.widget.TextViewCompat.getFirstBaselineToTopHeight(android.widget.TextView):0:0 -> getFirstBaselineToTopHeight
    1:16:int getFirstBaselineToTopHeight():0 -> getFirstBaselineToTopHeight
    1:16:int androidx.core.widget.TextViewCompat.getLastBaselineToBottomHeight(android.widget.TextView):0:0 -> getLastBaselineToBottomHeight
    1:16:int getLastBaselineToBottomHeight():0 -> getLastBaselineToBottomHeight
    1:1:android.content.res.ColorStateList getSupportBackgroundTintList():0:0 -> getSupportBackgroundTintList
    1:1:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode():0:0 -> getSupportBackgroundTintMode
    3:6:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatTextHelper.getCompoundDrawableTintList():0:0 -> getSupportCompoundDrawablesTintList
    3:6:android.content.res.ColorStateList getSupportCompoundDrawablesTintList():0 -> getSupportCompoundDrawablesTintList
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:11:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatTextHelper.getCompoundDrawableTintList():0:0 -> getSupportCompoundDrawablesTintList
    7:11:android.content.res.ColorStateList getSupportCompoundDrawablesTintList():0 -> getSupportCompoundDrawablesTintList
    3:6:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatTextHelper.getCompoundDrawableTintMode():0:0 -> getSupportCompoundDrawablesTintMode
    3:6:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode():0 -> getSupportCompoundDrawablesTintMode
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:11:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatTextHelper.getCompoundDrawableTintMode():0:0 -> getSupportCompoundDrawablesTintMode
    7:11:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode():0 -> getSupportCompoundDrawablesTintMode
    1:1:java.lang.CharSequence getText():0:0 -> getText
    12:17:android.view.textclassifier.TextClassifier androidx.appcompat.widget.AppCompatTextClassifierHelper.getTextClassifier():0:0 -> getTextClassifier
    12:17:android.view.textclassifier.TextClassifier getTextClassifier():0 -> getTextClassifier
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:49:android.view.textclassifier.TextClassifier androidx.appcompat.widget.AppCompatTextClassifierHelper.getTextClassifier():0:0 -> getTextClassifier
    18:49:android.view.textclassifier.TextClassifier getTextClassifier():0 -> getTextClassifier
    50:54:android.view.textclassifier.TextClassifier getTextClassifier():0:0 -> getTextClassifier
    1:1:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat():0:0 -> getTextMetricsParamsCompat
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb0/d;"}
    7:24:android.view.inputmethod.InputConnection androidx.appcompat.widget.AppCompatHintHelper.onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View):0:0 -> onCreateInputConnection
    7:24:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo):0 -> onCreateInputConnection
    12:17:void androidx.appcompat.widget.AppCompatTextHelper.autoSizeText():0:0 -> onLayout
    12:17:void androidx.appcompat.widget.AppCompatTextHelper.onLayout(boolean,int,int,int,int):0 -> onLayout
    12:17:void onLayout(boolean,int,int,int,int):0 -> onLayout
    1:1:void onMeasure(int,int):0:0 -> onMeasure
    12:17:boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.isAutoSizeEnabled():0:0 -> onTextChanged
    12:17:boolean androidx.appcompat.widget.AppCompatTextHelper.isAutoSizeEnabled():0 -> onTextChanged
    12:17:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    18:21:void androidx.appcompat.widget.AppCompatTextHelper.autoSizeText():0:0 -> onTextChanged
    18:21:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
    13:14:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0:0 -> setAutoSizeTextTypeUniformWithConfiguration
    13:14:void androidx.appcompat.widget.AppCompatTextHelper.setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0 -> setAutoSizeTextTypeUniformWithConfiguration
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:14:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0 -> setAutoSizeTextTypeUniformWithConfiguration
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    15:16:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0:0 -> setAutoSizeTextTypeUniformWithConfiguration
    15:16:void androidx.appcompat.widget.AppCompatTextHelper.setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0 -> setAutoSizeTextTypeUniformWithConfiguration
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:16:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0 -> setAutoSizeTextTypeUniformWithConfiguration
    17:52:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0:0 -> setAutoSizeTextTypeUniformWithConfiguration
    17:52:void androidx.appcompat.widget.AppCompatTextHelper.setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0 -> setAutoSizeTextTypeUniformWithConfiguration
    17:52:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0 -> setAutoSizeTextTypeUniformWithConfiguration
    13:17:void androidx.appcompat.widget.AppCompatTextHelper.setAutoSizeTextTypeUniformWithPresetSizes(int[],int):0:0 -> setAutoSizeTextTypeUniformWithPresetSizes
    13:17:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int):0 -> setAutoSizeTextTypeUniformWithPresetSizes
    18:107:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeUniformWithPresetSizes(int[],int):0:0 -> setAutoSizeTextTypeUniformWithPresetSizes
    18:107:void androidx.appcompat.widget.AppCompatTextHelper.setAutoSizeTextTypeUniformWithPresetSizes(int[],int):0 -> setAutoSizeTextTypeUniformWithPresetSizes
    18:107:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int):0 -> setAutoSizeTextTypeUniformWithPresetSizes
    13:19:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeWithDefaults(int):0:0 -> setAutoSizeTextTypeWithDefaults
    13:19:void androidx.appcompat.widget.AppCompatTextHelper.setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
    13:19:void setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    20:21:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeWithDefaults(int):0:0 -> setAutoSizeTextTypeWithDefaults
    20:21:void androidx.appcompat.widget.AppCompatTextHelper.setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    20:21:void setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
    22:57:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeWithDefaults(int):0:0 -> setAutoSizeTextTypeWithDefaults
    22:57:void androidx.appcompat.widget.AppCompatTextHelper.setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
    22:57:void setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
    58:60:void androidx.appcompat.widget.AppCompatTextHelper.setAutoSizeTextTypeWithDefaults(int):0:0 -> setAutoSizeTextTypeWithDefaults
    58:60:void setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
    61:81:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeWithDefaults(int):0:0 -> setAutoSizeTextTypeWithDefaults
    61:81:void androidx.appcompat.widget.AppCompatTextHelper.setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
    61:81:void setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
    82:85:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.clearAutoSizeConfiguration():0:0 -> setAutoSizeTextTypeWithDefaults
    82:85:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
    82:85:void androidx.appcompat.widget.AppCompatTextHelper.setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    82:85:void setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
    86:98:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.clearAutoSizeConfiguration():0:0 -> setAutoSizeTextTypeWithDefaults
    86:98:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
    86:98:void androidx.appcompat.widget.AppCompatTextHelper.setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
    86:98:void setAutoSizeTextTypeWithDefaults(int):0 -> setAutoSizeTextTypeWithDefaults
    9:18:void androidx.appcompat.widget.AppCompatBackgroundHelper.onSetBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> setBackgroundDrawable
    9:18:void setBackgroundDrawable(android.graphics.drawable.Drawable):0 -> setBackgroundDrawable
    1:1:void setBackgroundResource(int):0:0 -> setBackgroundResource
    8:11:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawables
    8:11:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0 -> setCompoundDrawables
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:11:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesRelative
    8:11:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0 -> setCompoundDrawablesRelative
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1:1:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int):0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
    2:2:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesWithIntrinsicBounds
    1:1:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int):0 -> setCompoundDrawablesWithIntrinsicBounds
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesWithIntrinsicBounds
    2:2:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0 -> setCompoundDrawablesWithIntrinsicBounds
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback):0:0 -> setCustomSelectionActionModeCallback
    1:1:void setFirstBaselineToTopHeight(int):0:0 -> setFirstBaselineToTopHeight
    1:1:void setLastBaselineToBottomHeight(int):0:0 -> setLastBaselineToBottomHeight
    3:21:void androidx.core.widget.TextViewCompat.setLineHeight(android.widget.TextView,int):0:0 -> setLineHeight
    3:21:void setLineHeight(int):0 -> setLineHeight
    22:27:int androidx.core.util.Preconditions.checkArgumentNonnegative(int):0:0 -> setLineHeight
    22:27:void androidx.core.widget.TextViewCompat.setLineHeight(android.widget.TextView,int):0 -> setLineHeight
    22:27:void setLineHeight(int):0 -> setLineHeight
    8:12:void androidx.core.widget.TextViewCompat.setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat):0:0 -> setPrecomputedText
    8:12:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat):0 -> setPrecomputedText
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb0/e;)V"}
    1:1:void setSupportBackgroundTintList(android.content.res.ColorStateList):0:0 -> setSupportBackgroundTintList
    1:1:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportBackgroundTintMode
    3:6:void androidx.appcompat.widget.AppCompatTextHelper.setCompoundDrawableTintList(android.content.res.ColorStateList):0:0 -> setSupportCompoundDrawablesTintList
    3:6:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList):0 -> setSupportCompoundDrawablesTintList
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:24:void androidx.appcompat.widget.AppCompatTextHelper.setCompoundDrawableTintList(android.content.res.ColorStateList):0:0 -> setSupportCompoundDrawablesTintList
    7:24:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList):0 -> setSupportCompoundDrawablesTintList
    25:36:void androidx.appcompat.widget.AppCompatTextHelper.setCompoundTints():0:0 -> setSupportCompoundDrawablesTintList
    25:36:void androidx.appcompat.widget.AppCompatTextHelper.setCompoundDrawableTintList(android.content.res.ColorStateList):0 -> setSupportCompoundDrawablesTintList
    25:36:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList):0 -> setSupportCompoundDrawablesTintList
    37:40:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList):0:0 -> setSupportCompoundDrawablesTintList
    3:6:void androidx.appcompat.widget.AppCompatTextHelper.setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportCompoundDrawablesTintMode
    3:6:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportCompoundDrawablesTintMode
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:24:void androidx.appcompat.widget.AppCompatTextHelper.setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportCompoundDrawablesTintMode
    7:24:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportCompoundDrawablesTintMode
    25:36:void androidx.appcompat.widget.AppCompatTextHelper.setCompoundTints():0:0 -> setSupportCompoundDrawablesTintMode
    25:36:void androidx.appcompat.widget.AppCompatTextHelper.setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportCompoundDrawablesTintMode
    25:36:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportCompoundDrawablesTintMode
    37:40:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportCompoundDrawablesTintMode
    1:1:void setTextAppearance(android.content.Context,int):0:0 -> setTextAppearance
    12:14:void androidx.appcompat.widget.AppCompatTextClassifierHelper.setTextClassifier(android.view.textclassifier.TextClassifier):0:0 -> setTextClassifier
    12:14:void setTextClassifier(android.view.textclassifier.TextClassifier):0 -> setTextClassifier
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:18:void setTextClassifier(android.view.textclassifier.TextClassifier):0:0 -> setTextClassifier
    1:1:void setTextFuture(java.util.concurrent.Future):0:0 -> setTextFuture
    1:2:android.text.TextDirectionHeuristic androidx.core.text.PrecomputedTextCompat$Params.getTextDirection():0:0 -> setTextMetricsParamsCompat
    1:2:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:2:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb0/d;)V"}
    3:44:int androidx.core.widget.TextViewCompat.getTextDirection(android.text.TextDirectionHeuristic):0:0 -> setTextMetricsParamsCompat
    3:44:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    3:44:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    45:106:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    45:106:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    15:21:boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.isAutoSizeEnabled():0:0 -> setTextSize
    15:21:boolean androidx.appcompat.widget.AppCompatTextHelper.isAutoSizeEnabled():0 -> setTextSize
    15:21:void androidx.appcompat.widget.AppCompatTextHelper.setTextSize(int,float):0 -> setTextSize
    15:21:void setTextSize(int,float):0 -> setTextSize
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    22:25:void androidx.appcompat.widget.AppCompatTextHelper.setTextSizeInternal(int,float):0:0 -> setTextSize
    22:25:void androidx.appcompat.widget.AppCompatTextHelper.setTextSize(int,float):0 -> setTextSize
    22:25:void setTextSize(int,float):0 -> setTextSize
    13:29:android.graphics.Typeface androidx.core.graphics.TypefaceCompat.create(android.content.Context,android.graphics.Typeface,int):0:0 -> setTypeface
    13:29:void setTypeface(android.graphics.Typeface,int):0 -> setTypeface
    30:33:void setTypeface(android.graphics.Typeface,int):0:0 -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> m.d0:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    int mAutoSizeTextType -> a
    boolean mNeedsAutoSizeText -> b
    float mAutoSizeStepGranularityInPx -> c
    float mAutoSizeMinTextSizeInPx -> d
    float mAutoSizeMaxTextSizeInPx -> e
    int[] mAutoSizeTextSizesInPx -> f
    boolean mHasPresetAutoSizeValues -> g
    android.text.TextPaint mTempTextPaint -> h
    android.widget.TextView mTextView -> i
    android.content.Context mContext -> j
    android.graphics.RectF TEMP_RECTF -> k
    java.util.concurrent.ConcurrentHashMap sTextViewMethodByNameCache -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.widget.TextView):0:0 -> <init>
    11:148:void autoSizeText():0:0 -> a
    1:1:int[] cleanupAutoSizePresetSizes(int[]):0:0 -> b
    27:53:boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.suggestedSizeFitsInSpace(int,android.graphics.RectF):0:0 -> c
    27:53:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> c
    54:81:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.initTempTextPaint(int):0:0 -> c
    54:81:boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.suggestedSizeFitsInSpace(int,android.graphics.RectF):0 -> c
    54:81:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> c
    82:101:boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.suggestedSizeFitsInSpace(int,android.graphics.RectF):0:0 -> c
    82:101:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> c
    102:198:android.text.StaticLayout androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int):0:0 -> c
    102:198:android.text.StaticLayout androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int):0 -> c
    102:198:boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.suggestedSizeFitsInSpace(int,android.graphics.RectF):0 -> c
    102:198:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> c
    199:226:android.text.StaticLayout androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int):0:0 -> c
    199:226:android.text.StaticLayout androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int):0 -> c
    199:226:boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.suggestedSizeFitsInSpace(int,android.graphics.RectF):0 -> c
    199:226:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> c
    227:281:boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.suggestedSizeFitsInSpace(int,android.graphics.RectF):0:0 -> c
    227:281:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> c
    282:292:int findLargestTextSizeWhichFits(android.graphics.RectF):0:0 -> c
    1:1:java.lang.reflect.Method getTextViewMethod(java.lang.String):0:0 -> d
    1:1:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/TextView;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"}
    24:90:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setRawTextSize(float):0:0 -> f
    24:90:void setTextSizeInternal(int,float):0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FI)V"}
    1:1:boolean setupAutoSizeText():0:0 -> g
    1:1:boolean setupAutoSizeUniformPresetSizesConfiguration():0:0 -> h
    1:1:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float):0:0 -> i
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
# {"id":"sourceFile","fileName":"ButtonBarLayout.java"}
    boolean mAllowStacking -> b
    int mLastWidthSize -> c
    15:20:boolean isStacked():0:0 -> onMeasure
    15:20:void onMeasure(int,int):0 -> onMeasure
    21:25:void onMeasure(int,int):0:0 -> onMeasure
    26:36:boolean isStacked():0:0 -> onMeasure
    26:36:void onMeasure(int,int):0 -> onMeasure
    37:61:void onMeasure(int,int):0:0 -> onMeasure
    62:68:boolean isStacked():0:0 -> onMeasure
    62:68:void onMeasure(int,int):0 -> onMeasure
    69:88:void onMeasure(int,int):0:0 -> onMeasure
    89:113:int getNextVisibleChildIndex(int):0:0 -> onMeasure
    89:113:void onMeasure(int,int):0 -> onMeasure
    114:138:void onMeasure(int,int):0:0 -> onMeasure
    139:145:boolean isStacked():0:0 -> onMeasure
    139:145:void onMeasure(int,int):0 -> onMeasure
    146:168:int getNextVisibleChildIndex(int):0:0 -> onMeasure
    146:168:void onMeasure(int,int):0 -> onMeasure
    169:205:void onMeasure(int,int):0:0 -> onMeasure
    206:211:int androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> onMeasure
    206:211:void onMeasure(int,int):0 -> onMeasure
    212:215:void onMeasure(int,int):0:0 -> onMeasure
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
# {"id":"sourceFile","fileName":"ContentFrameLayout.java"}
    android.util.TypedValue mMinWidthMajor -> b
    android.util.TypedValue mMinWidthMinor -> c
    android.util.TypedValue mFixedWidthMajor -> d
    android.util.TypedValue mFixedWidthMinor -> e
    android.util.TypedValue mFixedHeightMajor -> f
    android.util.TypedValue mFixedHeightMinor -> g
    android.graphics.Rect mDecorPadding -> h
    2:12:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    2:12:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void dispatchFitSystemWindows(android.graphics.Rect):0:0 -> a
    1:1:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener):0:0 -> setAttachListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e0;)V"}
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener -> m.e0:
# {"id":"sourceFile","fileName":"ContentFrameLayout.java"}
androidx.appcompat.widget.DecorToolbar -> m.f0:
# {"id":"sourceFile","fileName":"DecorToolbar.java"}
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
# {"id":"sourceFile","fileName":"DialogTitle.java"}
androidx.appcompat.widget.DrawableUtils -> m.g0:
# {"id":"sourceFile","fileName":"DrawableUtils.java"}
    int[] CHECKED_STATE_SET -> a
    int[] EMPTY_STATE_SET -> b
    android.graphics.Rect INSETS_NONE -> c
    java.lang.Class sInsetsClazz -> d
    1:1:void <clinit>():0:0 -> <clinit>
    44:45:android.graphics.drawable.Drawable androidx.core.graphics.drawable.WrappedDrawableApi14.getWrappedDrawable():0:0 -> a
    44:45:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    46:56:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable):0:0 -> a
    57:58:android.graphics.drawable.Drawable androidx.appcompat.graphics.drawable.DrawableWrapper.getWrappedDrawable():0:0 -> a
    57:58:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    59:80:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable):0:0 -> a
    23:47:void androidx.appcompat.widget.DrawableUtils.fixVectorDrawableTinting(android.graphics.drawable.Drawable):0:0 -> b
    23:47:void fixDrawable(android.graphics.drawable.Drawable):0 -> b
    45:52:android.graphics.drawable.Drawable androidx.core.graphics.drawable.DrawableCompat.unwrap(android.graphics.drawable.Drawable):0:0 -> c
    45:52:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable):0 -> c
    53:54:android.graphics.drawable.Drawable androidx.core.graphics.drawable.WrappedDrawableApi14.getWrappedDrawable():0:0 -> c
    53:54:android.graphics.drawable.Drawable androidx.core.graphics.drawable.DrawableCompat.unwrap(android.graphics.drawable.Drawable):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    53:54:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable):0 -> c
    55:196:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable):0:0 -> c
    1:1:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode):0:0 -> d
androidx.appcompat.widget.DropDownListView -> m.j0:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    android.graphics.Rect mSelectorRect -> b
    int mSelectionLeftPadding -> c
    int mSelectionTopPadding -> d
    int mSelectionRightPadding -> e
    int mSelectionBottomPadding -> f
    int mMotionPosition -> g
    java.lang.reflect.Field mIsChildViewEnabled -> h
    androidx.appcompat.widget.DropDownListView$GateKeeperDrawable mSelector -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/h0;"}
    boolean mListSelectionHidden -> j
    boolean mHijackFocus -> k
    boolean mDrawsInPressedState -> l
    androidx.core.widget.ListViewAutoScrollHelper mScrollHelper -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh0/f;"}
    androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable mResolveHoverRunnable -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/i0;"}
    1:1:void <init>(android.content.Context,boolean):0:0 -> <init>
    1:1:int measureHeightOfChildrenCompat(int,int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)I"}
    73:141:void androidx.appcompat.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0:0 -> b
    73:141:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroid/view/MotionEvent;)Z"}
    142:159:void androidx.appcompat.widget.DropDownListView.positionSelectorLikeFocusCompat(int,android.view.View):0:0 -> b
    142:159:void androidx.appcompat.widget.DropDownListView.positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    142:159:void androidx.appcompat.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0 -> b
    142:159:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    160:239:void androidx.appcompat.widget.DropDownListView.positionSelectorCompat(int,android.view.View):0:0 -> b
    160:239:void androidx.appcompat.widget.DropDownListView.positionSelectorLikeFocusCompat(int,android.view.View):0 -> b
    160:239:void androidx.appcompat.widget.DropDownListView.positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    160:239:void androidx.appcompat.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0 -> b
    160:239:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    240:261:void androidx.appcompat.widget.DropDownListView.positionSelectorLikeFocusCompat(int,android.view.View):0:0 -> b
    240:261:void androidx.appcompat.widget.DropDownListView.positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    240:261:void androidx.appcompat.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0 -> b
    240:261:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    262:264:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> b
    262:264:void androidx.appcompat.widget.DropDownListView.positionSelectorLikeFocusCompat(int,android.view.View):0 -> b
    262:264:void androidx.appcompat.widget.DropDownListView.positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    262:264:void androidx.appcompat.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0 -> b
    262:264:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    265:273:void androidx.appcompat.widget.DropDownListView.positionSelectorLikeTouchCompat(int,android.view.View,float,float):0:0 -> b
    265:273:void androidx.appcompat.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0 -> b
    265:273:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    274:281:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> b
    274:281:void androidx.appcompat.widget.DropDownListView.positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    274:281:void androidx.appcompat.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0 -> b
    274:281:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    282:283:void androidx.appcompat.widget.DropDownListView$GateKeeperDrawable.setEnabled(boolean):0:0 -> b
    282:283:void androidx.appcompat.widget.DropDownListView.setSelectorEnabled(boolean):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    282:283:void androidx.appcompat.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0 -> b
    282:283:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    284:288:void androidx.appcompat.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0:0 -> b
    284:288:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    289:305:void androidx.appcompat.widget.DropDownListView.clickPressedItem(android.view.View,int):0:0 -> b
    289:305:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    306:333:void androidx.appcompat.widget.DropDownListView.clearPressedItem():0:0 -> b
    306:333:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    334:342:boolean onForwardedEvent(android.view.MotionEvent,int):0:0 -> b
    343:344:androidx.core.widget.AutoScrollHelper androidx.core.widget.AutoScrollHelper.setEnabled(boolean):0:0 -> b
    343:344:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    345:346:androidx.core.widget.AutoScrollHelper androidx.core.widget.AutoScrollHelper.setEnabled(boolean):0:0 -> b
    345:346:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    347:352:boolean onForwardedEvent(android.view.MotionEvent,int):0:0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    353:363:androidx.core.widget.AutoScrollHelper androidx.core.widget.AutoScrollHelper.setEnabled(boolean):0:0 -> b
    353:363:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    3:20:void androidx.appcompat.widget.DropDownListView.drawSelectorCompat(android.graphics.Canvas):0:0 -> dispatchDraw
    3:20:void dispatchDraw(android.graphics.Canvas):0 -> dispatchDraw
    21:24:void dispatchDraw(android.graphics.Canvas):0:0 -> dispatchDraw
    14:15:void androidx.appcompat.widget.DropDownListView$GateKeeperDrawable.setEnabled(boolean):0:0 -> drawableStateChanged
    14:15:void androidx.appcompat.widget.DropDownListView.setSelectorEnabled(boolean):0 -> drawableStateChanged
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:15:void drawableStateChanged():0 -> drawableStateChanged
    16:39:void androidx.appcompat.widget.DropDownListView.updateSelectorStateCompat():0:0 -> drawableStateChanged
    16:39:void drawableStateChanged():0 -> drawableStateChanged
    1:1:boolean hasFocus():0:0 -> hasFocus
    1:1:boolean hasWindowFocus():0:0 -> hasWindowFocus
    1:1:boolean isFocused():0:0 -> isFocused
    1:1:boolean isInTouchMode():0:0 -> isInTouchMode
    1:1:void onDetachedFromWindow():0:0 -> onDetachedFromWindow
    32:34:void androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable.post():0:0 -> onHoverEvent
    32:34:boolean onHoverEvent(android.view.MotionEvent):0 -> onHoverEvent
    35:101:boolean onHoverEvent(android.view.MotionEvent):0:0 -> onHoverEvent
    102:125:void androidx.appcompat.widget.DropDownListView.updateSelectorStateCompat():0:0 -> onHoverEvent
    102:125:boolean onHoverEvent(android.view.MotionEvent):0 -> onHoverEvent
    28:32:void androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable.cancel():0:0 -> onTouchEvent
    28:32:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    33:37:void androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable.cancel():0:0 -> onTouchEvent
    33:37:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    38:42:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:void setListSelectionHidden(boolean):0:0 -> setListSelectionHidden
    6:12:void androidx.appcompat.graphics.drawable.DrawableWrapper.<init>(android.graphics.drawable.Drawable):0:0 -> setSelector
    6:12:void androidx.appcompat.widget.DropDownListView$GateKeeperDrawable.<init>(android.graphics.drawable.Drawable):0 -> setSelector
    6:12:void setSelector(android.graphics.drawable.Drawable):0 -> setSelector
    13:26:void androidx.appcompat.graphics.drawable.DrawableWrapper.setWrappedDrawable(android.graphics.drawable.Drawable):0:0 -> setSelector
    13:26:void androidx.appcompat.graphics.drawable.DrawableWrapper.<init>(android.graphics.drawable.Drawable):0 -> setSelector
    13:26:void androidx.appcompat.widget.DropDownListView$GateKeeperDrawable.<init>(android.graphics.drawable.Drawable):0 -> setSelector
    13:26:void setSelector(android.graphics.drawable.Drawable):0 -> setSelector
    27:56:void setSelector(android.graphics.drawable.Drawable):0:0 -> setSelector
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> m.h0:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    android.graphics.drawable.Drawable androidx.appcompat.graphics.drawable.DrawableWrapper.mDrawable -> b
    boolean mEnabled -> c
    1:1:void androidx.appcompat.graphics.drawable.DrawableWrapper.draw(android.graphics.Canvas):0:0 -> a
    3:6:void androidx.core.graphics.drawable.DrawableCompat.jumpToCurrentState(android.graphics.drawable.Drawable):0:0 -> b
    3:6:void androidx.appcompat.graphics.drawable.DrawableWrapper.jumpToCurrentState():0 -> b
    1:1:void androidx.appcompat.graphics.drawable.DrawableWrapper.onBoundsChange(android.graphics.Rect):0:0 -> c
    1:1:void androidx.appcompat.graphics.drawable.DrawableWrapper.setAlpha(int):0:0 -> d
    1:1:void draw(android.graphics.Canvas):0:0 -> draw
    3:6:void androidx.core.graphics.drawable.DrawableCompat.setAutoMirrored(android.graphics.drawable.Drawable,boolean):0:0 -> e
    3:6:void androidx.appcompat.graphics.drawable.DrawableWrapper.setAutoMirrored(boolean):0 -> e
    1:1:void androidx.appcompat.graphics.drawable.DrawableWrapper.setChangingConfigurations(int):0:0 -> f
    1:1:void androidx.appcompat.graphics.drawable.DrawableWrapper.setColorFilter(android.graphics.ColorFilter):0:0 -> g
    3:7:int androidx.appcompat.graphics.drawable.DrawableWrapper.getChangingConfigurations():0:0 -> getChangingConfigurations
    3:7:int getChangingConfigurations():0 -> getChangingConfigurations
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:android.graphics.drawable.Drawable androidx.appcompat.graphics.drawable.DrawableWrapper.getCurrent():0:0 -> getCurrent
    3:7:android.graphics.drawable.Drawable getCurrent():0 -> getCurrent
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:int androidx.appcompat.graphics.drawable.DrawableWrapper.getIntrinsicHeight():0:0 -> getIntrinsicHeight
    3:7:int getIntrinsicHeight():0 -> getIntrinsicHeight
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:int androidx.appcompat.graphics.drawable.DrawableWrapper.getIntrinsicWidth():0:0 -> getIntrinsicWidth
    3:7:int getIntrinsicWidth():0 -> getIntrinsicWidth
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:int androidx.appcompat.graphics.drawable.DrawableWrapper.getMinimumHeight():0:0 -> getMinimumHeight
    3:7:int getMinimumHeight():0 -> getMinimumHeight
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:int androidx.appcompat.graphics.drawable.DrawableWrapper.getMinimumWidth():0:0 -> getMinimumWidth
    3:7:int getMinimumWidth():0 -> getMinimumWidth
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:int androidx.appcompat.graphics.drawable.DrawableWrapper.getOpacity():0:0 -> getOpacity
    3:7:int getOpacity():0 -> getOpacity
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:boolean androidx.appcompat.graphics.drawable.DrawableWrapper.getPadding(android.graphics.Rect):0:0 -> getPadding
    3:7:boolean getPadding(android.graphics.Rect):0 -> getPadding
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:int[] androidx.appcompat.graphics.drawable.DrawableWrapper.getState():0:0 -> getState
    3:7:int[] getState():0 -> getState
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:android.graphics.Region androidx.appcompat.graphics.drawable.DrawableWrapper.getTransparentRegion():0:0 -> getTransparentRegion
    3:7:android.graphics.Region getTransparentRegion():0 -> getTransparentRegion
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.appcompat.graphics.drawable.DrawableWrapper.setDither(boolean):0:0 -> h
    1:1:void androidx.appcompat.graphics.drawable.DrawableWrapper.setFilterBitmap(boolean):0:0 -> i
    1:4:void androidx.appcompat.graphics.drawable.DrawableWrapper.invalidateDrawable(android.graphics.drawable.Drawable):0:0 -> invalidateDrawable
    1:4:void invalidateDrawable(android.graphics.drawable.Drawable):0 -> invalidateDrawable
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:boolean androidx.core.graphics.drawable.DrawableCompat.isAutoMirrored(android.graphics.drawable.Drawable):0:0 -> isAutoMirrored
    3:7:boolean androidx.appcompat.graphics.drawable.DrawableWrapper.isAutoMirrored():0 -> isAutoMirrored
    3:7:boolean isAutoMirrored():0 -> isAutoMirrored
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:boolean androidx.appcompat.graphics.drawable.DrawableWrapper.isStateful():0:0 -> isStateful
    3:7:boolean isStateful():0 -> isStateful
      # {"id":"com.android.tools.r8.synthesized"}
    3:6:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> j
    3:6:void androidx.appcompat.graphics.drawable.DrawableWrapper.setHotspot(float,float):0 -> j
    1:4:void jumpToCurrentState():0:0 -> jumpToCurrentState
      # {"id":"com.android.tools.r8.synthesized"}
    3:6:void androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> k
    3:6:void androidx.appcompat.graphics.drawable.DrawableWrapper.setHotspotBounds(int,int,int,int):0 -> k
    3:6:void androidx.core.graphics.drawable.DrawableCompat.setTint(android.graphics.drawable.Drawable,int):0:0 -> l
    3:6:void androidx.appcompat.graphics.drawable.DrawableWrapper.setTint(int):0 -> l
    3:6:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> m
    3:6:void androidx.appcompat.graphics.drawable.DrawableWrapper.setTintList(android.content.res.ColorStateList):0 -> m
    3:6:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> n
    3:6:void androidx.appcompat.graphics.drawable.DrawableWrapper.setTintMode(android.graphics.PorterDuff$Mode):0 -> n
    1:1:boolean androidx.appcompat.graphics.drawable.DrawableWrapper.setVisible(boolean,boolean):0:0 -> o
    1:4:void onBoundsChange(android.graphics.Rect):0:0 -> onBoundsChange
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:boolean androidx.appcompat.graphics.drawable.DrawableWrapper.onLevelChange(int):0:0 -> onLevelChange
    3:7:boolean onLevelChange(int):0 -> onLevelChange
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void androidx.appcompat.graphics.drawable.DrawableWrapper.scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long):0:0 -> scheduleDrawable
    1:4:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long):0 -> scheduleDrawable
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void setAlpha(int):0:0 -> setAlpha
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void setAutoMirrored(boolean):0:0 -> setAutoMirrored
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void setChangingConfigurations(int):0:0 -> setChangingConfigurations
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void setDither(boolean):0:0 -> setDither
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void setFilterBitmap(boolean):0:0 -> setFilterBitmap
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void setHotspot(float,float):0:0 -> setHotspot
    1:1:void setHotspotBounds(int,int,int,int):0:0 -> setHotspotBounds
    7:13:boolean androidx.appcompat.graphics.drawable.DrawableWrapper.setState(int[]):0:0 -> setState
    7:13:boolean setState(int[]):0 -> setState
    1:4:void setTint(int):0:0 -> setTint
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void setTintList(android.content.res.ColorStateList):0:0 -> setTintList
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean setVisible(boolean,boolean):0:0 -> setVisible
    1:4:void androidx.appcompat.graphics.drawable.DrawableWrapper.unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable):0:0 -> unscheduleDrawable
    1:4:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable):0 -> unscheduleDrawable
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> m.i0:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.DropDownListView this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroid/view/ViewGroup;"}
    1:8:void androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable.<init>(androidx.appcompat.widget.DropDownListView):0:0 -> <init>
    1:8:void $r8$init$synthetic(android.view.ViewGroup,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    10:13:boolean androidx.appcompat.widget.Toolbar.showOverflowMenu():0:0 -> run
    10:13:void androidx.appcompat.widget.Toolbar$2.run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:13:void run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    14:17:boolean androidx.appcompat.widget.ActionMenuView.showOverflowMenu():0:0 -> run
    14:17:boolean androidx.appcompat.widget.Toolbar.showOverflowMenu():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:17:void androidx.appcompat.widget.Toolbar$2.run():0 -> run
    14:17:void run$bridge():0 -> run
    18:24:boolean androidx.appcompat.widget.ActionMenuView.showOverflowMenu():0:0 -> run
    18:24:boolean androidx.appcompat.widget.Toolbar.showOverflowMenu():0 -> run
    18:24:void androidx.appcompat.widget.Toolbar$2.run():0 -> run
    18:24:void run$bridge():0 -> run
    25:30:void androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable.run():0:0 -> run
    25:30:void run$bridge():0 -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
# {"id":"sourceFile","fileName":"FitWindowsFrameLayout.java"}
    1:1:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener):0:0 -> setOnFitSystemWindowsListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/k0;)V"}
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
# {"id":"sourceFile","fileName":"FitWindowsLinearLayout.java"}
    1:1:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener):0:0 -> setOnFitSystemWindowsListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/k0;)V"}
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> m.k0:
# {"id":"sourceFile","fileName":"FitWindowsViewGroup.java"}
androidx.appcompat.widget.ForwardingListener -> m.m0:
# {"id":"sourceFile","fileName":"ForwardingListener.java"}
    float mScaledTouchSlop -> a
    int mTapTimeout -> b
    int mLongPressTimeout -> c
    android.view.View mSrc -> d
    java.lang.Runnable mDisallowIntercept -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/l0;"}
    java.lang.Runnable mTriggerLongPress -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/l0;"}
    boolean mForwarding -> g
    int mActivePointerId -> h
    int[] mTmpLocation -> i
    1:1:void <init>(android.view.View):0:0 -> <init>
    1:1:void clearCallbacks():0:0 -> a
    androidx.appcompat.view.menu.ShowableListMenu getPopup() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/l;"}
    boolean onForwardingStarted() -> c
    1:1:boolean onForwardingStopped():0:0 -> d
    10:43:boolean androidx.appcompat.widget.ForwardingListener.onTouchForwarded(android.view.MotionEvent):0:0 -> onTouch
    10:43:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    44:55:boolean androidx.appcompat.widget.ForwardingListener.toGlobalMotionEvent(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    44:55:boolean androidx.appcompat.widget.ForwardingListener.onTouchForwarded(android.view.MotionEvent):0 -> onTouch
    44:55:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    56:71:boolean androidx.appcompat.widget.ForwardingListener.toLocalMotionEvent(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    56:71:boolean androidx.appcompat.widget.ForwardingListener.onTouchForwarded(android.view.MotionEvent):0 -> onTouch
    56:71:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    72:94:boolean androidx.appcompat.widget.ForwardingListener.onTouchForwarded(android.view.MotionEvent):0:0 -> onTouch
    72:94:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    95:106:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    107:156:boolean androidx.appcompat.widget.ForwardingListener.onTouchObserved(android.view.MotionEvent):0:0 -> onTouch
    107:156:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    157:187:boolean androidx.appcompat.widget.ForwardingListener.pointInView(android.view.View,float,float,float):0:0 -> onTouch
    157:187:boolean androidx.appcompat.widget.ForwardingListener.onTouchObserved(android.view.MotionEvent):0 -> onTouch
    157:187:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    188:197:boolean androidx.appcompat.widget.ForwardingListener.onTouchObserved(android.view.MotionEvent):0:0 -> onTouch
    188:197:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    198:205:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    206:256:boolean androidx.appcompat.widget.ForwardingListener.onTouchObserved(android.view.MotionEvent):0:0 -> onTouch
    206:256:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    257:284:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    1:1:void onViewAttachedToWindow(android.view.View):0:0 -> onViewAttachedToWindow
    1:1:void onViewDetachedFromWindow(android.view.View):0:0 -> onViewDetachedFromWindow
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> m.l0:
# {"id":"sourceFile","fileName":"ForwardingListener.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.ForwardingListener this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/m0;"}
    1:8:void androidx.appcompat.widget.ForwardingListener$DisallowIntercept.<init>(androidx.appcompat.widget.ForwardingListener):0:0 -> <init>
    1:8:void $r8$init$synthetic(androidx.appcompat.widget.ForwardingListener,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/m0;I)V"}
    9:11:void androidx.appcompat.widget.ForwardingListener.onLongPress():0:0 -> run
    9:11:void androidx.appcompat.widget.ForwardingListener$TriggerLongPress.run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:11:void run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    12:62:void androidx.appcompat.widget.ForwardingListener.onLongPress():0:0 -> run
    12:62:void androidx.appcompat.widget.ForwardingListener$TriggerLongPress.run():0 -> run
    12:62:void run$bridge():0 -> run
    63:74:void androidx.appcompat.widget.ForwardingListener$DisallowIntercept.run():0:0 -> run
    63:74:void run$bridge():0 -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> R8$$REMOVED$$CLASS$$19:
# {"id":"sourceFile","fileName":"ForwardingListener.java"}
androidx.appcompat.widget.LinearLayoutCompat -> m.o0:
# {"id":"sourceFile","fileName":"LinearLayoutCompat.java"}
    boolean mBaselineAligned -> b
    int mBaselineAlignedChildIndex -> c
    int mBaselineChildTop -> d
    int mOrientation -> e
    int mGravity -> f
    int mTotalLength -> g
    float mWeightSum -> h
    boolean mUseLargestChild -> i
    int[] mMaxAscent -> j
    int[] mMaxDescent -> k
    android.graphics.drawable.Drawable mDivider -> l
    int mDividerWidth -> m
    int mDividerHeight -> n
    int mShowDividers -> o
    int mDividerPadding -> p
    20:28:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    20:28:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    29:59:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    60:66:float androidx.appcompat.widget.TintTypedArray.getFloat(int,float):0:0 -> <init>
    60:66:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    67:106:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void drawHorizontalDivider(android.graphics.Canvas,int):0:0 -> b
    1:1:void drawVerticalDivider(android.graphics.Canvas,int):0:0 -> c
    1:1:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> checkLayoutParams
    1:1:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/n0;"}
    1:1:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/AttributeSet;)Lm/n0;"}
    1:1:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup$LayoutParams;)Lm/n0;"}
    1:1:boolean hasDividerBeforeChildAt(int):0:0 -> g
    1:1:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams():0:0 -> generateDefaultLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    2:2:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> generateLayoutParams
    1:1:int getBaseline():0:0 -> getBaseline
    1:1:int getBaselineAlignedChildIndex():0:0 -> getBaselineAlignedChildIndex
    1:1:android.graphics.drawable.Drawable getDividerDrawable():0:0 -> getDividerDrawable
    1:1:int getDividerPadding():0:0 -> getDividerPadding
    1:1:int getDividerWidth():0:0 -> getDividerWidth
    1:1:int getGravity():0:0 -> getGravity
    1:1:int getOrientation():0:0 -> getOrientation
    1:1:int getShowDividers():0:0 -> getShowDividers
    1:1:int getVirtualChildCount():0:0 -> getVirtualChildCount
    1:1:float getWeightSum():0:0 -> getWeightSum
    14:19:void androidx.appcompat.widget.LinearLayoutCompat.drawDividersVertical(android.graphics.Canvas):0:0 -> onDraw
    14:19:void onDraw(android.graphics.Canvas):0 -> onDraw
    20:25:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onDraw
    20:25:void androidx.appcompat.widget.LinearLayoutCompat.drawDividersVertical(android.graphics.Canvas):0 -> onDraw
    20:25:void onDraw(android.graphics.Canvas):0 -> onDraw
    26:66:void androidx.appcompat.widget.LinearLayoutCompat.drawDividersVertical(android.graphics.Canvas):0:0 -> onDraw
    26:66:void onDraw(android.graphics.Canvas):0 -> onDraw
    67:72:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onDraw
    67:72:void androidx.appcompat.widget.LinearLayoutCompat.drawDividersVertical(android.graphics.Canvas):0 -> onDraw
    67:72:void onDraw(android.graphics.Canvas):0 -> onDraw
    73:103:void androidx.appcompat.widget.LinearLayoutCompat.drawDividersVertical(android.graphics.Canvas):0:0 -> onDraw
    73:103:void onDraw(android.graphics.Canvas):0 -> onDraw
    104:113:void androidx.appcompat.widget.LinearLayoutCompat.drawDividersHorizontal(android.graphics.Canvas):0:0 -> onDraw
    104:113:void onDraw(android.graphics.Canvas):0 -> onDraw
    114:119:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onDraw
    114:119:void androidx.appcompat.widget.LinearLayoutCompat.drawDividersHorizontal(android.graphics.Canvas):0 -> onDraw
    114:119:void onDraw(android.graphics.Canvas):0 -> onDraw
    120:170:void androidx.appcompat.widget.LinearLayoutCompat.drawDividersHorizontal(android.graphics.Canvas):0:0 -> onDraw
    120:170:void onDraw(android.graphics.Canvas):0 -> onDraw
    171:178:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onDraw
    171:178:void androidx.appcompat.widget.LinearLayoutCompat.drawDividersHorizontal(android.graphics.Canvas):0 -> onDraw
    171:178:void onDraw(android.graphics.Canvas):0 -> onDraw
    179:222:void androidx.appcompat.widget.LinearLayoutCompat.drawDividersHorizontal(android.graphics.Canvas):0:0 -> onDraw
    179:222:void onDraw(android.graphics.Canvas):0 -> onDraw
    1:1:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0:0 -> onInitializeAccessibilityEvent
    1:1:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    1:1:void androidx.appcompat.widget.LinearLayoutCompat.layoutVertical(int,int,int,int):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onLayout
    2:2:void androidx.appcompat.widget.LinearLayoutCompat.layoutVertical(int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0 -> onLayout
    3:3:void androidx.appcompat.widget.LinearLayoutCompat.layoutVertical(int,int,int,int):0:0 -> onLayout
    3:3:void onLayout(boolean,int,int,int,int):0 -> onLayout
    4:4:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onLayout
    4:4:void androidx.appcompat.widget.LinearLayoutCompat.layoutVertical(int,int,int,int):0 -> onLayout
    4:4:void onLayout(boolean,int,int,int,int):0 -> onLayout
    5:5:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> onLayout
    5:5:void androidx.appcompat.widget.LinearLayoutCompat.layoutVertical(int,int,int,int):0 -> onLayout
    5:5:void onLayout(boolean,int,int,int,int):0 -> onLayout
    6:6:void androidx.appcompat.widget.LinearLayoutCompat.layoutVertical(int,int,int,int):0:0 -> onLayout
    6:6:void onLayout(boolean,int,int,int,int):0 -> onLayout
    7:7:void androidx.appcompat.widget.LinearLayoutCompat.setChildFrame(android.view.View,int,int,int,int):0:0 -> onLayout
    7:7:void androidx.appcompat.widget.LinearLayoutCompat.layoutVertical(int,int,int,int):0 -> onLayout
    7:7:void onLayout(boolean,int,int,int,int):0 -> onLayout
    8:8:void androidx.appcompat.widget.LinearLayoutCompat.layoutVertical(int,int,int,int):0:0 -> onLayout
    8:8:void onLayout(boolean,int,int,int,int):0 -> onLayout
    9:9:void androidx.appcompat.widget.LinearLayoutCompat.layoutHorizontal(int,int,int,int):0:0 -> onLayout
    9:9:void onLayout(boolean,int,int,int,int):0 -> onLayout
    10:10:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onLayout
    10:10:void androidx.appcompat.widget.LinearLayoutCompat.layoutHorizontal(int,int,int,int):0 -> onLayout
    10:10:void onLayout(boolean,int,int,int,int):0 -> onLayout
    11:11:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> onLayout
    11:11:void androidx.appcompat.widget.LinearLayoutCompat.layoutHorizontal(int,int,int,int):0 -> onLayout
    11:11:void onLayout(boolean,int,int,int,int):0 -> onLayout
    12:12:void androidx.appcompat.widget.LinearLayoutCompat.layoutHorizontal(int,int,int,int):0:0 -> onLayout
    12:12:void onLayout(boolean,int,int,int,int):0 -> onLayout
    13:13:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onLayout
    13:13:void androidx.appcompat.widget.LinearLayoutCompat.layoutHorizontal(int,int,int,int):0 -> onLayout
    13:13:void onLayout(boolean,int,int,int,int):0 -> onLayout
    14:14:void androidx.appcompat.widget.LinearLayoutCompat.layoutHorizontal(int,int,int,int):0:0 -> onLayout
    14:14:void onLayout(boolean,int,int,int,int):0 -> onLayout
    15:15:void androidx.appcompat.widget.LinearLayoutCompat.setChildFrame(android.view.View,int,int,int,int):0:0 -> onLayout
    15:15:void androidx.appcompat.widget.LinearLayoutCompat.layoutHorizontal(int,int,int,int):0 -> onLayout
    15:15:void onLayout(boolean,int,int,int,int):0 -> onLayout
    16:16:void androidx.appcompat.widget.LinearLayoutCompat.layoutHorizontal(int,int,int,int):0:0 -> onLayout
    16:16:void onLayout(boolean,int,int,int,int):0 -> onLayout
    1:1:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onMeasure
    2:2:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0 -> onMeasure
    3:3:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0:0 -> onMeasure
    3:3:void onMeasure(int,int):0 -> onMeasure
    4:4:void androidx.appcompat.widget.LinearLayoutCompat.measureChildBeforeLayout(android.view.View,int,int,int,int,int):0:0 -> onMeasure
    4:4:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0 -> onMeasure
    4:4:void onMeasure(int,int):0 -> onMeasure
    5:5:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0:0 -> onMeasure
    5:5:void onMeasure(int,int):0 -> onMeasure
    6:6:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onMeasure
    6:6:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0 -> onMeasure
    6:6:void onMeasure(int,int):0 -> onMeasure
    7:7:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0:0 -> onMeasure
    7:7:void onMeasure(int,int):0 -> onMeasure
    8:8:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onMeasure
    8:8:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0 -> onMeasure
    8:8:void onMeasure(int,int):0 -> onMeasure
    9:9:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0:0 -> onMeasure
    9:9:void onMeasure(int,int):0 -> onMeasure
    10:10:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onMeasure
    10:10:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0 -> onMeasure
    10:10:void onMeasure(int,int):0 -> onMeasure
    11:11:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0:0 -> onMeasure
    11:11:void onMeasure(int,int):0 -> onMeasure
    12:12:void androidx.appcompat.widget.LinearLayoutCompat.forceUniformWidth(int,int):0:0 -> onMeasure
    12:12:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0 -> onMeasure
    12:12:void onMeasure(int,int):0 -> onMeasure
    13:13:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onMeasure
    13:13:void androidx.appcompat.widget.LinearLayoutCompat.forceUniformWidth(int,int):0 -> onMeasure
    13:13:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0 -> onMeasure
    13:13:void onMeasure(int,int):0 -> onMeasure
    14:14:void androidx.appcompat.widget.LinearLayoutCompat.forceUniformWidth(int,int):0:0 -> onMeasure
    14:14:void androidx.appcompat.widget.LinearLayoutCompat.measureVertical(int,int):0 -> onMeasure
    14:14:void onMeasure(int,int):0 -> onMeasure
    15:15:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0:0 -> onMeasure
    15:15:void onMeasure(int,int):0 -> onMeasure
    16:16:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onMeasure
    16:16:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0 -> onMeasure
    16:16:void onMeasure(int,int):0 -> onMeasure
    17:17:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0:0 -> onMeasure
    17:17:void onMeasure(int,int):0 -> onMeasure
    18:18:void androidx.appcompat.widget.LinearLayoutCompat.measureChildBeforeLayout(android.view.View,int,int,int,int,int):0:0 -> onMeasure
    18:18:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0 -> onMeasure
    18:18:void onMeasure(int,int):0 -> onMeasure
    19:19:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0:0 -> onMeasure
    19:19:void onMeasure(int,int):0 -> onMeasure
    20:20:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onMeasure
    20:20:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0 -> onMeasure
    20:20:void onMeasure(int,int):0 -> onMeasure
    21:21:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0:0 -> onMeasure
    21:21:void onMeasure(int,int):0 -> onMeasure
    22:22:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onMeasure
    22:22:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0 -> onMeasure
    22:22:void onMeasure(int,int):0 -> onMeasure
    23:23:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0:0 -> onMeasure
    23:23:void onMeasure(int,int):0 -> onMeasure
    24:24:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onMeasure
    24:24:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0 -> onMeasure
    24:24:void onMeasure(int,int):0 -> onMeasure
    25:25:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0:0 -> onMeasure
    25:25:void onMeasure(int,int):0 -> onMeasure
    26:26:void androidx.appcompat.widget.LinearLayoutCompat.forceUniformHeight(int,int):0:0 -> onMeasure
    26:26:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0 -> onMeasure
    26:26:void onMeasure(int,int):0 -> onMeasure
    27:27:android.view.View androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):0:0 -> onMeasure
    27:27:void androidx.appcompat.widget.LinearLayoutCompat.forceUniformHeight(int,int):0 -> onMeasure
    27:27:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0 -> onMeasure
    27:27:void onMeasure(int,int):0 -> onMeasure
    28:28:void androidx.appcompat.widget.LinearLayoutCompat.forceUniformHeight(int,int):0:0 -> onMeasure
    28:28:void androidx.appcompat.widget.LinearLayoutCompat.measureHorizontal(int,int):0 -> onMeasure
    28:28:void onMeasure(int,int):0 -> onMeasure
    1:1:void setBaselineAligned(boolean):0:0 -> setBaselineAligned
    1:1:void setBaselineAlignedChildIndex(int):0:0 -> setBaselineAlignedChildIndex
    1:1:void setDividerDrawable(android.graphics.drawable.Drawable):0:0 -> setDividerDrawable
    1:1:void setDividerPadding(int):0:0 -> setDividerPadding
    1:1:void setGravity(int):0:0 -> setGravity
    1:1:void setHorizontalGravity(int):0:0 -> setHorizontalGravity
    1:1:void setMeasureWithLargestChildEnabled(boolean):0:0 -> setMeasureWithLargestChildEnabled
    1:1:void setOrientation(int):0:0 -> setOrientation
    1:1:void setShowDividers(int):0:0 -> setShowDividers
    1:1:void setVerticalGravity(int):0:0 -> setVerticalGravity
    1:1:void setWeightSum(float):0:0 -> setWeightSum
    1:1:boolean shouldDelayChildPressedState():0:0 -> shouldDelayChildPressedState
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> m.n0:
# {"id":"sourceFile","fileName":"LinearLayoutCompat.java"}
    float weight -> a
    int gravity -> b
    1:1:void <init>(int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void <init>(android.view.ViewGroup$LayoutParams):0:0 -> <init>
androidx.appcompat.widget.ListPopupWindow -> m.u0:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    android.content.Context mContext -> b
    android.widget.ListAdapter mAdapter -> c
    androidx.appcompat.widget.DropDownListView mDropDownList -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/w0;"}
    int mDropDownWidth -> e
    int mDropDownHorizontalOffset -> f
    int mDropDownVerticalOffset -> g
    boolean mDropDownVerticalOffsetSet -> h
    boolean mOverlapAnchor -> i
    boolean mOverlapAnchorSet -> j
    int mDropDownGravity -> k
    android.database.DataSetObserver mObserver -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/r0;"}
    android.view.View mDropDownAnchorView -> m
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> n
    androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/p0;"}
    androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/t0;"}
    androidx.appcompat.widget.ListPopupWindow$PopupScrollListener mScrollListener -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/s0;"}
    androidx.appcompat.widget.ListPopupWindow$ListSelectorHider mHideSelector -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/p0;"}
    android.os.Handler mHandler -> s
    android.graphics.Rect mTempRect -> t
    android.graphics.Rect mEpicenterBounds -> u
    boolean mModal -> v
    android.widget.PopupWindow mPopup -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/x;"}
    java.lang.reflect.Method sSetClipToWindowEnabledMethod -> x
    java.lang.reflect.Method sGetMaxAvailableHeightMethod -> y
    java.lang.reflect.Method sSetEpicenterBoundsMethod -> z
    1:1:void <clinit>():0:0 -> <clinit>
    88:92:void androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    88:92:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;II)V"}
    93:96:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    93:96:void androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    93:96:void androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    93:96:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    97:102:boolean androidx.appcompat.widget.TintTypedArray.hasValue(int):0:0 -> <init>
    97:102:void androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    97:102:void androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    97:102:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    103:106:boolean androidx.appcompat.widget.TintTypedArray.getBoolean(int,boolean):0:0 -> <init>
    103:106:void androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    103:106:void androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    103:106:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    107:109:void androidx.appcompat.widget.AppCompatPopupWindow.setSupportOverlapAnchor(boolean):0:0 -> <init>
    107:109:void androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    107:109:void androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    107:109:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    110:130:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    110:130:void androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    110:130:void androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    110:130:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    131:133:void androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    131:133:void androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    131:133:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    134:138:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    134:138:void androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    134:138:void androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    134:138:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    139:142:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void setAdapter(android.widget.ListAdapter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/h;)V"}
    1:1:void dismiss():0:0 -> dismiss
    1:1:boolean isShowing():0:0 -> e
    1:1:android.widget.ListView getListView():0:0 -> f
    17:28:androidx.appcompat.widget.DropDownListView androidx.appcompat.widget.MenuPopupWindow.createDropDownListView(android.content.Context,boolean):0:0 -> h
    17:28:int androidx.appcompat.widget.ListPopupWindow.buildDropDown():0 -> h
    17:28:void show():0 -> h
    29:136:int androidx.appcompat.widget.ListPopupWindow.buildDropDown():0:0 -> h
    29:136:void show():0 -> h
    137:183:int androidx.appcompat.widget.ListPopupWindow.getMaxAvailableHeight(android.view.View,int,boolean):0:0 -> h
    137:183:int androidx.appcompat.widget.ListPopupWindow.buildDropDown():0 -> h
    137:183:void show():0 -> h
    184:258:int androidx.appcompat.widget.ListPopupWindow.buildDropDown():0:0 -> h
    184:258:void show():0 -> h
    259:267:boolean androidx.appcompat.widget.ListPopupWindow.isInputMethodNotNeeded():0:0 -> h
    259:267:void show():0 -> h
    268:313:void androidx.core.widget.PopupWindowCompat.setWindowLayoutType(android.widget.PopupWindow,int):0:0 -> h
    268:313:void show():0 -> h
    314:323:void show():0:0 -> h
    324:340:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> h
    324:340:void show():0 -> h
    341:407:void show():0:0 -> h
    408:420:void androidx.appcompat.widget.ListPopupWindow.setPopupClipToScreenEnabled(boolean):0:0 -> h
    408:420:void show():0 -> h
    421:475:void show():0:0 -> h
    476:480:void androidx.core.widget.PopupWindowCompat.showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int):0:0 -> h
    476:480:void show():0 -> h
    481:499:void show():0:0 -> h
    500:513:void androidx.appcompat.widget.ListPopupWindow.clearListSelection():0:0 -> h
    500:513:void show():0 -> h
    514:517:void show():0:0 -> h
androidx.appcompat.widget.ListPopupWindow$2 -> m.p0:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/u0;"}
    1:8:void androidx.appcompat.widget.ListPopupWindow$2.<init>(androidx.appcompat.widget.ListPopupWindow):0:0 -> <init>
    1:8:void $r8$init$synthetic(androidx.appcompat.widget.ListPopupWindow,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/u0;I)V"}
    8:13:void androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable.run():0:0 -> run
    8:13:void run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    14:19:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> run
    14:19:void androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable.run():0 -> run
    14:19:void run$bridge():0 -> run
    20:54:void androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable.run():0:0 -> run
    20:54:void run$bridge():0 -> run
    55:59:void androidx.appcompat.widget.ListPopupWindow.clearListSelection():0:0 -> run
    55:59:void androidx.appcompat.widget.ListPopupWindow$ListSelectorHider.run():0 -> run
    55:59:void run$bridge():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    60:66:void androidx.appcompat.widget.ListPopupWindow.clearListSelection():0:0 -> run
    60:66:void androidx.appcompat.widget.ListPopupWindow$ListSelectorHider.run():0 -> run
    60:66:void run$bridge():0 -> run
androidx.appcompat.widget.ListPopupWindow$3 -> m.q0:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    int $r8$classId -> b
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.ListPopupWindow this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:8:void androidx.appcompat.widget.ListPopupWindow$3.<init>(androidx.appcompat.widget.ListPopupWindow):0:0 -> <init>
    1:8:void $r8$init$synthetic(java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)V"}
    10:18:void androidx.appcompat.widget.SearchView$9.onItemSelected(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemSelected
    10:18:void onItemSelected$bridge(android.widget.AdapterView,android.view.View,int,long):0 -> onItemSelected
      # {"id":"com.android.tools.r8.synthesized"}
    19:28:void androidx.appcompat.widget.ListPopupWindow$3.onItemSelected(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemSelected
    19:28:void onItemSelected$bridge(android.widget.AdapterView,android.view.View,int,long):0 -> onItemSelected
    1:1:void onNothingSelected$bridge(android.widget.AdapterView):0:0 -> onNothingSelected
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> R8$$REMOVED$$CLASS$$20:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> m.r0:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    5:8:void androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver.<init>(androidx.appcompat.widget.ListPopupWindow):0:0 -> <init>
    5:8:void $r8$init$synthetic(java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)V"}
    11:18:void androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver.onChanged():0:0 -> onChanged
    11:18:void onChanged$bridge():0 -> onChanged
      # {"id":"com.android.tools.r8.synthesized"}
    19:20:boolean androidx.appcompat.widget.ListPopupWindow.isShowing():0:0 -> onChanged
    19:20:void androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver.onChanged():0 -> onChanged
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    19:20:void onChanged$bridge():0 -> onChanged
    21:26:boolean androidx.appcompat.widget.ListPopupWindow.isShowing():0:0 -> onChanged
    21:26:void androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver.onChanged():0 -> onChanged
    21:26:void onChanged$bridge():0 -> onChanged
    27:30:void androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver.onChanged():0:0 -> onChanged
    27:30:void onChanged$bridge():0 -> onChanged
    11:18:void androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver.onInvalidated():0:0 -> onInvalidated
    11:18:void onInvalidated$bridge():0 -> onInvalidated
      # {"id":"com.android.tools.r8.synthesized"}
    19:22:void androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver.onInvalidated():0:0 -> onInvalidated
    19:22:void onInvalidated$bridge():0 -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> m.s0:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/u0;"}
    1:1:void <init>(androidx.appcompat.widget.ListPopupWindow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/u0;)V"}
    1:1:void onScroll(android.widget.AbsListView,int,int,int):0:0 -> onScroll
    6:7:boolean androidx.appcompat.widget.ListPopupWindow.isInputMethodNotNeeded():0:0 -> onScrollStateChanged
    6:7:void onScrollStateChanged(android.widget.AbsListView,int):0 -> onScrollStateChanged
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:15:boolean androidx.appcompat.widget.ListPopupWindow.isInputMethodNotNeeded():0:0 -> onScrollStateChanged
    8:15:void onScrollStateChanged(android.widget.AbsListView,int):0 -> onScrollStateChanged
    16:34:void onScrollStateChanged(android.widget.AbsListView,int):0:0 -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> m.t0:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/u0;"}
    1:1:void <init>(androidx.appcompat.widget.ListPopupWindow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/u0;)V"}
    1:1:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> R8$$REMOVED$$CLASS$$21:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
androidx.appcompat.widget.MenuItemHoverListener -> m.v0:
# {"id":"sourceFile","fileName":"MenuItemHoverListener.java"}
    void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Ll/k;)V"}
    void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Landroid/view/MenuItem;)V"}
androidx.appcompat.widget.MenuPopupWindow -> m.x0:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/v0;"}
    java.lang.reflect.Method sSetTouchModalMethod -> B
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Ll/k;)V"}
    1:1:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Landroid/view/MenuItem;)V"}
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> m.w0:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    int mAdvanceKey -> o
    int mRetreatKey -> p
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/v0;"}
    android.view.MenuItem mHoveredMenuItem -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/k;"}
    1:1:void <init>(android.content.Context,boolean):0:0 -> <init>
    73:78:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuAdapter.getAdapterMenu():0:0 -> onHoverEvent
    73:78:boolean onHoverEvent(android.view.MotionEvent):0 -> onHoverEvent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    79:95:boolean onHoverEvent(android.view.MotionEvent):0:0 -> onHoverEvent
    58:60:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuAdapter.getAdapterMenu():0:0 -> onKeyDown
    58:60:boolean onKeyDown(int,android.view.KeyEvent):0 -> onKeyDown
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    61:69:boolean onKeyDown(int,android.view.KeyEvent):0:0 -> onKeyDown
    1:1:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener):0:0 -> setHoverListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/v0;)V"}
    1:1:void setSelector(android.graphics.drawable.Drawable):0:0 -> setSelector
androidx.appcompat.widget.ResourceManagerInternal -> m.b1:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    java.util.WeakHashMap mTintLists -> a
    androidx.collection.ArrayMap mDelegates -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/a;"}
    androidx.collection.SparseArrayCompat mKnownDrawableIdTags -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/j;"}
    java.util.WeakHashMap mDrawableCaches -> d
    android.util.TypedValue mTypedValue -> e
    boolean mHasCheckedVectorDrawableSetup -> f
    androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/s;"}
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> h
    androidx.appcompat.widget.ResourceManagerInternal INSTANCE -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/b1;"}
    androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/z0;"}
    8:13:void androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.<init>(int):0:0 -> <clinit>
    8:13:void <clinit>():0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    7:13:void androidx.collection.ArrayMap.<init>():0:0 -> a
    7:13:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lm/y0;)V"}
    14:17:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate):0:0 -> a
    1:1:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;JLandroid/graphics/drawable/Drawable;)V"}
    22:31:long androidx.appcompat.widget.ResourceManagerInternal.createCacheKey(android.util.TypedValue):0:0 -> c
    22:31:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int):0 -> c
    32:49:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int):0:0 -> c
    50:78:android.graphics.drawable.Drawable androidx.appcompat.widget.AppCompatDrawableManager$1.createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int):0:0 -> c
    50:78:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int):0 -> c
    79:87:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int):0:0 -> c
    21:58:void androidx.appcompat.widget.ResourceManagerInternal.installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal):0:0 -> d
    21:58:androidx.appcompat.widget.ResourceManagerInternal get():0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/b1;"}
    59:62:androidx.appcompat.widget.ResourceManagerInternal get():0:0 -> d
    15:18:java.lang.Object androidx.collection.LongSparseArray.get(long):0:0 -> e
    15:18:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0 -> e
    19:42:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0:0 -> e
    43:65:void androidx.collection.LongSparseArray.remove(long):0:0 -> e
    43:65:void androidx.collection.LongSparseArray.delete(long):0 -> e
    43:65:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0 -> e
    66:69:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0:0 -> e
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int):0:0 -> f
    13:18:void androidx.appcompat.widget.ResourceManagerInternal.checkVectorDrawableSetup(android.content.Context):0:0 -> g
    13:18:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;"}
    19:43:boolean androidx.appcompat.widget.ResourceManagerInternal.isVectorDrawable(android.graphics.drawable.Drawable):0:0 -> g
    19:43:void androidx.appcompat.widget.ResourceManagerInternal.checkVectorDrawableSetup(android.content.Context):0 -> g
    19:43:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    44:55:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int):0:0 -> g
    44:55:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    56:59:java.lang.Object androidx.collection.SparseArrayCompat.get(int):0:0 -> g
    56:59:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int):0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    56:59:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    60:71:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int):0:0 -> g
    60:71:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    72:80:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> g
    72:80:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int):0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    72:80:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    81:107:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int):0:0 -> g
    81:107:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    108:117:long androidx.appcompat.widget.ResourceManagerInternal.createCacheKey(android.util.TypedValue):0:0 -> g
    108:117:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int):0 -> g
    108:117:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    118:171:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int):0:0 -> g
    118:171:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    172:175:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> g
    172:175:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int):0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    172:175:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    176:227:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int):0:0 -> g
    176:227:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    228:237:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0:0 -> g
    238:243:android.graphics.drawable.Drawable androidx.core.content.ContextCompat.getDrawable(android.content.Context,int):0:0 -> g
    238:243:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    244:263:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0:0 -> g
    244:263:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    264:276:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> g
    264:276:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> g
    264:276:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    277:280:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager$1.getTintModeForDrawableRes(int):0:0 -> g
    277:280:android.graphics.PorterDuff$Mode androidx.appcompat.widget.ResourceManagerInternal.getTintMode(int):0 -> g
    277:280:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> g
    277:280:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    281:308:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> g
    281:308:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> g
    281:308:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    309:319:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> g
    309:319:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> g
    309:319:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    320:321:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> g
    320:321:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0 -> g
    320:321:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> g
    320:321:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    322:373:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> g
    322:373:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> g
    322:373:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    374:375:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> g
    374:375:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0 -> g
    374:375:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> g
    374:375:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    376:401:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> g
    376:401:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> g
    376:401:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    402:406:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0:0 -> g
    402:406:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    407:414:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0:0 -> g
    415:422:void androidx.appcompat.widget.ResourceManagerInternal.checkVectorDrawableSetup(android.content.Context):0:0 -> g
    415:422:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> g
    423:424:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0:0 -> g
    15:19:int androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.generateCacheKey(int,android.graphics.PorterDuff$Mode):0:0 -> h
    15:19:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.get(int,android.graphics.PorterDuff$Mode):0 -> h
    15:19:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> h
    20:31:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.get(int,android.graphics.PorterDuff$Mode):0:0 -> h
    20:31:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> h
    32:36:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> h
    37:41:int androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.generateCacheKey(int,android.graphics.PorterDuff$Mode):0:0 -> h
    37:41:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter):0 -> h
    37:41:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> h
    42:54:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter):0:0 -> h
    42:54:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> h
    55:58:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> h
    7:14:android.content.res.ColorStateList androidx.appcompat.widget.ResourceManagerInternal.getTintListFromCache(android.content.Context,int):0:0 -> i
    7:14:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> i
    15:18:java.lang.Object androidx.collection.SparseArrayCompat.get(int):0:0 -> i
    15:18:android.content.res.ColorStateList androidx.appcompat.widget.ResourceManagerInternal.getTintListFromCache(android.content.Context,int):0 -> i
    15:18:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> i
    19:29:android.content.res.ColorStateList androidx.appcompat.widget.ResourceManagerInternal.getTintListFromCache(android.content.Context,int):0:0 -> i
    19:29:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> i
    30:39:android.content.res.ColorStateList getTintList(android.content.Context,int):0:0 -> i
    40:73:void androidx.appcompat.widget.ResourceManagerInternal.addTintListToCache(android.content.Context,int,android.content.res.ColorStateList):0:0 -> i
    40:73:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> i
    74:77:android.content.res.ColorStateList getTintList(android.content.Context,int):0:0 -> i
    1:1:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/s;)V"}
    6:7:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> k
    6:7:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    6:7:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    8:99:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> k
    8:99:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    100:105:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.AppCompatDrawableManager.getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> k
    100:105:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    100:105:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    106:116:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> k
    106:116:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    117:119:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.AppCompatDrawableManager.getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> k
    117:119:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    117:119:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> m.y0:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:6:void androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate.<init>():0:0 -> <init>
    1:6:void $r8$init$synthetic(int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    7:10:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate.createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    7:10:android.graphics.drawable.Drawable createFromXmlInner$bridge(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/content/res/XmlResourceParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;"}
    11:25:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    11:25:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate.createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    11:25:android.graphics.drawable.Drawable createFromXmlInner$bridge(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    26:29:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate.createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    26:29:android.graphics.drawable.Drawable createFromXmlInner$bridge(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    30:33:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate.createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    30:33:android.graphics.drawable.Drawable createFromXmlInner$bridge(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    34:35:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    34:35:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate.createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    34:35:android.graphics.drawable.Drawable createFromXmlInner$bridge(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    36:38:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.<init>(android.content.Context):0:0 -> a
    36:38:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    36:38:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate.createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    36:38:android.graphics.drawable.Drawable createFromXmlInner$bridge(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    39:48:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    39:48:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate.createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    39:48:android.graphics.drawable.Drawable createFromXmlInner$bridge(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    49:52:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate.createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    49:52:android.graphics.drawable.Drawable createFromXmlInner$bridge(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    53:70:android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate.createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    53:70:android.graphics.drawable.Drawable createFromXmlInner$bridge(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> R8$$REMOVED$$CLASS$$22:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> m.z0:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate -> m.a1:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> R8$$REMOVED$$CLASS$$23:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
androidx.appcompat.widget.RtlSpacingHelper -> m.c1:
# {"id":"sourceFile","fileName":"RtlSpacingHelper.java"}
    int mLeft -> a
    int mRight -> b
    int mStart -> c
    int mEnd -> d
    int mExplicitLeft -> e
    int mExplicitRight -> f
    boolean mIsRtl -> g
    boolean mIsRelative -> h
    1:1:void setRelative(int,int):0:0 -> a
androidx.appcompat.widget.ScrollingTabContainerView -> m.d1:
# {"id":"sourceFile","fileName":"ScrollingTabContainerView.java"}
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
# {"id":"sourceFile","fileName":"SearchView.java"}
    android.graphics.Rect mSearchSrcTextViewBounds -> A
    android.graphics.Rect mSearchSrtTextViewBoundsExpanded -> B
    int[] mTemp -> C
    int[] mTemp2 -> D
    android.widget.ImageView mCollapsedIcon -> E
    android.graphics.drawable.Drawable mSearchHintIcon -> F
    int mSuggestionRowLayout -> G
    int mSuggestionCommitIconResId -> H
    android.content.Intent mVoiceWebSearchIntent -> I
    android.content.Intent mVoiceAppSearchIntent -> J
    java.lang.CharSequence mDefaultQueryHint -> K
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> L
    android.view.View$OnClickListener mOnSearchClickListener -> M
    boolean mIconifiedByDefault -> N
    boolean mIconified -> O
    androidx.cursoradapter.widget.CursorAdapter mSuggestionsAdapter -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"Li0/b;"}
    boolean mSubmitButtonEnabled -> Q
    java.lang.CharSequence mQueryHint -> R
    boolean mQueryRefinement -> S
    boolean mClearingFocus -> T
    int mMaxWidth -> U
    boolean mVoiceButtonEnabled -> V
    java.lang.CharSequence mUserQuery -> W
    boolean mExpandedInActionView -> a0
    int mCollapsedImeOptions -> b0
    android.app.SearchableInfo mSearchable -> c0
    android.os.Bundle mAppSearchData -> d0
    java.lang.Runnable mUpdateDrawableStateRunnable -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/f1;"}
    java.lang.Runnable mReleaseCursorRunnable -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/f1;"}
    java.util.WeakHashMap mOutsideDrawablesCache -> g0
    androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/k1;"}
    androidx.appcompat.widget.SearchView$SearchAutoComplete mSearchSrcTextView -> q
    android.view.View mSearchEditFrame -> r
    android.view.View mSearchPlate -> s
    android.view.View mSubmitArea -> t
    android.widget.ImageView mSearchButton -> u
    android.widget.ImageView mGoButton -> v
    android.widget.ImageView mCloseButton -> w
    android.widget.ImageView mVoiceButton -> x
    android.view.View mDropDownAnchor -> y
    androidx.appcompat.widget.SearchView$UpdatableTouchDelegate mTouchDelegate -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/q1;"}
    5:55:void androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector.<init>():0:0 -> <clinit>
    5:55:void <clinit>():0 -> <clinit>
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    7:7:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter():0:0 -> getSuggestionsAdapter
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/b;"}
    1:1:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;"}
    1:1:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo):0:0 -> i
    15:26:void androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector.doBeforeTextChanged(android.widget.AutoCompleteTextView):0:0 -> j
    15:26:void forceSuggestionQuery():0 -> j
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    27:31:void androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector.doBeforeTextChanged(android.widget.AutoCompleteTextView):0:0 -> j
    27:31:void forceSuggestionQuery():0 -> j
    32:42:void androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector.doAfterTextChanged(android.widget.AutoCompleteTextView):0:0 -> j
    32:42:void forceSuggestionQuery():0 -> j
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    43:46:void androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector.doAfterTextChanged(android.widget.AutoCompleteTextView):0:0 -> j
    43:46:void forceSuggestionQuery():0 -> j
    1:1:void onCloseClicked():0:0 -> k
    5:8:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> l
    5:8:boolean launchSuggestion(int,int,java.lang.String):0 -> l
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:8:boolean onItemClicked(int,int,java.lang.String):0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    9:17:boolean launchSuggestion(int,int,java.lang.String):0:0 -> l
    9:17:boolean onItemClicked(int,int,java.lang.String):0 -> l
    18:19:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> l
    18:19:boolean launchSuggestion(int,int,java.lang.String):0 -> l
    18:19:boolean onItemClicked(int,int,java.lang.String):0 -> l
    20:31:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> l
    20:31:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> l
    20:31:boolean launchSuggestion(int,int,java.lang.String):0 -> l
    20:31:boolean onItemClicked(int,int,java.lang.String):0 -> l
    32:44:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> l
    32:44:boolean launchSuggestion(int,int,java.lang.String):0 -> l
    32:44:boolean onItemClicked(int,int,java.lang.String):0 -> l
    45:56:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> l
    45:56:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> l
    45:56:boolean launchSuggestion(int,int,java.lang.String):0 -> l
    45:56:boolean onItemClicked(int,int,java.lang.String):0 -> l
    57:64:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> l
    57:64:boolean launchSuggestion(int,int,java.lang.String):0 -> l
    57:64:boolean onItemClicked(int,int,java.lang.String):0 -> l
    65:74:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> l
    65:74:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> l
    65:74:boolean launchSuggestion(int,int,java.lang.String):0 -> l
    65:74:boolean onItemClicked(int,int,java.lang.String):0 -> l
    75:108:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> l
    75:108:boolean launchSuggestion(int,int,java.lang.String):0 -> l
    75:108:boolean onItemClicked(int,int,java.lang.String):0 -> l
    109:126:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> l
    109:126:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> l
    109:126:boolean launchSuggestion(int,int,java.lang.String):0 -> l
    109:126:boolean onItemClicked(int,int,java.lang.String):0 -> l
    127:162:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> l
    127:162:boolean launchSuggestion(int,int,java.lang.String):0 -> l
    127:162:boolean onItemClicked(int,int,java.lang.String):0 -> l
    163:191:void launchIntent(android.content.Intent):0:0 -> l
    163:191:boolean launchSuggestion(int,int,java.lang.String):0 -> l
    163:191:boolean onItemClicked(int,int,java.lang.String):0 -> l
    192:194:boolean onItemClicked(int,int,java.lang.String):0:0 -> l
    195:198:void dismissSuggestions():0:0 -> l
    195:198:boolean onItemClicked(int,int,java.lang.String):0 -> l
    3:8:void rewriteQueryFromSuggestion(int):0:0 -> m
    3:8:boolean onItemSelected(int):0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    9:13:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> m
    9:13:void rewriteQueryFromSuggestion(int):0 -> m
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:13:boolean onItemSelected(int):0 -> m
    14:35:void rewriteQueryFromSuggestion(int):0:0 -> m
    14:35:boolean onItemSelected(int):0 -> m
    1:1:void onQueryRefine(java.lang.CharSequence):0:0 -> n
    26:37:void launchQuerySearch(int,java.lang.String,java.lang.String):0:0 -> o
    26:37:void onSubmitQuery():0 -> o
    38:40:void onSubmitQuery():0:0 -> o
    41:44:void dismissSuggestions():0:0 -> o
    41:44:void onSubmitQuery():0 -> o
    10:44:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect):0:0 -> onLayout
    10:44:void onLayout(boolean,int,int,int,int):0 -> onLayout
    45:69:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    70:91:void androidx.appcompat.widget.SearchView$UpdatableTouchDelegate.setBounds(android.graphics.Rect,android.graphics.Rect):0:0 -> onLayout
    70:91:void onLayout(boolean,int,int,int,int):0 -> onLayout
    5:94:void onMeasure(int,int):0:0 -> onMeasure
    11:12:android.os.Parcelable androidx.customview.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    11:12:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:24:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    7:14:void androidx.appcompat.widget.SearchView$SavedState.<init>(android.os.Parcelable):0:0 -> onSaveInstanceState
    7:14:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    6:9:void postUpdateFocusedState():0:0 -> onWindowFocusChanged
    6:9:void onWindowFocusChanged(boolean):0 -> onWindowFocusChanged
    1:1:void updateCloseButton():0:0 -> p
    1:1:void updateFocusedState():0:0 -> q
    20:56:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence):0:0 -> r
    20:56:void updateQueryHint():0 -> r
    57:60:void updateQueryHint():0:0 -> r
    20:34:boolean requestFocus(int,android.graphics.Rect):0:0 -> requestFocus
    15:38:void updateSubmitArea():0:0 -> s
    8:27:void onSearchClicked():0:0 -> setIconified
    8:27:void setIconified(boolean):0 -> setIconified
    1:1:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener):0:0 -> setOnCloseListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/l1;)V"}
    1:1:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener):0:0 -> setOnQueryTextListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/m1;)V"}
    1:1:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener):0:0 -> setOnSuggestionListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/n1;)V"}
    16:18:void androidx.appcompat.widget.SuggestionsAdapter.setQueryRefinement(int):0:0 -> setQueryRefinementEnabled
    16:18:void setQueryRefinementEnabled(boolean):0 -> setQueryRefinementEnabled
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:96:void updateSearchAutoComplete():0:0 -> setSearchableInfo
    9:96:void setSearchableInfo(android.app.SearchableInfo):0 -> setSearchableInfo
    97:98:void androidx.appcompat.widget.SuggestionsAdapter.setQueryRefinement(int):0:0 -> setSearchableInfo
    97:98:void updateSearchAutoComplete():0 -> setSearchableInfo
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    97:98:void setSearchableInfo(android.app.SearchableInfo):0 -> setSearchableInfo
    99:106:void setSearchableInfo(android.app.SearchableInfo):0:0 -> setSearchableInfo
    107:160:boolean hasVoiceSearch():0:0 -> setSearchableInfo
    107:160:void setSearchableInfo(android.app.SearchableInfo):0 -> setSearchableInfo
    161:169:void setSearchableInfo(android.app.SearchableInfo):0:0 -> setSearchableInfo
    5:8:void setSubmitButtonEnabled(boolean):0:0 -> setSubmitButtonEnabled
    1:1:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter):0:0 -> setSuggestionsAdapter
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/b;)V"}
    15:36:void updateSubmitButton(boolean):0:0 -> t
    78:86:void updateVoiceButton(boolean):0:0 -> u
    78:86:void updateViewsVisibility(boolean):0 -> u
    87:90:void updateViewsVisibility(boolean):0:0 -> u
androidx.appcompat.widget.SearchView$1 -> m.f1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.SearchView this$0 -> b
    1:8:void androidx.appcompat.widget.SearchView$1.<init>(androidx.appcompat.widget.SearchView):0:0 -> <init>
    1:8:void $r8$init$synthetic(androidx.appcompat.widget.SearchView,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    8:18:void androidx.appcompat.widget.SearchView$2.run():0:0 -> run
    8:18:void run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    19:22:void androidx.appcompat.widget.SearchView$1.run():0:0 -> run
    19:22:void run$bridge():0 -> run
androidx.appcompat.widget.SearchView$10 -> m.e1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> b
    1:1:void <init>(androidx.appcompat.widget.SearchView):0:0 -> <init>
    1:1:void afterTextChanged(android.text.Editable):0:0 -> afterTextChanged
    1:1:void beforeTextChanged(java.lang.CharSequence,int,int,int):0:0 -> beforeTextChanged
    3:4:void androidx.appcompat.widget.SearchView.onTextChanged(java.lang.CharSequence):0:0 -> onTextChanged
    3:4:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:19:void androidx.appcompat.widget.SearchView.onTextChanged(java.lang.CharSequence):0:0 -> onTextChanged
    5:19:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
    20:25:void androidx.appcompat.widget.SearchView.updateVoiceButton(boolean):0:0 -> onTextChanged
    20:25:void androidx.appcompat.widget.SearchView.onTextChanged(java.lang.CharSequence):0 -> onTextChanged
    20:25:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
    26:31:boolean androidx.appcompat.widget.SearchView.isIconified():0:0 -> onTextChanged
    26:31:void androidx.appcompat.widget.SearchView.updateVoiceButton(boolean):0 -> onTextChanged
    26:31:void androidx.appcompat.widget.SearchView.onTextChanged(java.lang.CharSequence):0 -> onTextChanged
    26:31:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
    32:42:void androidx.appcompat.widget.SearchView.updateVoiceButton(boolean):0:0 -> onTextChanged
    32:42:void androidx.appcompat.widget.SearchView.onTextChanged(java.lang.CharSequence):0 -> onTextChanged
    32:42:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
    43:55:void androidx.appcompat.widget.SearchView.onTextChanged(java.lang.CharSequence):0:0 -> onTextChanged
    43:55:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> R8$$REMOVED$$CLASS$$24:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$3 -> m.g1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> a
    1:1:void <init>(androidx.appcompat.widget.SearchView):0:0 -> <init>
    1:1:void onFocusChange(android.view.View,boolean):0:0 -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> m.h1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> a
    1:1:void <init>(androidx.appcompat.widget.SearchView):0:0 -> <init>
    1:1:void androidx.appcompat.widget.SearchView.adjustDropDownSizeAndPosition():0:0 -> onLayoutChange
    1:1:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int):0 -> onLayoutChange
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void androidx.appcompat.widget.SearchView.adjustDropDownSizeAndPosition():0:0 -> onLayoutChange
    2:2:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int):0 -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.a:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> b
    10:27:void androidx.appcompat.widget.SearchView.onSearchClicked():0:0 -> onClick
    10:27:void onClick(android.view.View):0 -> onClick
    28:47:void onClick(android.view.View):0:0 -> onClick
    48:52:void androidx.appcompat.widget.SearchView.onVoiceClicked():0:0 -> onClick
    48:52:void onClick(android.view.View):0 -> onClick
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    53:60:void androidx.appcompat.widget.SearchView.onVoiceClicked():0:0 -> onClick
    53:60:void onClick(android.view.View):0 -> onClick
    61:82:android.content.Intent androidx.appcompat.widget.SearchView.createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo):0:0 -> onClick
    61:82:void androidx.appcompat.widget.SearchView.onVoiceClicked():0 -> onClick
    61:82:void onClick(android.view.View):0 -> onClick
    83:120:void androidx.appcompat.widget.SearchView.onVoiceClicked():0:0 -> onClick
    83:120:void onClick(android.view.View):0 -> onClick
    121:124:void onClick(android.view.View):0:0 -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.b:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> b
    27:31:boolean androidx.appcompat.widget.SearchView.onSuggestionsKey(android.view.View,int,android.view.KeyEvent):0:0 -> onKey
    27:31:boolean onKey(android.view.View,int,android.view.KeyEvent):0 -> onKey
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    32:109:boolean androidx.appcompat.widget.SearchView.onSuggestionsKey(android.view.View,int,android.view.KeyEvent):0:0 -> onKey
    32:109:boolean onKey(android.view.View,int,android.view.KeyEvent):0 -> onKey
    110:113:boolean androidx.appcompat.widget.SearchView$SearchAutoComplete.isEmpty():0:0 -> onKey
    110:113:boolean onKey(android.view.View,int,android.view.KeyEvent):0 -> onKey
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    114:120:boolean androidx.appcompat.widget.SearchView$SearchAutoComplete.isEmpty():0:0 -> onKey
    114:120:boolean onKey(android.view.View,int,android.view.KeyEvent):0 -> onKey
    121:148:boolean onKey(android.view.View,int,android.view.KeyEvent):0:0 -> onKey
    149:161:void androidx.appcompat.widget.SearchView.launchQuerySearch(int,java.lang.String,java.lang.String):0:0 -> onKey
    149:161:boolean onKey(android.view.View,int,android.view.KeyEvent):0 -> onKey
androidx.appcompat.widget.SearchView$7 -> m.i1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> a
    1:1:void <init>(androidx.appcompat.widget.SearchView):0:0 -> <init>
    1:1:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent):0:0 -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> m.j1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView this$0 -> b
    1:1:void <init>(androidx.appcompat.widget.SearchView):0:0 -> <init>
    1:1:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemClick
androidx.appcompat.widget.SearchView$9 -> R8$$REMOVED$$CLASS$$25:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector -> m.k1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    java.lang.reflect.Method doBeforeTextChanged -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    java.lang.reflect.Method doAfterTextChanged -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    java.lang.reflect.Method ensureImeVisible -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:1:void androidx.appcompat.widget.TintTypedArray.<init>(android.content.Context,android.content.res.TypedArray):0:0 -> <init>
    1:1:void ensureImeVisible(android.widget.AutoCompleteTextView,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/AutoCompleteTextView;)V"}
    1:1:boolean androidx.appcompat.widget.TintTypedArray.getBoolean(int,boolean):0:0 -> b
    1:1:android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList(int):0:0 -> c
    1:1:int androidx.appcompat.widget.TintTypedArray.getDimensionPixelOffset(int,int):0:0 -> d
    1:1:int androidx.appcompat.widget.TintTypedArray.getDimensionPixelSize(int,int):0:0 -> e
    1:1:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> f
    38:45:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0:0 -> g
    38:45:android.graphics.Typeface androidx.appcompat.widget.TintTypedArray.getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILm/a0;)Landroid/graphics/Typeface;"}
    46:55:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0:0 -> g
    46:55:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    46:55:android.graphics.Typeface androidx.appcompat.widget.TintTypedArray.getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    56:78:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0:0 -> g
    56:78:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0 -> g
    56:78:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    56:78:android.graphics.Typeface androidx.appcompat.widget.TintTypedArray.getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    79:92:android.graphics.Typeface androidx.core.graphics.TypefaceCompat.findFromCache(android.content.res.Resources,int,java.lang.String,int,int):0:0 -> g
    79:92:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0 -> g
    79:92:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0 -> g
    79:92:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    79:92:android.graphics.Typeface androidx.appcompat.widget.TintTypedArray.getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    93:149:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0:0 -> g
    93:149:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0 -> g
    93:149:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    93:149:android.graphics.Typeface androidx.appcompat.widget.TintTypedArray.getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    150:170:android.graphics.Typeface androidx.core.graphics.TypefaceCompat.createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int,int):0:0 -> g
    150:170:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0 -> g
    150:170:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0 -> g
    150:170:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    150:170:android.graphics.Typeface androidx.appcompat.widget.TintTypedArray.getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    171:239:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0:0 -> g
    171:239:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0 -> g
    171:239:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    171:239:android.graphics.Typeface androidx.appcompat.widget.TintTypedArray.getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    1:1:int androidx.appcompat.widget.TintTypedArray.getInt(int,int):0:0 -> h
    1:1:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> i
    1:1:java.lang.String androidx.appcompat.widget.TintTypedArray.getString(int):0:0 -> j
    1:1:java.lang.CharSequence androidx.appcompat.widget.TintTypedArray.getText(int):0:0 -> k
    1:1:boolean androidx.appcompat.widget.TintTypedArray.hasValue(int):0:0 -> l
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;[II)Lm/k1;"}
    1:1:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> n
androidx.appcompat.widget.SearchView$OnCloseListener -> m.l1:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$OnQueryTextListener -> m.m1:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$OnSuggestionListener -> m.n1:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$SavedState -> m.p1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    boolean isIconified -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel,java.lang.ClassLoader):0:0 -> <init>
    1:1:java.lang.String toString():0:0 -> toString
    3:7:void androidx.customview.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    3:7:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    8:15:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> m.o1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:6:void androidx.appcompat.widget.SearchView$SavedState$1.<init>():0:0 -> <init>
    1:6:void $r8$init$synthetic(int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.recyclerview.widget.RecyclerView$SavedState androidx.recyclerview.widget.RecyclerView$SavedState$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object androidx.recyclerview.widget.RecyclerView$SavedState$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:java.lang.Object createFromParcel$bridge(android.os.Parcel):0 -> createFromParcel
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:androidx.customview.view.AbsSavedState androidx.customview.view.AbsSavedState$2.createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:androidx.customview.view.AbsSavedState androidx.customview.view.AbsSavedState$2.createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:java.lang.Object androidx.customview.view.AbsSavedState$2.createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:java.lang.Object createFromParcel$bridge(android.os.Parcel):0 -> createFromParcel
    3:3:androidx.appcompat.widget.Toolbar$SavedState androidx.appcompat.widget.Toolbar$SavedState$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    3:3:java.lang.Object androidx.appcompat.widget.Toolbar$SavedState$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    3:3:java.lang.Object createFromParcel$bridge(android.os.Parcel):0 -> createFromParcel
    4:4:androidx.appcompat.widget.SearchView$SavedState androidx.appcompat.widget.SearchView$SavedState$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    4:4:java.lang.Object androidx.appcompat.widget.SearchView$SavedState$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    4:4:java.lang.Object createFromParcel$bridge(android.os.Parcel):0 -> createFromParcel
    5:5:androidx.recyclerview.widget.RecyclerView$SavedState androidx.recyclerview.widget.RecyclerView$SavedState$1.createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    5:5:java.lang.Object androidx.recyclerview.widget.RecyclerView$SavedState$1.createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    5:5:java.lang.Object createFromParcel$bridge(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
      # {"id":"com.android.tools.r8.synthesized"}
    6:6:androidx.customview.view.AbsSavedState androidx.customview.view.AbsSavedState$2.createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    6:6:java.lang.Object androidx.customview.view.AbsSavedState$2.createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    6:6:java.lang.Object createFromParcel$bridge(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    7:7:androidx.appcompat.widget.Toolbar$SavedState androidx.appcompat.widget.Toolbar$SavedState$1.createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    7:7:java.lang.Object androidx.appcompat.widget.Toolbar$SavedState$1.createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    7:7:java.lang.Object createFromParcel$bridge(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    8:8:androidx.appcompat.widget.SearchView$SavedState androidx.appcompat.widget.SearchView$SavedState$1.createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    8:8:java.lang.Object androidx.appcompat.widget.SearchView$SavedState$1.createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    8:8:java.lang.Object createFromParcel$bridge(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    6:8:androidx.recyclerview.widget.RecyclerView$SavedState[] androidx.recyclerview.widget.RecyclerView$SavedState$1.newArray(int):0:0 -> newArray
    6:8:java.lang.Object[] androidx.recyclerview.widget.RecyclerView$SavedState$1.newArray(int):0 -> newArray
    6:8:java.lang.Object[] newArray$bridge(int):0 -> newArray
      # {"id":"com.android.tools.r8.synthesized"}
    9:11:androidx.customview.view.AbsSavedState[] androidx.customview.view.AbsSavedState$2.newArray(int):0:0 -> newArray
    9:11:java.lang.Object[] androidx.customview.view.AbsSavedState$2.newArray(int):0 -> newArray
    9:11:java.lang.Object[] newArray$bridge(int):0 -> newArray
    12:14:androidx.appcompat.widget.Toolbar$SavedState[] androidx.appcompat.widget.Toolbar$SavedState$1.newArray(int):0:0 -> newArray
    12:14:java.lang.Object[] androidx.appcompat.widget.Toolbar$SavedState$1.newArray(int):0 -> newArray
    12:14:java.lang.Object[] newArray$bridge(int):0 -> newArray
    15:18:androidx.appcompat.widget.SearchView$SavedState[] androidx.appcompat.widget.SearchView$SavedState$1.newArray(int):0:0 -> newArray
    15:18:java.lang.Object[] androidx.appcompat.widget.SearchView$SavedState$1.newArray(int):0 -> newArray
    15:18:java.lang.Object[] newArray$bridge(int):0 -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
# {"id":"sourceFile","fileName":"SearchView.java"}
    int mThreshold -> e
    androidx.appcompat.widget.SearchView mSearchView -> f
    boolean mHasPendingShowSoftInputRequest -> g
    java.lang.Runnable mRunShowSoftInputIfNecessary -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/appcompat/widget/c;"}
    1:17:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:17:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:7:boolean androidx.appcompat.widget.SearchView.isIconified():0:0 -> onFocusChanged
    6:7:void androidx.appcompat.widget.SearchView.onTextFocusChanged():0 -> onFocusChanged
    6:7:void onFocusChanged(boolean,int,android.graphics.Rect):0 -> onFocusChanged
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    8:10:void androidx.appcompat.widget.SearchView.onTextFocusChanged():0:0 -> onFocusChanged
    8:10:void onFocusChanged(boolean,int,android.graphics.Rect):0 -> onFocusChanged
    11:15:void androidx.appcompat.widget.SearchView.postUpdateFocusedState():0:0 -> onFocusChanged
    11:15:void androidx.appcompat.widget.SearchView.onTextFocusChanged():0 -> onFocusChanged
    11:15:void onFocusChanged(boolean,int,android.graphics.Rect):0 -> onFocusChanged
    16:27:void androidx.appcompat.widget.SearchView.onTextFocusChanged():0:0 -> onFocusChanged
    16:27:void onFocusChanged(boolean,int,android.graphics.Rect):0 -> onFocusChanged
    29:41:boolean androidx.appcompat.widget.SearchView.isLandscapeMode(android.content.Context):0:0 -> onWindowFocusChanged
    29:41:void onWindowFocusChanged(boolean):0 -> onWindowFocusChanged
    42:47:void onWindowFocusChanged(boolean):0:0 -> onWindowFocusChanged
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.c:
# {"id":"sourceFile","fileName":"SearchView.java"}
    androidx.appcompat.widget.SearchView$SearchAutoComplete this$0 -> a
    3:6:void androidx.appcompat.widget.SearchView$SearchAutoComplete.showSoftInputIfNecessary():0:0 -> run
    3:6:void run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:25:void androidx.appcompat.widget.SearchView$SearchAutoComplete.showSoftInputIfNecessary():0:0 -> run
    7:25:void run():0 -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> m.q1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    android.view.View mDelegateView -> a
    android.graphics.Rect mTargetBounds -> b
    android.graphics.Rect mActualBounds -> c
    android.graphics.Rect mSlopBounds -> d
    int mSlop -> e
    boolean mDelegateTargeted -> f
    39:54:void androidx.appcompat.widget.SearchView$UpdatableTouchDelegate.setBounds(android.graphics.Rect,android.graphics.Rect):0:0 -> <init>
    39:54:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroidx/appcompat/widget/SearchView$SearchAutoComplete;)V"}
    1:1:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
androidx.appcompat.widget.SuggestionsAdapter -> m.s1:
# {"id":"sourceFile","fileName":"SuggestionsAdapter.java"}
    int androidx.cursoradapter.widget.ResourceCursorAdapter.mLayout -> j
    int androidx.cursoradapter.widget.ResourceCursorAdapter.mDropDownLayout -> k
    android.view.LayoutInflater androidx.cursoradapter.widget.ResourceCursorAdapter.mInflater -> l
    androidx.appcompat.widget.SearchView mSearchView -> m
    android.app.SearchableInfo mSearchable -> n
    android.content.Context mProviderContext -> o
    java.util.WeakHashMap mOutsideDrawablesCache -> p
    int mCommitIconResId -> q
    int mQueryRefinement -> r
    android.content.res.ColorStateList mUrlColor -> s
    int mText1Col -> t
    int mText2Col -> u
    int mText2UrlCol -> v
    int mIconName1Col -> w
    int mIconName2Col -> x
    int mFlagsCol -> y
    int $r8$clinit -> z
      # {"id":"com.android.tools.r8.synthesized"}
    5:21:void androidx.cursoradapter.widget.CursorAdapter.<init>(android.content.Context,android.database.Cursor,boolean):0:0 -> <init>
    5:21:void androidx.cursoradapter.widget.ResourceCursorAdapter.<init>(android.content.Context,int,android.database.Cursor,boolean):0 -> <init>
    5:21:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap):0 -> <init>
    22:41:void androidx.cursoradapter.widget.CursorAdapter.init(android.content.Context,android.database.Cursor,int):0:0 -> <init>
    22:41:void androidx.cursoradapter.widget.CursorAdapter.<init>(android.content.Context,android.database.Cursor,boolean):0 -> <init>
    22:41:void androidx.cursoradapter.widget.ResourceCursorAdapter.<init>(android.content.Context,int,android.database.Cursor,boolean):0 -> <init>
    22:41:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap):0 -> <init>
    42:67:void androidx.cursoradapter.widget.ResourceCursorAdapter.<init>(android.content.Context,int,android.database.Cursor,boolean):0:0 -> <init>
    42:67:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap):0 -> <init>
    68:88:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap):0:0 -> <init>
    37:54:void androidx.appcompat.widget.SuggestionsAdapter.setViewText(android.widget.TextView,java.lang.CharSequence):0:0 -> a
    37:54:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroid/database/Cursor;)V"}
    55:70:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    71:142:java.lang.CharSequence androidx.appcompat.widget.SuggestionsAdapter.formatUrl(java.lang.CharSequence):0:0 -> a
    71:142:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    143:169:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    170:185:void androidx.appcompat.widget.SuggestionsAdapter.setViewText(android.widget.TextView,java.lang.CharSequence):0:0 -> a
    170:185:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    186:197:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    198:211:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getIcon1(android.database.Cursor):0:0 -> a
    198:211:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    212:215:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getDefaultIcon1(android.database.Cursor):0:0 -> a
    212:215:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getIcon1(android.database.Cursor):0 -> a
    212:215:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    216:252:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getActivityIconWithCache(android.content.ComponentName):0:0 -> a
    216:252:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getDefaultIcon1(android.database.Cursor):0 -> a
    216:252:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getIcon1(android.database.Cursor):0 -> a
    216:252:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    253:325:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getActivityIcon(android.content.ComponentName):0:0 -> a
    253:325:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getActivityIconWithCache(android.content.ComponentName):0 -> a
    253:325:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getDefaultIcon1(android.database.Cursor):0 -> a
    253:325:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getIcon1(android.database.Cursor):0 -> a
    253:325:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    326:337:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getActivityIconWithCache(android.content.ComponentName):0:0 -> a
    326:337:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getDefaultIcon1(android.database.Cursor):0 -> a
    326:337:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getIcon1(android.database.Cursor):0 -> a
    326:337:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    338:345:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getDefaultIcon1(android.database.Cursor):0:0 -> a
    338:345:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getIcon1(android.database.Cursor):0 -> a
    338:345:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    346:364:void androidx.appcompat.widget.SuggestionsAdapter.setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int):0:0 -> a
    346:364:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    365:375:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    376:383:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getIcon2(android.database.Cursor):0:0 -> a
    376:383:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    384:405:void androidx.appcompat.widget.SuggestionsAdapter.setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int):0:0 -> a
    384:405:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    406:437:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    1:1:void changeCursor(android.database.Cursor):0:0 -> b
    7:19:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> c
    7:19:java.lang.CharSequence convertToString(android.database.Cursor):0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/database/Cursor;)Ljava/lang/String;"}
    20:27:java.lang.CharSequence convertToString(android.database.Cursor):0:0 -> c
    28:38:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> c
    28:38:java.lang.CharSequence convertToString(android.database.Cursor):0 -> c
    39:46:java.lang.CharSequence convertToString(android.database.Cursor):0:0 -> c
    47:58:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> c
    47:58:java.lang.CharSequence convertToString(android.database.Cursor):0 -> c
    6:9:android.view.View androidx.cursoradapter.widget.ResourceCursorAdapter.newView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> d
    6:9:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;)Landroid/view/View;"}
    10:32:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> d
    1:1:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri):0:0 -> e
    56:72:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.checkIconCache(java.lang.String):0:0 -> f
    56:72:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    73:78:android.graphics.drawable.Drawable androidx.core.content.ContextCompat.getDrawable(android.content.Context,int):0:0 -> f
    73:78:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    79:90:void androidx.appcompat.widget.SuggestionsAdapter.storeInIconCache(java.lang.String,android.graphics.drawable.Drawable):0:0 -> f
    79:90:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    91:98:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0:0 -> f
    99:115:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.checkIconCache(java.lang.String):0:0 -> f
    99:115:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    116:125:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0:0 -> f
    126:270:android.graphics.drawable.Drawable androidx.appcompat.widget.SuggestionsAdapter.getDrawable(android.net.Uri):0:0 -> f
    126:270:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    271:278:void androidx.appcompat.widget.SuggestionsAdapter.storeInIconCache(java.lang.String,android.graphics.drawable.Drawable):0:0 -> f
    271:278:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    1:1:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/SearchableInfo;Ljava/lang/String;)Landroid/database/Cursor;"}
    19:24:android.view.View androidx.cursoradapter.widget.ResourceCursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> getDropDownView
    19:24:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0 -> getDropDownView
    25:40:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0:0 -> getDropDownView
    1:1:android.view.View getView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
    1:1:java.lang.String getStringOrNull(android.database.Cursor,int):0:0 -> h
    1:1:boolean hasStableIds():0:0 -> hasStableIds
    8:21:void androidx.appcompat.widget.SuggestionsAdapter.updateSpinnerState(android.database.Cursor):0:0 -> notifyDataSetChanged
    8:21:void notifyDataSetChanged():0 -> notifyDataSetChanged
    8:21:void androidx.appcompat.widget.SuggestionsAdapter.updateSpinnerState(android.database.Cursor):0:0 -> notifyDataSetInvalidated
    8:21:void notifyDataSetInvalidated():0 -> notifyDataSetInvalidated
    1:1:void onClick(android.view.View):0:0 -> onClick
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> m.r1:
# {"id":"sourceFile","fileName":"SuggestionsAdapter.java"}
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
    1:1:void <init>(android.view.View):0:0 -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
# {"id":"sourceFile","fileName":"SwitchCompat.java"}
    int mSwitchHeight -> A
    int mThumbWidth -> B
    int mSwitchLeft -> C
    int mSwitchTop -> D
    int mSwitchRight -> E
    int mSwitchBottom -> F
    android.text.TextPaint mTextPaint -> G
    android.content.res.ColorStateList mTextColors -> H
    android.text.Layout mOnLayout -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroid/text/StaticLayout;"}
    android.text.Layout mOffLayout -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroid/text/StaticLayout;"}
    android.text.method.TransformationMethod mSwitchTransformationMethod -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/a;"}
    android.animation.ObjectAnimator mPositionAnimator -> L
    android.graphics.Rect mTempRect -> M
    android.util.Property THUMB_POS -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/t1;"}
    int[] CHECKED_STATE_SET -> O
    android.graphics.drawable.Drawable mThumbDrawable -> b
    android.content.res.ColorStateList mThumbTintList -> c
    android.graphics.PorterDuff$Mode mThumbTintMode -> d
    boolean mHasThumbTint -> e
    boolean mHasThumbTintMode -> f
    android.graphics.drawable.Drawable mTrackDrawable -> g
    android.content.res.ColorStateList mTrackTintList -> h
    android.graphics.PorterDuff$Mode mTrackTintMode -> i
    boolean mHasTrackTint -> j
    boolean mHasTrackTintMode -> k
    int mThumbTextPadding -> l
    int mSwitchMinWidth -> m
    int mSwitchPadding -> n
    boolean mSplitTrack -> o
    java.lang.CharSequence mTextOn -> p
    java.lang.CharSequence mTextOff -> q
    boolean mShowText -> r
    int mTouchMode -> s
    int mTouchSlop -> t
    float mTouchX -> u
    float mTouchY -> v
    android.view.VelocityTracker mVelocityTracker -> w
    int mMinFlingVelocity -> x
    float mThumbPosition -> y
    int mSwitchWidth -> z
    7:21:void androidx.appcompat.widget.SwitchCompat$1.<init>(java.lang.Class,java.lang.String):0:0 -> <clinit>
    7:21:void <clinit>():0 -> <clinit>
    4:59:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    4:59:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    60:69:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    60:69:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    60:69:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    70:233:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    70:233:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    234:237:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,int,int[]):0:0 -> <init>
    234:237:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    234:237:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    234:237:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    238:265:android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList(int):0:0 -> <init>
    238:265:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    238:265:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    238:265:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    266:270:void setSwitchTextAppearance(android.content.Context,int):0:0 -> <init>
    266:270:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    266:270:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    271:277:int androidx.appcompat.widget.TintTypedArray.getDimensionPixelSize(int,int):0:0 -> <init>
    271:277:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    271:277:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    271:277:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    278:291:void setSwitchTextAppearance(android.content.Context,int):0:0 -> <init>
    278:291:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    278:291:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    292:307:int androidx.appcompat.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    292:307:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    292:307:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    292:307:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    308:320:void setSwitchTypefaceByIndex(int,int):0:0 -> <init>
    308:320:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    308:320:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    308:320:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    321:372:void setSwitchTypeface(android.graphics.Typeface,int):0:0 -> <init>
    321:372:void setSwitchTypefaceByIndex(int,int):0 -> <init>
    321:372:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    321:372:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    321:372:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    373:378:boolean androidx.appcompat.widget.TintTypedArray.getBoolean(int,boolean):0:0 -> <init>
    373:378:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    373:378:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    373:378:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    379:384:void setSwitchTextAppearance(android.content.Context,int):0:0 -> <init>
    379:384:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    379:384:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    385:401:void androidx.appcompat.text.AllCapsTransformationMethod.<init>(android.content.Context):0:0 -> <init>
    385:401:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    385:401:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    385:401:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    402:404:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    402:404:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    402:404:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    402:404:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    405:442:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    405:442:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    29:39:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> a
    29:39:void applyThumbTint():0 -> a
    40:44:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> a
    40:44:void applyThumbTint():0 -> a
    45:60:void applyThumbTint():0:0 -> a
    29:39:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> b
    29:39:void applyTrackTint():0 -> b
    40:44:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> b
    40:44:void applyTrackTint():0 -> b
    45:60:void applyTrackTint():0:0 -> b
    1:1:android.text.Layout makeLayout(java.lang.CharSequence):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Landroid/text/StaticLayout;"}
    110:112:void androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> draw
    110:112:void draw(android.graphics.Canvas):0 -> draw
    113:116:void draw(android.graphics.Canvas):0:0 -> draw
    8:18:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> drawableHotspotChanged
    8:18:void drawableHotspotChanged(float,float):0 -> drawableHotspotChanged
    93:151:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    152:225:void stopDrag(android.view.MotionEvent):0:0 -> onTouchEvent
    152:225:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    226:238:void cancelSuperTouch(android.view.MotionEvent):0:0 -> onTouchEvent
    226:238:void stopDrag(android.view.MotionEvent):0 -> onTouchEvent
    226:238:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    239:267:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    268:324:boolean hitThumb(float,float):0:0 -> onTouchEvent
    268:324:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    325:329:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    19:36:boolean androidx.core.view.ViewCompat.isLaidOut(android.view.View):0:0 -> setChecked
    19:36:void setChecked(boolean):0 -> setChecked
    37:62:void animateThumbToCheckedState(boolean):0:0 -> setChecked
    37:62:void setChecked(boolean):0 -> setChecked
    63:69:void cancelPositionAnimator():0:0 -> setChecked
    63:69:void setChecked(boolean):0 -> setChecked
    70:73:void setChecked(boolean):0:0 -> setChecked
androidx.appcompat.widget.SwitchCompat$1 -> m.t1:
# {"id":"sourceFile","fileName":"SwitchCompat.java"}
    3:9:java.lang.Float androidx.appcompat.widget.SwitchCompat$1.get(androidx.appcompat.widget.SwitchCompat):0:0 -> get
    3:9:java.lang.Object get(java.lang.Object):0 -> get
    5:12:void androidx.appcompat.widget.SwitchCompat$1.set(androidx.appcompat.widget.SwitchCompat,java.lang.Float):0:0 -> set
    5:12:void set(java.lang.Object,java.lang.Object):0 -> set
androidx.appcompat.widget.ThemeUtils -> m.u1:
# {"id":"sourceFile","fileName":"ThemeUtils.java"}
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    int[] DISABLED_STATE_SET -> b
    int[] FOCUSED_STATE_SET -> c
    int[] PRESSED_STATE_SET -> d
    int[] CHECKED_STATE_SET -> e
    int[] EMPTY_STATE_SET -> f
    int[] TEMP_ARRAY -> g
    1:1:void <clinit>():0:0 -> <clinit>
    26:41:android.util.TypedValue androidx.appcompat.widget.ThemeUtils.getTypedValue():0:0 -> a
    26:41:int getDisabledThemeAttrColor(android.content.Context,int):0 -> a
    42:56:int getDisabledThemeAttrColor(android.content.Context,int):0:0 -> a
    57:87:int androidx.appcompat.widget.ThemeUtils.getThemeAttrColor(android.content.Context,int,float):0:0 -> a
    57:87:int getDisabledThemeAttrColor(android.content.Context,int):0 -> a
    88:95:int androidx.core.graphics.ColorUtils.setAlphaComponent(int,int):0:0 -> a
    88:95:int androidx.appcompat.widget.ThemeUtils.getThemeAttrColor(android.content.Context,int,float):0 -> a
    88:95:int getDisabledThemeAttrColor(android.content.Context,int):0 -> a
    7:10:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> b
    7:10:int getThemeAttrColor(android.content.Context,int):0 -> b
    11:14:int androidx.appcompat.widget.TintTypedArray.getColor(int,int):0:0 -> b
    11:14:int getThemeAttrColor(android.content.Context,int):0 -> b
    15:22:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> b
    15:22:int getThemeAttrColor(android.content.Context,int):0 -> b
    23:23:int getThemeAttrColor(android.content.Context,int):0:0 -> b
    7:10:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> c
    7:10:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> c
    11:33:android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList(int):0:0 -> c
    11:33:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> c
    34:41:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> c
    34:41:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> c
    42:42:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0:0 -> c
androidx.appcompat.widget.TintContextWrapper -> m.v1:
# {"id":"sourceFile","fileName":"TintContextWrapper.java"}
    java.lang.Object CACHE_LOCK -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:14:boolean androidx.appcompat.widget.TintContextWrapper.shouldWrap(android.content.Context):0:0 -> a
    1:14:android.content.Context wrap(android.content.Context):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)V"}
androidx.appcompat.widget.TintInfo -> m.w1:
# {"id":"sourceFile","fileName":"TintInfo.java"}
    android.content.res.ColorStateList mTintList -> a
    android.graphics.PorterDuff$Mode mTintMode -> b
    boolean mHasTintMode -> c
    boolean mHasTintList -> d
androidx.appcompat.widget.TintResources -> m.x1:
# {"id":"sourceFile","fileName":"TintResources.java"}
androidx.appcompat.widget.TintTypedArray -> R8$$REMOVED$$CLASS$$26:
# {"id":"sourceFile","fileName":"TintTypedArray.java"}
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    android.content.res.ColorStateList mTitleTextColor -> A
    android.content.res.ColorStateList mSubtitleTextColor -> B
    boolean mEatingTouch -> C
    boolean mEatingHover -> D
    java.util.ArrayList mTempViews -> E
    java.util.ArrayList mHiddenViews -> F
    int[] mTempMargins -> G
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/o;"}
    androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/e2;"}
    androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/z1;"}
    boolean mCollapsible -> K
    java.lang.Runnable mShowOverflowMenuRunnable -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/i0;"}
    androidx.appcompat.widget.ActionMenuView mMenuView -> b
    android.widget.TextView mTitleTextView -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/c0;"}
    android.widget.TextView mSubtitleTextView -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/c0;"}
    android.widget.ImageButton mNavButtonView -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/u;"}
    android.widget.ImageView mLogoView -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/w;"}
    android.graphics.drawable.Drawable mCollapseIcon -> g
    java.lang.CharSequence mCollapseDescription -> h
    android.widget.ImageButton mCollapseButtonView -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/u;"}
    android.view.View mExpandedActionView -> j
    android.content.Context mPopupContext -> k
    int mPopupTheme -> l
    int mTitleTextAppearance -> m
    int mSubtitleTextAppearance -> n
    int mButtonGravity -> o
    int mMaxButtonHeight -> p
    int mTitleMarginStart -> q
    int mTitleMarginEnd -> r
    int mTitleMarginTop -> s
    int mTitleMarginBottom -> t
    androidx.appcompat.widget.RtlSpacingHelper mContentInsets -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/c1;"}
    int mContentInsetStartWithNavigation -> v
    int mContentInsetEndWithActions -> w
    int mGravity -> x
    java.lang.CharSequence mTitleText -> y
    java.lang.CharSequence mSubtitleText -> z
    4:72:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    4:72:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    73:96:int androidx.appcompat.widget.TintTypedArray.getInteger(int,int):0:0 -> <init>
    73:96:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    73:96:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    97:198:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    97:198:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    199:202:void androidx.appcompat.widget.RtlSpacingHelper.setAbsolute(int,int):0:0 -> <init>
    199:202:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    199:202:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    203:216:void androidx.appcompat.widget.RtlSpacingHelper.setAbsolute(int,int):0:0 -> <init>
    203:216:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    203:216:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    217:387:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    217:387:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    388:398:void inflateMenu(int):0:0 -> <init>
    388:398:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    388:398:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    399:402:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    399:402:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:13:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> a
    3:13:void addCustomViewsWithGravity(java.util.List,int):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;I)V"}
    14:17:void addCustomViewsWithGravity(java.util.List,int):0:0 -> a
    18:21:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> a
    18:21:void addCustomViewsWithGravity(java.util.List,int):0 -> a
    22:25:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> a
    22:25:void addCustomViewsWithGravity(java.util.List,int):0 -> a
    26:104:void addCustomViewsWithGravity(java.util.List,int):0:0 -> a
    1:1:void addSystemView(android.view.View,boolean):0:0 -> b
    1:1:void ensureCollapseButtonView():0:0 -> c
    7:31:void androidx.appcompat.widget.RtlSpacingHelper.<init>():0:0 -> d
    7:31:void ensureContentInsets():0 -> d
    5:11:void ensureMenuView():0:0 -> e
    5:11:void ensureMenu():0 -> e
    12:18:void androidx.appcompat.widget.ActionMenuView.<init>(android.content.Context):0:0 -> e
    12:18:void ensureMenuView():0 -> e
    12:18:void ensureMenu():0 -> e
    19:30:void ensureMenuView():0:0 -> e
    19:30:void ensureMenu():0 -> e
    31:32:void androidx.appcompat.widget.ActionMenuView.setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback):0:0 -> e
    31:32:void ensureMenuView():0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    31:32:void ensureMenu():0 -> e
    33:34:void androidx.appcompat.widget.ActionMenuView.setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback):0:0 -> e
    33:34:void ensureMenuView():0 -> e
    33:34:void ensureMenu():0 -> e
    35:61:void ensureMenuView():0:0 -> e
    35:61:void ensureMenu():0 -> e
    62:65:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuView.peekMenu():0:0 -> e
    62:65:void ensureMenu():0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    66:96:void ensureMenu():0:0 -> e
    1:1:void ensureNavButtonView():0:0 -> f
    4:15:void androidx.appcompat.app.ActionBar$LayoutParams.<init>(int,int):0:0 -> g
    4:15:void androidx.appcompat.widget.Toolbar$LayoutParams.<init>(int,int):0 -> g
    4:15:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams():0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/a2;"}
    1:1:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    2:2:void androidx.appcompat.app.ActionBar$LayoutParams.<init>(android.content.Context,android.util.AttributeSet):0:0 -> generateLayoutParams
    2:2:void androidx.appcompat.widget.Toolbar$LayoutParams.<init>(android.content.Context,android.util.AttributeSet):0 -> generateLayoutParams
    2:2:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    2:2:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    3:3:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> generateLayoutParams
    5:8:int androidx.appcompat.widget.RtlSpacingHelper.getEnd():0:0 -> getContentInsetEnd
    5:8:int getContentInsetEnd():0 -> getContentInsetEnd
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:16:int androidx.appcompat.widget.RtlSpacingHelper.getEnd():0:0 -> getContentInsetEnd
    9:16:int getContentInsetEnd():0 -> getContentInsetEnd
    5:9:int androidx.appcompat.widget.RtlSpacingHelper.getLeft():0:0 -> getContentInsetLeft
    5:9:int getContentInsetLeft():0 -> getContentInsetLeft
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:9:int androidx.appcompat.widget.RtlSpacingHelper.getRight():0:0 -> getContentInsetRight
    5:9:int getContentInsetRight():0 -> getContentInsetRight
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:8:int androidx.appcompat.widget.RtlSpacingHelper.getStart():0:0 -> getContentInsetStart
    5:8:int getContentInsetStart():0 -> getContentInsetStart
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:16:int androidx.appcompat.widget.RtlSpacingHelper.getStart():0:0 -> getContentInsetStart
    9:16:int getContentInsetStart():0 -> getContentInsetStart
    5:8:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuView.peekMenu():0:0 -> getCurrentContentInsetEnd
    5:8:int getCurrentContentInsetEnd():0 -> getCurrentContentInsetEnd
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:35:int getCurrentContentInsetEnd():0:0 -> getCurrentContentInsetEnd
    3:9:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> getCurrentContentInsetLeft
    3:9:int getCurrentContentInsetLeft():0 -> getCurrentContentInsetLeft
    10:19:int getCurrentContentInsetLeft():0:0 -> getCurrentContentInsetLeft
    3:9:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> getCurrentContentInsetRight
    3:9:int getCurrentContentInsetRight():0 -> getCurrentContentInsetRight
    10:19:int getCurrentContentInsetRight():0:0 -> getCurrentContentInsetRight
    1:1:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter():0:0 -> getOuterActionMenuPresenter
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/k;"}
    7:88:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> getWrapper
    7:88:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    7:88:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/f0;"}
    89:93:void androidx.appcompat.widget.ToolbarWidgetWrapper.setTitleInt(java.lang.CharSequence):0:0 -> getWrapper
    89:93:void androidx.appcompat.widget.ToolbarWidgetWrapper.setTitle(java.lang.CharSequence):0 -> getWrapper
    89:93:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    89:93:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    89:93:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    94:111:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> getWrapper
    94:111:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    94:111:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    112:116:void androidx.appcompat.widget.ToolbarWidgetWrapper.setSubtitle(java.lang.CharSequence):0:0 -> getWrapper
    112:116:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    112:116:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    112:116:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    117:124:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> getWrapper
    117:124:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    117:124:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    125:129:void androidx.appcompat.widget.ToolbarWidgetWrapper.setLogo(android.graphics.drawable.Drawable):0:0 -> getWrapper
    125:129:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    125:129:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    125:129:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    130:137:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> getWrapper
    130:137:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    130:137:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    138:158:void androidx.appcompat.widget.ToolbarWidgetWrapper.setIcon(android.graphics.drawable.Drawable):0:0 -> getWrapper
    138:158:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    138:158:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    138:158:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    159:167:void androidx.appcompat.widget.ToolbarWidgetWrapper.updateNavigationIcon():0:0 -> getWrapper
    159:167:void androidx.appcompat.widget.ToolbarWidgetWrapper.setNavigationIcon(android.graphics.drawable.Drawable):0 -> getWrapper
    159:167:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    159:167:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    159:167:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    168:204:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> getWrapper
    168:204:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    168:204:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    205:224:void androidx.appcompat.widget.ToolbarWidgetWrapper.setCustomView(android.view.View):0:0 -> getWrapper
    205:224:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    205:224:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    205:224:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    225:227:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> getWrapper
    225:227:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    225:227:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    228:239:int androidx.appcompat.widget.TintTypedArray.getLayoutDimension(int,int):0:0 -> getWrapper
    228:239:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    228:239:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    228:239:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    240:271:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> getWrapper
    240:271:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    240:271:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    272:276:void setContentInsetsRelative(int,int):0:0 -> getWrapper
    272:276:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    272:276:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    272:276:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    277:281:void setContentInsetsRelative(int,int):0:0 -> getWrapper
    277:281:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    277:281:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    277:281:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    282:297:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> getWrapper
    282:297:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    282:297:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    298:302:void setTitleTextAppearance(android.content.Context,int):0:0 -> getWrapper
    298:302:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    298:302:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    298:302:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    303:318:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> getWrapper
    303:318:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    303:318:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    319:323:void setSubtitleTextAppearance(android.content.Context,int):0:0 -> getWrapper
    319:323:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    319:323:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    319:323:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    324:345:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> getWrapper
    324:345:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    324:345:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    346:360:void androidx.appcompat.widget.ToolbarWidgetWrapper.setDefaultNavigationContentDescription(int):0:0 -> getWrapper
    346:360:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    346:360:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    346:360:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    361:364:android.content.Context androidx.appcompat.widget.ToolbarWidgetWrapper.getContext():0:0 -> getWrapper
    361:364:void androidx.appcompat.widget.ToolbarWidgetWrapper.setNavigationContentDescription(int):0 -> getWrapper
    361:364:void androidx.appcompat.widget.ToolbarWidgetWrapper.setDefaultNavigationContentDescription(int):0 -> getWrapper
    361:364:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    361:364:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    361:364:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    365:370:void androidx.appcompat.widget.ToolbarWidgetWrapper.setNavigationContentDescription(int):0:0 -> getWrapper
    365:370:void androidx.appcompat.widget.ToolbarWidgetWrapper.setDefaultNavigationContentDescription(int):0 -> getWrapper
    365:370:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    365:370:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    365:370:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    371:373:void androidx.appcompat.widget.ToolbarWidgetWrapper.setNavigationContentDescription(java.lang.CharSequence):0:0 -> getWrapper
    371:373:void androidx.appcompat.widget.ToolbarWidgetWrapper.setNavigationContentDescription(int):0 -> getWrapper
    371:373:void androidx.appcompat.widget.ToolbarWidgetWrapper.setDefaultNavigationContentDescription(int):0 -> getWrapper
    371:373:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> getWrapper
    371:373:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    371:373:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    374:392:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> getWrapper
    374:392:void androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean):0 -> getWrapper
    374:392:androidx.appcompat.widget.DecorToolbar getWrapper():0 -> getWrapper
    10:19:void androidx.appcompat.widget.Toolbar$LayoutParams.<init>(androidx.appcompat.widget.Toolbar$LayoutParams):0:0 -> h
    10:19:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup$LayoutParams;)Lm/a2;"}
    20:27:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> h
    28:33:void androidx.appcompat.widget.Toolbar$LayoutParams.<init>(androidx.appcompat.app.ActionBar$LayoutParams):0:0 -> h
    28:33:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0 -> h
    34:41:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> h
    42:46:void androidx.appcompat.widget.Toolbar$LayoutParams.<init>(android.view.ViewGroup$MarginLayoutParams):0:0 -> h
    42:46:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0 -> h
    47:63:void androidx.appcompat.widget.Toolbar$LayoutParams.copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams):0:0 -> h
    47:63:void androidx.appcompat.widget.Toolbar$LayoutParams.<init>(android.view.ViewGroup$MarginLayoutParams):0 -> h
    47:63:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0 -> h
    64:65:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> h
    66:71:void androidx.appcompat.widget.Toolbar$LayoutParams.<init>(android.view.ViewGroup$LayoutParams):0:0 -> h
    66:71:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0 -> h
    3:6:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> i
    3:6:int getChildHorizontalGravity(int):0 -> i
    7:26:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> i
    7:26:int getChildHorizontalGravity(int):0 -> i
    44:104:int getChildTop(android.view.View,int):0:0 -> j
    7:10:int androidx.core.view.MarginLayoutParamsCompat.getMarginStart(android.view.ViewGroup$MarginLayoutParams):0:0 -> k
    7:10:int getHorizontalMargins(android.view.View):0 -> k
    11:16:int androidx.core.view.MarginLayoutParamsCompat.getMarginEnd(android.view.ViewGroup$MarginLayoutParams):0:0 -> k
    11:16:int getHorizontalMargins(android.view.View):0 -> k
    1:1:int getVerticalMargins(android.view.View):0:0 -> l
    1:1:boolean isChildOrHidden(android.view.View):0:0 -> m
    1:1:int layoutChildLeft(android.view.View,int,int[],int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;II[I)I"}
    1:1:int layoutChildRight(android.view.View,int,int[],int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;II[I)I"}
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    3:3:int androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> onLayout
    3:3:void onLayout(boolean,int,int,int,int):0 -> onLayout
    4:4:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    5:5:int getViewListMeasuredWidth(java.util.List,int[]):0:0 -> onLayout
    5:5:void onLayout(boolean,int,int,int,int):0 -> onLayout
    6:6:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    607:640:boolean shouldCollapse():0:0 -> onMeasure
    607:640:void onMeasure(int,int):0 -> onMeasure
    641:644:void onMeasure(int,int):0:0 -> onMeasure
    11:12:android.os.Parcelable androidx.customview.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    11:12:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:19:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    20:23:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuView.peekMenu():0:0 -> onRestoreInstanceState
    20:23:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    24:48:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    49:55:void postShowOverflowMenu():0:0 -> onRestoreInstanceState
    49:55:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    14:18:void androidx.appcompat.widget.RtlSpacingHelper.setDirection(boolean):0:0 -> onRtlPropertiesChanged
    14:18:void onRtlPropertiesChanged(int):0 -> onRtlPropertiesChanged
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    19:70:void androidx.appcompat.widget.RtlSpacingHelper.setDirection(boolean):0:0 -> onRtlPropertiesChanged
    19:70:void onRtlPropertiesChanged(int):0 -> onRtlPropertiesChanged
    7:13:void androidx.appcompat.widget.Toolbar$SavedState.<init>(android.os.Parcelable):0:0 -> onSaveInstanceState
    7:13:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    14:25:android.os.Parcelable onSaveInstanceState():0:0 -> onSaveInstanceState
    26:29:boolean androidx.appcompat.widget.ActionMenuView.isOverflowMenuShowing():0:0 -> onSaveInstanceState
    26:29:boolean isOverflowMenuShowing():0 -> onSaveInstanceState
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    26:29:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    30:45:boolean androidx.appcompat.widget.ActionMenuPresenter.isOverflowMenuShowing():0:0 -> onSaveInstanceState
    30:45:boolean androidx.appcompat.widget.ActionMenuView.isOverflowMenuShowing():0 -> onSaveInstanceState
    30:45:boolean isOverflowMenuShowing():0 -> onSaveInstanceState
    30:45:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    1:1:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]):0:0 -> p
    1:1:void measureChildConstrained(android.view.View,int,int,int,int,int):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;IIII)V"}
    1:1:boolean shouldLayout(android.view.View):0:0 -> r
    1:1:void setCollapseContentDescription(int):0:0 -> setCollapseContentDescription
    2:2:void setCollapseContentDescription(java.lang.CharSequence):0:0 -> setCollapseContentDescription
    1:1:void setCollapseIcon(int):0:0 -> setCollapseIcon
    2:2:void setCollapseIcon(android.graphics.drawable.Drawable):0:0 -> setCollapseIcon
    1:1:void setLogo(int):0:0 -> setLogo
    2:2:void ensureLogoView():0:0 -> setLogo
    2:2:void setLogo(android.graphics.drawable.Drawable):0 -> setLogo
    3:3:void androidx.appcompat.widget.AppCompatImageView.<init>(android.content.Context,android.util.AttributeSet):0:0 -> setLogo
    3:3:void androidx.appcompat.widget.AppCompatImageView.<init>(android.content.Context):0 -> setLogo
    3:3:void ensureLogoView():0 -> setLogo
    3:3:void setLogo(android.graphics.drawable.Drawable):0 -> setLogo
    4:4:void setLogo(android.graphics.drawable.Drawable):0:0 -> setLogo
    1:1:void setLogoDescription(int):0:0 -> setLogoDescription
    2:2:void ensureLogoView():0:0 -> setLogoDescription
    2:2:void setLogoDescription(java.lang.CharSequence):0 -> setLogoDescription
    3:3:void androidx.appcompat.widget.AppCompatImageView.<init>(android.content.Context,android.util.AttributeSet):0:0 -> setLogoDescription
    3:3:void androidx.appcompat.widget.AppCompatImageView.<init>(android.content.Context):0 -> setLogoDescription
    3:3:void ensureLogoView():0 -> setLogoDescription
    3:3:void setLogoDescription(java.lang.CharSequence):0 -> setLogoDescription
    4:4:void setLogoDescription(java.lang.CharSequence):0:0 -> setLogoDescription
    1:1:void setNavigationContentDescription(int):0:0 -> setNavigationContentDescription
    2:2:void setNavigationContentDescription(java.lang.CharSequence):0:0 -> setNavigationContentDescription
    1:1:void setNavigationIcon(int):0:0 -> setNavigationIcon
    2:2:void setNavigationIcon(android.graphics.drawable.Drawable):0:0 -> setNavigationIcon
    1:1:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener):0:0 -> setOnMenuItemClickListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b2;)V"}
    1:1:void setSubtitle(int):0:0 -> setSubtitle
    2:2:void androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context):0:0 -> setSubtitle
    2:2:void setSubtitle(java.lang.CharSequence):0 -> setSubtitle
    3:3:void setSubtitle(java.lang.CharSequence):0:0 -> setSubtitle
    1:1:void setSubtitleTextColor(int):0:0 -> setSubtitleTextColor
    2:2:void setSubtitleTextColor(android.content.res.ColorStateList):0:0 -> setSubtitleTextColor
    1:1:void setTitle(int):0:0 -> setTitle
    2:2:void androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context):0:0 -> setTitle
    2:2:void setTitle(java.lang.CharSequence):0 -> setTitle
    3:3:void setTitle(java.lang.CharSequence):0:0 -> setTitle
    1:1:void setTitleTextColor(int):0:0 -> setTitleTextColor
    2:2:void setTitleTextColor(android.content.res.ColorStateList):0:0 -> setTitleTextColor
androidx.appcompat.widget.Toolbar$1 -> R8$$REMOVED$$CLASS$$27:
# {"id":"sourceFile","fileName":"Toolbar.java"}
androidx.appcompat.widget.Toolbar$2 -> R8$$REMOVED$$CLASS$$28:
# {"id":"sourceFile","fileName":"Toolbar.java"}
androidx.appcompat.widget.Toolbar$3 -> m.y1:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    androidx.appcompat.widget.Toolbar this$0 -> b
    1:1:void <init>(androidx.appcompat.widget.Toolbar):0:0 -> <init>
    3:8:void androidx.appcompat.widget.Toolbar.collapseActionView():0:0 -> onClick
    3:8:void onClick(android.view.View):0 -> onClick
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:16:void androidx.appcompat.widget.Toolbar.collapseActionView():0:0 -> onClick
    9:16:void onClick(android.view.View):0 -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> m.z1:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/j;"}
    androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/k;"}
    androidx.appcompat.widget.Toolbar this$0 -> d
    1:1:void <init>(androidx.appcompat.widget.Toolbar):0:0 -> <init>
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/j;Z)V"}
    9:10:int androidx.appcompat.view.menu.MenuBuilder.size():0:0 -> b
    9:10:void updateMenuView(boolean):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    11:19:int androidx.appcompat.view.menu.MenuBuilder.size():0:0 -> b
    11:19:void updateMenuView(boolean):0 -> b
    20:37:void updateMenuView(boolean):0:0 -> b
    1:1:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll/j;)V"}
    1:1:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/t;)Z"}
    30:35:android.view.View androidx.appcompat.view.menu.MenuItemImpl.getActionView():0:0 -> i
    30:35:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
    36:83:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> i
    84:91:void androidx.appcompat.widget.Toolbar.removeChildrenForExpandedActionView():0:0 -> i
    84:91:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    92:120:void androidx.appcompat.widget.Toolbar.removeChildrenForExpandedActionView():0:0 -> i
    92:120:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> i
    121:123:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> i
    124:131:void androidx.appcompat.view.menu.MenuItemImpl.setActionViewExpanded(boolean):0:0 -> i
    124:131:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> i
    132:141:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> i
    142:146:void androidx.appcompat.widget.SearchView.onActionViewExpanded():0:0 -> i
    142:146:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> i
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    147:171:void androidx.appcompat.widget.SearchView.onActionViewExpanded():0:0 -> i
    147:171:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> i
    1:1:boolean flagActionItems():0:0 -> j
    15:18:void androidx.appcompat.widget.SearchView.setQuery(java.lang.CharSequence,boolean):0:0 -> k
    15:18:void androidx.appcompat.widget.SearchView.onActionViewCollapsed():0 -> k
    15:18:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> k
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k;)Z"}
    19:30:void androidx.appcompat.widget.SearchView.setQuery(java.lang.CharSequence,boolean):0:0 -> k
    19:30:void androidx.appcompat.widget.SearchView.onActionViewCollapsed():0 -> k
    19:30:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> k
    31:43:void androidx.appcompat.widget.SearchView.onActionViewCollapsed():0:0 -> k
    31:43:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> k
    44:56:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> k
    57:58:void androidx.appcompat.widget.Toolbar.addChildrenForExpandedActionView():0:0 -> k
    57:58:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> k
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    59:82:void androidx.appcompat.widget.Toolbar.addChildrenForExpandedActionView():0:0 -> k
    59:82:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> k
    83:85:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> k
    86:87:void androidx.appcompat.view.menu.MenuItemImpl.setActionViewExpanded(boolean):0:0 -> k
    86:87:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> k
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    88:93:void androidx.appcompat.view.menu.MenuItemImpl.setActionViewExpanded(boolean):0:0 -> k
    88:93:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> k
androidx.appcompat.widget.Toolbar$LayoutParams -> m.a2:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    int mViewType -> b
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener -> m.b2:
# {"id":"sourceFile","fileName":"Toolbar.java"}
androidx.appcompat.widget.Toolbar$SavedState -> m.c2:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    int expandedMenuItemId -> c
    boolean isOverflowOpen -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel,java.lang.ClassLoader):0:0 -> <init>
    3:7:void androidx.customview.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    3:7:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    8:16:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> R8$$REMOVED$$CLASS$$29:
# {"id":"sourceFile","fileName":"Toolbar.java"}
androidx.appcompat.widget.ToolbarWidgetWrapper -> m.e2:
# {"id":"sourceFile","fileName":"ToolbarWidgetWrapper.java"}
    androidx.appcompat.widget.Toolbar mToolbar -> a
    int mDisplayOpts -> b
    android.view.View mCustomView -> c
    android.graphics.drawable.Drawable mIcon -> d
    android.graphics.drawable.Drawable mLogo -> e
    android.graphics.drawable.Drawable mNavIcon -> f
    boolean mTitleSet -> g
    java.lang.CharSequence mTitle -> h
    java.lang.CharSequence mSubtitle -> i
    java.lang.CharSequence mHomeDescription -> j
    android.view.Window$Callback mWindowCallback -> k
    int mDefaultNavigationContentDescription -> l
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> m
    35:45:void androidx.appcompat.widget.ToolbarWidgetWrapper.updateNavigationIcon():0:0 -> a
    35:45:void setDisplayOptions(int):0 -> a
    46:95:void setDisplayOptions(int):0:0 -> a
    1:1:void updateHomeAccessibility():0:0 -> b
    1:1:void updateToolbarLogo():0:0 -> c
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> m.d2:
# {"id":"sourceFile","fileName":"ToolbarWidgetWrapper.java"}
    androidx.appcompat.widget.ToolbarWidgetWrapper this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/e2;"}
    1:1:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e2;)V"}
    1:1:void onClick(android.view.View):0:0 -> onClick
androidx.appcompat.widget.TooltipCompat -> R8$$REMOVED$$CLASS$$30:
# {"id":"sourceFile","fileName":"TooltipCompat.java"}
androidx.appcompat.widget.TooltipCompatHandler -> m.g2:
# {"id":"sourceFile","fileName":"TooltipCompatHandler.java"}
    android.view.View mAnchor -> a
    java.lang.CharSequence mTooltipText -> b
    int mHoverSlop -> c
    java.lang.Runnable mShowRunnable -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/f2;"}
    java.lang.Runnable mHideRunnable -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/f2;"}
    int mAnchorX -> f
    int mAnchorY -> g
    androidx.appcompat.widget.TooltipPopup mPopup -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/h2;"}
    boolean mFromTouch -> i
    androidx.appcompat.widget.TooltipCompatHandler sPendingHandler -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/g2;"}
    androidx.appcompat.widget.TooltipCompatHandler sActiveHandler -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/g2;"}
    40:59:int androidx.core.view.ViewConfigurationCompat.getScaledHoverSlop(android.view.ViewConfiguration):0:0 -> <init>
    40:59:void <init>(android.view.View,java.lang.CharSequence):0 -> <init>
    60:66:void <init>(android.view.View,java.lang.CharSequence):0:0 -> <init>
    14:21:boolean androidx.appcompat.widget.TooltipPopup.isShowing():0:0 -> a
    14:21:void androidx.appcompat.widget.TooltipPopup.hide():0 -> a
    14:21:void hide():0 -> a
    22:43:void androidx.appcompat.widget.TooltipPopup.hide():0:0 -> a
    22:43:void hide():0 -> a
    44:67:void hide():0:0 -> a
    5:6:void androidx.appcompat.widget.TooltipCompatHandler.cancelPendingShow():0:0 -> b
    5:6:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/g2;)V"}
    7:15:void androidx.appcompat.widget.TooltipCompatHandler.cancelPendingShow():0:0 -> b
    7:15:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler):0 -> b
    16:28:void androidx.appcompat.widget.TooltipCompatHandler.scheduleShow():0:0 -> b
    16:28:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler):0 -> b
    7:14:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> c
    7:14:void show(boolean):0 -> c
    15:49:void show(boolean):0:0 -> c
    50:59:boolean androidx.appcompat.widget.TooltipPopup.isShowing():0:0 -> c
    50:59:void androidx.appcompat.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0 -> c
    50:59:void show(boolean):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    60:65:boolean androidx.appcompat.widget.TooltipPopup.isShowing():0:0 -> c
    60:65:void androidx.appcompat.widget.TooltipPopup.hide():0 -> c
    60:65:void androidx.appcompat.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0 -> c
    60:65:void show(boolean):0 -> c
    66:78:void androidx.appcompat.widget.TooltipPopup.hide():0:0 -> c
    66:78:void androidx.appcompat.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0 -> c
    66:78:void show(boolean):0 -> c
    79:83:void androidx.appcompat.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0:0 -> c
    79:83:void show(boolean):0 -> c
    84:160:void androidx.appcompat.widget.TooltipPopup.computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams):0:0 -> c
    84:160:void androidx.appcompat.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0 -> c
    84:160:void show(boolean):0 -> c
    161:215:android.view.View androidx.appcompat.widget.TooltipPopup.getAppRootView(android.view.View):0:0 -> c
    161:215:void androidx.appcompat.widget.TooltipPopup.computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams):0 -> c
    161:215:void androidx.appcompat.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0 -> c
    161:215:void show(boolean):0 -> c
    216:348:void androidx.appcompat.widget.TooltipPopup.computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams):0:0 -> c
    216:348:void androidx.appcompat.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0 -> c
    216:348:void show(boolean):0 -> c
    349:359:void androidx.appcompat.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0:0 -> c
    349:359:void show(boolean):0 -> c
    360:369:void show(boolean):0:0 -> c
    370:377:int androidx.core.view.ViewCompat.getWindowSystemUiVisibility(android.view.View):0:0 -> c
    370:377:void show(boolean):0 -> c
    378:404:void show(boolean):0:0 -> c
    57:70:boolean onHover(android.view.View,android.view.MotionEvent):0:0 -> onHover
    71:107:boolean androidx.appcompat.widget.TooltipCompatHandler.updateAnchorPos(android.view.MotionEvent):0:0 -> onHover
    71:107:boolean onHover(android.view.View,android.view.MotionEvent):0 -> onHover
    108:111:boolean onHover(android.view.View,android.view.MotionEvent):0:0 -> onHover
    1:1:boolean onLongClick(android.view.View):0:0 -> onLongClick
    1:1:void onViewAttachedToWindow(android.view.View):0:0 -> onViewAttachedToWindow
    1:1:void onViewDetachedFromWindow(android.view.View):0:0 -> onViewDetachedFromWindow
androidx.appcompat.widget.TooltipCompatHandler$1 -> m.f2:
# {"id":"sourceFile","fileName":"TooltipCompatHandler.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.TooltipCompatHandler this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/g2;"}
    1:8:void androidx.appcompat.widget.TooltipCompatHandler$1.<init>(androidx.appcompat.widget.TooltipCompatHandler):0:0 -> <init>
    1:8:void $r8$init$synthetic(androidx.appcompat.widget.TooltipCompatHandler,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/g2;I)V"}
    8:12:void androidx.appcompat.widget.TooltipCompatHandler$2.run():0:0 -> run
    8:12:void run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    13:16:void androidx.appcompat.widget.TooltipCompatHandler$1.run():0:0 -> run
    13:16:void run$bridge():0 -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> R8$$REMOVED$$CLASS$$31:
# {"id":"sourceFile","fileName":"TooltipCompatHandler.java"}
androidx.appcompat.widget.TooltipPopup -> m.h2:
# {"id":"sourceFile","fileName":"TooltipPopup.java"}
    android.content.Context mContext -> a
    android.view.View mContentView -> b
    android.widget.TextView mMessageView -> c
    android.view.WindowManager$LayoutParams mLayoutParams -> d
    android.graphics.Rect mTmpDisplayFrame -> e
    int[] mTmpAnchorPos -> f
    int[] mTmpAppPos -> g
    1:1:void <init>(android.content.Context):0:0 -> <init>
androidx.appcompat.widget.VectorEnabledTintResources -> m.i2:
# {"id":"sourceFile","fileName":"VectorEnabledTintResources.java"}
    int $r8$clinit -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
# {"id":"sourceFile","fileName":"ViewStubCompat.java"}
    int mLayoutResource -> b
    int mInflatedId -> c
    java.lang.ref.WeakReference mInflatedViewRef -> d
    android.view.LayoutInflater mInflater -> e
    2:46:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    2:46:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener):0:0 -> setOnInflateListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/j2;)V"}
    33:118:android.view.View inflate():0:0 -> setVisibility
    33:118:void setVisibility(int):0 -> setVisibility
androidx.appcompat.widget.ViewStubCompat$OnInflateListener -> m.j2:
# {"id":"sourceFile","fileName":"ViewStubCompat.java"}
androidx.appcompat.widget.ViewUtils -> m.k2:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> a
    1:1:void <clinit>():0:0 -> <clinit>
    3:12:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> a
    3:12:boolean isLayoutRtl(android.view.View):0 -> a
androidx.arch.core.executor.ArchTaskExecutor -> n.b:
# {"id":"sourceFile","fileName":"ArchTaskExecutor.java"}
    androidx.arch.core.executor.TaskExecutor mDelegate -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln/d;"}
    androidx.arch.core.executor.ArchTaskExecutor sInstance -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln/b;"}
    1:3:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.<init>():0:0 -> <init>
    1:3:void <init>():0 -> <init>
    4:11:void <init>():0:0 -> <init>
    1:1:androidx.arch.core.executor.ArchTaskExecutor getInstance():0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln/b;"}
androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda0 -> n.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$2$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.$r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:6:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$2$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.<init>():0:0 -> <init>
    1:6:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$2$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.$r8$init$synthetic(int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$2$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.execute$bridge(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.DefaultTaskExecutor -> n.d:
# {"id":"sourceFile","fileName":"DefaultTaskExecutor.java"}
    java.lang.Object mLock -> k
    1:3:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.<init>():0:0 -> <init>
    1:3:void <init>():0 -> <init>
    4:13:void <init>():0:0 -> <init>
    1:1:boolean isMainThread():0:0 -> j0
androidx.arch.core.executor.DefaultTaskExecutor$1 -> n.c:
# {"id":"sourceFile","fileName":"DefaultTaskExecutor.java"}
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
    1:1:void <init>(androidx.arch.core.executor.DefaultTaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
androidx.arch.core.internal.FastSafeIterableMap -> o.a:
# {"id":"sourceFile","fileName":"FastSafeIterableMap.java"}
    java.util.WeakHashMap androidx.arch.core.internal.SafeIterableMap.mIterators -> a
    1:10:void androidx.arch.core.internal.SafeIterableMap.<init>():0:0 -> <init>
    1:10:void <init>():0 -> <init>
    11:16:void <init>():0:0 -> <init>
    16:22:boolean androidx.arch.core.internal.SafeIterableMap.equals(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    3:9:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.<init>():0:0 -> b
    3:9:void androidx.arch.core.internal.SafeIterableMap$ListIterator.<init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0 -> b
    3:9:void androidx.arch.core.internal.SafeIterableMap$AscendingIterator.<init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0 -> b
    3:9:java.util.Iterator androidx.arch.core.internal.SafeIterableMap.iterator():0 -> b
    10:13:java.util.Iterator androidx.arch.core.internal.SafeIterableMap.iterator():0:0 -> b
    1:6:java.lang.String androidx.arch.core.internal.SafeIterableMap.toString():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:boolean equals(java.lang.Object):0:0 -> equals
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:int androidx.arch.core.internal.SafeIterableMap.hashCode():0:0 -> hashCode
    1:5:int hashCode():0 -> hashCode
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:java.util.Iterator iterator():0:0 -> iterator
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:java.lang.String toString():0:0 -> toString
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.internal.SafeIterableMap -> R8$$REMOVED$$CLASS$$32:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> o.b:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
androidx.arch.core.internal.SafeIterableMap$ListIterator -> o.c:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
androidx.browser.browseractions.BrowserActionsFallbackMenuView -> androidx.browser.browseractions.BrowserActionsFallbackMenuView:
# {"id":"sourceFile","fileName":"BrowserActionsFallbackMenuView.java"}
    int mBrowserActionsMenuMinPaddingPx -> b
    int mBrowserActionsMenuMaxWidthPx -> c
androidx.collection.ArrayMap -> p.a:
# {"id":"sourceFile","fileName":"ArrayMap.java"}
    androidx.collection.MapCollections mCollections -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/v;"}
    5:6:androidx.collection.MapCollections androidx.collection.ArrayMap.getCollection():0:0 -> entrySet
    5:6:java.util.Set entrySet():0 -> entrySet
    7:15:void androidx.collection.MapCollections.<init>():0:0 -> entrySet
    7:15:void androidx.collection.ArrayMap$1.<init>(androidx.collection.ArrayMap):0 -> entrySet
    7:15:androidx.collection.MapCollections androidx.collection.ArrayMap.getCollection():0 -> entrySet
    7:15:java.util.Set entrySet():0 -> entrySet
    16:21:java.util.Set androidx.collection.MapCollections.getEntrySet():0:0 -> entrySet
    16:21:java.util.Set entrySet():0 -> entrySet
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    22:34:java.util.Set androidx.collection.MapCollections.getEntrySet():0:0 -> entrySet
    22:34:java.util.Set entrySet():0 -> entrySet
    5:6:androidx.collection.MapCollections androidx.collection.ArrayMap.getCollection():0:0 -> keySet
    5:6:java.util.Set keySet():0 -> keySet
    7:15:void androidx.collection.MapCollections.<init>():0:0 -> keySet
    7:15:void androidx.collection.ArrayMap$1.<init>(androidx.collection.ArrayMap):0 -> keySet
    7:15:androidx.collection.MapCollections androidx.collection.ArrayMap.getCollection():0 -> keySet
    7:15:java.util.Set keySet():0 -> keySet
    16:19:java.util.Set androidx.collection.MapCollections.getKeySet():0:0 -> keySet
    16:19:java.util.Set keySet():0 -> keySet
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    20:30:java.util.Set androidx.collection.MapCollections.getKeySet():0:0 -> keySet
    20:30:java.util.Set keySet():0 -> keySet
    12:43:void androidx.collection.SimpleArrayMap.ensureCapacity(int):0:0 -> putAll
    12:43:void putAll(java.util.Map):0 -> putAll
    44:76:void putAll(java.util.Map):0:0 -> putAll
    77:82:void androidx.collection.SimpleArrayMap.ensureCapacity(int):0:0 -> putAll
    77:82:void putAll(java.util.Map):0 -> putAll
    5:6:androidx.collection.MapCollections androidx.collection.ArrayMap.getCollection():0:0 -> values
    5:6:java.util.Collection values():0 -> values
    7:15:void androidx.collection.MapCollections.<init>():0:0 -> values
    7:15:void androidx.collection.ArrayMap$1.<init>(androidx.collection.ArrayMap):0 -> values
    7:15:androidx.collection.MapCollections androidx.collection.ArrayMap.getCollection():0 -> values
    7:15:java.util.Collection values():0 -> values
    16:21:java.util.Collection androidx.collection.MapCollections.getValues():0:0 -> values
    16:21:java.util.Collection values():0 -> values
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    22:33:java.util.Collection androidx.collection.MapCollections.getValues():0:0 -> values
    22:33:java.util.Collection values():0 -> values
androidx.collection.ArrayMap$1 -> R8$$REMOVED$$CLASS$$33:
# {"id":"sourceFile","fileName":"ArrayMap.java"}
androidx.collection.ContainerHelpers -> p.b:
# {"id":"sourceFile","fileName":"ContainerHelpers.java"}
    int[] EMPTY_INTS -> a
    java.lang.Object[] EMPTY_OBJECTS -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int binarySearch(int[],int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II[I)I"}
    1:1:int binarySearch(long[],int,long):0:0 -> b
androidx.collection.LongSparseArray -> p.c:
# {"id":"sourceFile","fileName":"LongSparseArray.java"}
    boolean mGarbage -> a
    long[] mKeys -> b
    java.lang.Object[] mValues -> c
    int mSize -> d
    java.lang.Object DELETED -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:24:void androidx.collection.LongSparseArray.<init>(int):0:0 -> <init>
    1:24:void <init>():0 -> <init>
    25:26:int androidx.collection.ContainerHelpers.idealLongArraySize(int):0:0 -> <init>
    25:26:void androidx.collection.LongSparseArray.<init>(int):0 -> <init>
    25:26:void <init>():0 -> <init>
    27:35:void androidx.collection.LongSparseArray.<init>(int):0:0 -> <init>
    27:35:void <init>():0 -> <init>
    59:60:int androidx.collection.ContainerHelpers.idealLongArraySize(int):0:0 -> a
    59:60:void append(long,java.lang.Object):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLjava/lang/Long;)V"}
    61:93:void append(long,java.lang.Object):0:0 -> a
    1:1:androidx.collection.LongSparseArray clone():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/c;"}
    1:1:void gc():0:0 -> c
    1:1:java.lang.Object clone():0:0 -> clone
    1:1:java.lang.Object get(long,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLjava/lang/Long;)Ljava/lang/Object;"}
    85:86:int androidx.collection.ContainerHelpers.idealLongArraySize(int):0:0 -> e
    85:86:void put(long,java.lang.Object):0 -> e
    87:141:void put(long,java.lang.Object):0:0 -> e
    5:14:int androidx.collection.LongSparseArray.size():0:0 -> toString
    5:14:java.lang.String toString():0 -> toString
    15:42:java.lang.String toString():0:0 -> toString
    43:49:long androidx.collection.LongSparseArray.keyAt(int):0:0 -> toString
    43:49:java.lang.String toString():0 -> toString
    50:61:java.lang.String toString():0:0 -> toString
    62:70:java.lang.Object androidx.collection.LongSparseArray.valueAt(int):0:0 -> toString
    62:70:java.lang.String toString():0 -> toString
    71:92:java.lang.String toString():0:0 -> toString
androidx.collection.LruCache -> p.d:
# {"id":"sourceFile","fileName":"LruCache.java"}
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int hitCount -> d
    int missCount -> e
    1:1:void <init>(int):0:0 -> <init>
    1:1:java.lang.Object get(java.lang.Object):0:0 -> a
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> b
    1:1:void trimToSize(int):0:0 -> c
    1:1:java.lang.String toString():0:0 -> toString
androidx.collection.MapCollections -> R8$$REMOVED$$CLASS$$35:
# {"id":"sourceFile","fileName":"MapCollections.java"}
androidx.collection.MapCollections$ArrayIterator -> p.e:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    androidx.collection.MapCollections this$0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/v;"}
    1:1:void <init>(androidx.collection.MapCollections,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/v;I)V"}
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
androidx.collection.MapCollections$EntrySet -> p.f:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.collection.MapCollections this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/v;"}
    1:8:void androidx.collection.MapCollections$EntrySet.<init>(androidx.collection.MapCollections):0:0 -> <init>
    1:8:void $r8$init$synthetic(androidx.collection.ArrayMap$1,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/v;I)V"}
    6:11:boolean androidx.collection.MapCollections$KeySet.add(java.lang.Object):0:0 -> add
    6:11:boolean add$bridge(java.lang.Object):0 -> add
      # {"id":"com.android.tools.r8.synthesized"}
    12:13:boolean androidx.collection.MapCollections$EntrySet.add(java.lang.Object):0:0 -> add
    12:13:boolean add$bridge(java.lang.Object):0 -> add
    14:20:boolean androidx.collection.MapCollections$EntrySet.add(java.util.Map$Entry):0:0 -> add
    14:20:boolean androidx.collection.MapCollections$EntrySet.add(java.lang.Object):0 -> add
    14:20:boolean add$bridge(java.lang.Object):0 -> add
    6:13:boolean androidx.collection.MapCollections$KeySet.addAll(java.util.Collection):0:0 -> addAll
    6:13:boolean addAll$bridge(java.util.Collection):0 -> addAll
      # {"id":"com.android.tools.r8.synthesized"}
    14:41:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0:0 -> addAll
    14:41:boolean addAll$bridge(java.util.Collection):0 -> addAll
    42:45:void androidx.collection.ArrayMap$1.colPut(java.lang.Object,java.lang.Object):0:0 -> addAll
    42:45:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0 -> addAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    42:45:boolean addAll$bridge(java.util.Collection):0 -> addAll
    46:49:void androidx.collection.ArrayMap$1.colPut(java.lang.Object,java.lang.Object):0:0 -> addAll
    46:49:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0 -> addAll
    46:49:boolean addAll$bridge(java.util.Collection):0 -> addAll
    50:60:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0:0 -> addAll
    50:60:boolean addAll$bridge(java.util.Collection):0 -> addAll
    8:11:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
    8:11:void androidx.collection.MapCollections$KeySet.clear():0 -> clear
    8:11:void clear$bridge():0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    12:15:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
    12:15:void androidx.collection.MapCollections$KeySet.clear():0 -> clear
    12:15:void clear$bridge():0 -> clear
    16:19:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
    16:19:void androidx.collection.MapCollections$EntrySet.clear():0 -> clear
    16:19:void clear$bridge():0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    20:24:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
    20:24:void androidx.collection.MapCollections$EntrySet.clear():0 -> clear
    20:24:void clear$bridge():0 -> clear
    10:13:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> contains
    10:13:boolean androidx.collection.MapCollections$KeySet.contains(java.lang.Object):0 -> contains
    10:13:boolean contains$bridge(java.lang.Object):0 -> contains
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    14:21:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> contains
    14:21:boolean androidx.collection.MapCollections$KeySet.contains(java.lang.Object):0 -> contains
    14:21:boolean contains$bridge(java.lang.Object):0 -> contains
    22:32:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0:0 -> contains
    22:32:boolean contains$bridge(java.lang.Object):0 -> contains
    33:36:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> contains
    33:36:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0 -> contains
    33:36:boolean contains$bridge(java.lang.Object):0 -> contains
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    37:43:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> contains
    37:43:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0 -> contains
    37:43:boolean contains$bridge(java.lang.Object):0 -> contains
    44:55:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0:0 -> contains
    44:55:boolean contains$bridge(java.lang.Object):0 -> contains
    56:64:boolean androidx.collection.ContainerHelpers.equal(java.lang.Object,java.lang.Object):0:0 -> contains
    56:64:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0 -> contains
    56:64:boolean contains$bridge(java.lang.Object):0 -> contains
    10:13:java.util.Map androidx.collection.ArrayMap$1.colGetMap():0:0 -> containsAll
    10:13:boolean androidx.collection.MapCollections$KeySet.containsAll(java.util.Collection):0 -> containsAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:13:boolean containsAll$bridge(java.util.Collection):0 -> containsAll
      # {"id":"com.android.tools.r8.synthesized"}
    14:35:boolean androidx.collection.MapCollections.containsAllHelper(java.util.Map,java.util.Collection):0:0 -> containsAll
    14:35:boolean androidx.collection.MapCollections$KeySet.containsAll(java.util.Collection):0 -> containsAll
    14:35:boolean containsAll$bridge(java.util.Collection):0 -> containsAll
    36:58:boolean androidx.collection.MapCollections$EntrySet.containsAll(java.util.Collection):0:0 -> containsAll
    36:58:boolean containsAll$bridge(java.util.Collection):0 -> containsAll
    6:10:boolean androidx.collection.MapCollections$KeySet.equals(java.lang.Object):0:0 -> equals
    6:10:boolean equals$bridge(java.lang.Object):0 -> equals
      # {"id":"com.android.tools.r8.synthesized"}
    11:16:boolean androidx.collection.MapCollections$EntrySet.equals(java.lang.Object):0:0 -> equals
    11:16:boolean equals$bridge(java.lang.Object):0 -> equals
    10:34:int androidx.collection.MapCollections$KeySet.hashCode():0:0 -> hashCode
    10:34:int hashCode$bridge():0 -> hashCode
      # {"id":"com.android.tools.r8.synthesized"}
    35:72:int androidx.collection.MapCollections$EntrySet.hashCode():0:0 -> hashCode
    35:72:int hashCode$bridge():0 -> hashCode
    10:17:boolean androidx.collection.MapCollections$KeySet.isEmpty():0:0 -> isEmpty
    10:17:boolean isEmpty$bridge():0 -> isEmpty
      # {"id":"com.android.tools.r8.synthesized"}
    18:26:boolean androidx.collection.MapCollections$EntrySet.isEmpty():0:0 -> isEmpty
    18:26:boolean isEmpty$bridge():0 -> isEmpty
    8:14:java.util.Iterator androidx.collection.MapCollections$KeySet.iterator():0:0 -> iterator
    8:14:java.util.Iterator iterator$bridge():0 -> iterator
      # {"id":"com.android.tools.r8.synthesized"}
    15:20:java.util.Iterator androidx.collection.MapCollections$EntrySet.iterator():0:0 -> iterator
    15:20:java.util.Iterator iterator$bridge():0 -> iterator
    8:11:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> remove
    8:11:boolean androidx.collection.MapCollections$KeySet.remove(java.lang.Object):0 -> remove
    8:11:boolean remove$bridge(java.lang.Object):0 -> remove
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    12:17:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> remove
    12:17:boolean androidx.collection.MapCollections$KeySet.remove(java.lang.Object):0 -> remove
    12:17:boolean remove$bridge(java.lang.Object):0 -> remove
    18:24:boolean androidx.collection.MapCollections$KeySet.remove(java.lang.Object):0:0 -> remove
    18:24:boolean remove$bridge(java.lang.Object):0 -> remove
    25:30:boolean androidx.collection.MapCollections$EntrySet.remove(java.lang.Object):0:0 -> remove
    25:30:boolean remove$bridge(java.lang.Object):0 -> remove
    8:11:java.util.Map androidx.collection.ArrayMap$1.colGetMap():0:0 -> removeAll
    8:11:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:11:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
      # {"id":"com.android.tools.r8.synthesized"}
    12:13:int androidx.collection.SimpleArrayMap.size():0:0 -> removeAll
    12:13:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0 -> removeAll
    12:13:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
    12:13:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    14:31:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0:0 -> removeAll
    14:31:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
    14:31:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
    32:39:int androidx.collection.SimpleArrayMap.size():0:0 -> removeAll
    32:39:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0 -> removeAll
    32:39:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
    32:39:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
    40:46:boolean androidx.collection.MapCollections$EntrySet.removeAll(java.util.Collection):0:0 -> removeAll
    40:46:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
    8:11:java.util.Map androidx.collection.ArrayMap$1.colGetMap():0:0 -> retainAll
    8:11:boolean androidx.collection.MapCollections$KeySet.retainAll(java.util.Collection):0 -> retainAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:11:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
      # {"id":"com.android.tools.r8.synthesized"}
    12:13:int androidx.collection.SimpleArrayMap.size():0:0 -> retainAll
    12:13:boolean androidx.collection.MapCollections.retainAllHelper(java.util.Map,java.util.Collection):0 -> retainAll
    12:13:boolean androidx.collection.MapCollections$KeySet.retainAll(java.util.Collection):0 -> retainAll
    12:13:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    14:43:boolean androidx.collection.MapCollections.retainAllHelper(java.util.Map,java.util.Collection):0:0 -> retainAll
    14:43:boolean androidx.collection.MapCollections$KeySet.retainAll(java.util.Collection):0 -> retainAll
    14:43:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
    44:51:int androidx.collection.SimpleArrayMap.size():0:0 -> retainAll
    44:51:boolean androidx.collection.MapCollections.retainAllHelper(java.util.Map,java.util.Collection):0 -> retainAll
    44:51:boolean androidx.collection.MapCollections$KeySet.retainAll(java.util.Collection):0 -> retainAll
    44:51:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
    52:58:boolean androidx.collection.MapCollections$EntrySet.retainAll(java.util.Collection):0:0 -> retainAll
    52:58:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
    8:12:int androidx.collection.MapCollections$KeySet.size():0:0 -> size
    8:12:int size$bridge():0 -> size
      # {"id":"com.android.tools.r8.synthesized"}
    13:18:int androidx.collection.MapCollections$EntrySet.size():0:0 -> size
    13:18:int size$bridge():0 -> size
    1:1:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0:0 -> toArray
    1:1:java.lang.Object[] androidx.collection.MapCollections$KeySet.toArray():0 -> toArray
    1:1:java.lang.Object[] toArray$bridge():0 -> toArray
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0:0 -> toArray
    2:2:java.lang.Object[] androidx.collection.MapCollections$KeySet.toArray():0 -> toArray
    2:2:java.lang.Object[] toArray$bridge():0 -> toArray
    3:3:java.lang.Object[] androidx.collection.MapCollections$EntrySet.toArray():0:0 -> toArray
    3:3:java.lang.Object[] toArray$bridge():0 -> toArray
    4:4:java.lang.Object[] androidx.collection.MapCollections$KeySet.toArray(java.lang.Object[]):0:0 -> toArray
    4:4:java.lang.Object[] toArray$bridge(java.lang.Object[]):0 -> toArray
      # {"id":"com.android.tools.r8.synthesized"}
    5:5:java.lang.Object[] androidx.collection.MapCollections$EntrySet.toArray(java.lang.Object[]):0:0 -> toArray
    5:5:java.lang.Object[] toArray$bridge(java.lang.Object[]):0 -> toArray
androidx.collection.MapCollections$KeySet -> R8$$REMOVED$$CLASS$$34:
# {"id":"sourceFile","fileName":"MapCollections.java"}
androidx.collection.MapCollections$MapIterator -> p.g:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    androidx.collection.MapCollections this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/v;"}
    1:1:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/v;)V"}
    29:34:boolean androidx.collection.ContainerHelpers.equal(java.lang.Object,java.lang.Object):0:0 -> equals
    29:34:boolean equals(java.lang.Object):0 -> equals
    35:49:boolean equals(java.lang.Object):0:0 -> equals
    50:57:boolean androidx.collection.ContainerHelpers.equal(java.lang.Object,java.lang.Object):0:0 -> equals
    50:57:boolean equals(java.lang.Object):0 -> equals
    58:65:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object getKey():0:0 -> getKey
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:int hashCode():0:0 -> hashCode
    1:21:java.util.Map$Entry androidx.collection.MapCollections$MapIterator.next():0:0 -> next
    1:21:java.lang.Object next():0 -> next
    1:1:void remove():0:0 -> remove
    9:16:java.lang.Object androidx.collection.ArrayMap$1.colSetValue(int,java.lang.Object):0:0 -> setValue
    9:16:java.lang.Object setValue(java.lang.Object):0 -> setValue
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    17:18:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> setValue
    17:18:java.lang.Object androidx.collection.ArrayMap$1.colSetValue(int,java.lang.Object):0 -> setValue
    17:18:java.lang.Object setValue(java.lang.Object):0 -> setValue
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    19:23:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> setValue
    19:23:java.lang.Object androidx.collection.ArrayMap$1.colSetValue(int,java.lang.Object):0 -> setValue
    19:23:java.lang.Object setValue(java.lang.Object):0 -> setValue
    24:31:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
    1:1:java.lang.String toString():0:0 -> toString
androidx.collection.MapCollections$ValuesCollection -> p.h:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    androidx.collection.MapCollections this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/v;"}
    1:1:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/v;)V"}
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    3:6:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
    3:6:void clear():0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:10:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
    7:10:void clear():0 -> clear
    3:6:int androidx.collection.ArrayMap$1.colIndexOfValue(java.lang.Object):0:0 -> contains
    3:6:boolean contains(java.lang.Object):0 -> contains
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:16:int androidx.collection.ArrayMap$1.colIndexOfValue(java.lang.Object):0:0 -> contains
    7:16:boolean contains(java.lang.Object):0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    3:6:int androidx.collection.ArrayMap$1.colIndexOfValue(java.lang.Object):0:0 -> remove
    3:6:boolean remove(java.lang.Object):0 -> remove
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:12:int androidx.collection.ArrayMap$1.colIndexOfValue(java.lang.Object):0:0 -> remove
    7:12:boolean remove(java.lang.Object):0 -> remove
    13:19:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0:0 -> toArray
    1:1:java.lang.Object[] toArray():0 -> toArray
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0:0 -> toArray
    2:2:java.lang.Object[] toArray():0 -> toArray
    3:3:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.collection.SimpleArrayMap -> p.i:
# {"id":"sourceFile","fileName":"SimpleArrayMap.java"}
    int[] mHashes -> a
    java.lang.Object[] mArray -> b
    int mSize -> c
    java.lang.Object[] mBaseCache -> d
    int mBaseCacheSize -> e
    java.lang.Object[] mTwiceBaseCache -> f
    int mTwiceBaseCacheSize -> g
    1:1:void <init>():0:0 -> <init>
    1:1:void allocArrays(int):0:0 -> a
    1:1:void freeArrays(int[],java.lang.Object[],int):0:0 -> b
    9:19:int androidx.collection.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> c
    9:19:int indexOf(java.lang.Object,int):0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)I"}
    20:82:int indexOf(java.lang.Object,int):0:0 -> c
    83:88:int androidx.collection.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> c
    83:88:int indexOf(java.lang.Object,int):0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:1:boolean containsValue(java.lang.Object):0:0 -> containsValue
    1:1:int indexOfKey(java.lang.Object):0:0 -> d
    10:20:int androidx.collection.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> e
    10:20:int indexOfNull():0 -> e
    21:71:int indexOfNull():0:0 -> e
    72:77:int androidx.collection.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> e
    72:77:int indexOfNull():0 -> e
    14:27:int androidx.collection.SimpleArrayMap.size():0:0 -> equals
    14:27:boolean equals(java.lang.Object):0 -> equals
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    28:29:java.lang.Object androidx.collection.SimpleArrayMap.keyAt(int):0:0 -> equals
    28:29:boolean equals(java.lang.Object):0 -> equals
    30:34:boolean equals(java.lang.Object):0:0 -> equals
    35:42:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> equals
    35:42:boolean equals(java.lang.Object):0 -> equals
    43:85:boolean equals(java.lang.Object):0:0 -> equals
    86:87:java.lang.Object androidx.collection.SimpleArrayMap.keyAt(int):0:0 -> equals
    86:87:boolean equals(java.lang.Object):0 -> equals
    88:118:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int indexOfValue(java.lang.Object):0:0 -> f
    1:1:java.lang.Object removeAt(int):0:0 -> g
    1:1:java.lang.Object get(java.lang.Object):0:0 -> get
    1:1:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object):0:0 -> getOrDefault
    1:1:java.lang.Object valueAt(int):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
    2:7:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> putIfAbsent
    2:7:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0 -> putIfAbsent
    8:12:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> putIfAbsent
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
    2:2:boolean remove(java.lang.Object,java.lang.Object):0:0 -> remove
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> replace
    1:1:java.lang.Object replace(java.lang.Object,java.lang.Object):0 -> replace
    2:2:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> replace
    2:2:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object):0 -> replace
    1:1:int size():0:0 -> size
    40:45:java.lang.Object androidx.collection.SimpleArrayMap.keyAt(int):0:0 -> toString
    40:45:java.lang.String toString():0 -> toString
    46:83:java.lang.String toString():0:0 -> toString
androidx.collection.SparseArrayCompat -> p.j:
# {"id":"sourceFile","fileName":"SparseArrayCompat.java"}
    int[] mKeys -> a
    java.lang.Object[] mValues -> b
    int mSize -> c
    java.lang.Object DELETED -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:22:void androidx.collection.SparseArrayCompat.<init>(int):0:0 -> <init>
    1:22:void <init>():0 -> <init>
    23:23:int androidx.collection.ContainerHelpers.idealIntArraySize(int):0:0 -> <init>
    23:23:void androidx.collection.SparseArrayCompat.<init>(int):0 -> <init>
    23:23:void <init>():0 -> <init>
    24:32:void androidx.collection.SparseArrayCompat.<init>(int):0:0 -> <init>
    24:32:void <init>():0 -> <init>
    44:44:int androidx.collection.ContainerHelpers.idealIntArraySize(int):0:0 -> a
    44:44:void append(int,java.lang.Object):0 -> a
    45:77:void append(int,java.lang.Object):0:0 -> a
    1:1:androidx.collection.SparseArrayCompat clone():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/j;"}
    1:1:java.lang.Object get(int,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Integer;)Ljava/lang/Object;"}
    1:1:java.lang.Object clone():0:0 -> clone
    62:62:int androidx.collection.ContainerHelpers.idealIntArraySize(int):0:0 -> d
    62:62:void put(int,java.lang.Object):0 -> d
    63:117:void put(int,java.lang.Object):0:0 -> d
    8:33:java.lang.String toString():0:0 -> toString
    34:35:int androidx.collection.SparseArrayCompat.keyAt(int):0:0 -> toString
    34:35:java.lang.String toString():0 -> toString
    36:45:java.lang.String toString():0:0 -> toString
    46:49:java.lang.Object androidx.collection.SparseArrayCompat.valueAt(int):0:0 -> toString
    46:49:java.lang.String toString():0 -> toString
    50:71:java.lang.String toString():0:0 -> toString
androidx.concurrent.futures.AbstractResolvableFuture -> q.g:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    java.lang.Object value -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq/c;"}
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq/f;"}
    boolean GENERATE_CANCELLATION_CAUSES -> d
    java.util.logging.Logger log -> e
    androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper ATOMIC_HELPER -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb1/a;"}
    java.lang.Object NULL -> g
    76:84:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.<init>():0:0 -> <clinit>
    76:84:void androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.<init>(androidx.concurrent.futures.AbstractResolvableFuture$1):0 -> <clinit>
    76:84:void androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper.<init>():0 -> <clinit>
    76:84:void <clinit>():0 -> <clinit>
    85:99:void <clinit>():0:0 -> <clinit>
    4:18:java.lang.Object androidx.concurrent.futures.AbstractResolvableFuture.getUninterruptibly(java.util.concurrent.Future):0:0 -> a
    4:18:void addDoneString(java.lang.StringBuilder):0 -> a
    19:26:void addDoneString(java.lang.StringBuilder):0:0 -> a
    27:30:java.lang.String androidx.concurrent.futures.AbstractResolvableFuture.userObjectToString(java.lang.Object):0:0 -> a
    27:30:void addDoneString(java.lang.StringBuilder):0 -> a
    31:44:void addDoneString(java.lang.StringBuilder):0:0 -> a
    45:54:java.lang.Object androidx.concurrent.futures.AbstractResolvableFuture.getUninterruptibly(java.util.concurrent.Future):0:0 -> a
    45:54:void addDoneString(java.lang.StringBuilder):0 -> a
    55:89:void addDoneString(java.lang.StringBuilder):0:0 -> a
    1:6:void androidx.concurrent.futures.AbstractResolvableFuture.releaseWaiters():0:0 -> b
    1:6:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g;)V"}
    7:15:void androidx.concurrent.futures.AbstractResolvableFuture.releaseWaiters():0:0 -> b
    7:15:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    16:24:void androidx.concurrent.futures.AbstractResolvableFuture$Waiter.unpark():0:0 -> b
    16:24:void androidx.concurrent.futures.AbstractResolvableFuture.releaseWaiters():0 -> b
    16:24:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    25:27:void androidx.concurrent.futures.AbstractResolvableFuture.releaseWaiters():0:0 -> b
    25:27:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    28:50:androidx.concurrent.futures.AbstractResolvableFuture$Listener androidx.concurrent.futures.AbstractResolvableFuture.clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> b
    28:50:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    51:52:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0:0 -> b
    53:64:void androidx.concurrent.futures.AbstractResolvableFuture.executeListener(java.lang.Runnable,java.util.concurrent.Executor):0:0 -> b
    53:64:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    31:40:java.util.concurrent.CancellationException androidx.concurrent.futures.AbstractResolvableFuture.cancellationExceptionWithCause(java.lang.String,java.lang.Throwable):0:0 -> c
    31:40:java.lang.Object getDoneValue(java.lang.Object):0 -> c
    41:41:java.lang.Object getDoneValue(java.lang.Object):0:0 -> c
    1:1:boolean cancel(boolean):0:0 -> cancel
    1:1:void removeWaiter(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/f;)V"}
    1:1:void androidx.concurrent.futures.AbstractResolvableFuture$Waiter.setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> get
    1:1:java.lang.Object get():0 -> get
    2:2:java.lang.Object get():0:0 -> get
    3:3:void androidx.concurrent.futures.AbstractResolvableFuture$Waiter.setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> get
    3:3:java.lang.Object get(long,java.util.concurrent.TimeUnit):0 -> get
    4:4:java.lang.Object get(long,java.util.concurrent.TimeUnit):0:0 -> get
    1:1:boolean isCancelled():0:0 -> isCancelled
    1:1:boolean isDone():0:0 -> isDone
    20:27:boolean androidx.concurrent.futures.AbstractResolvableFuture.isCancelled():0:0 -> toString
    20:27:java.lang.String toString():0 -> toString
    28:41:java.lang.String toString():0:0 -> toString
    42:77:java.lang.String androidx.concurrent.futures.AbstractResolvableFuture.pendingToString():0:0 -> toString
    42:77:java.lang.String toString():0 -> toString
    78:133:java.lang.String toString():0:0 -> toString
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper -> R8$$REMOVED$$CLASS$$36:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation -> q.a:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    java.lang.Throwable cause -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_INTERRUPTED -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq/a;"}
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_CANCELLED -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq/a;"}
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(boolean,java.lang.Throwable):0:0 -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Failure -> q.b:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
androidx.concurrent.futures.AbstractResolvableFuture$Listener -> q.c:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    androidx.concurrent.futures.AbstractResolvableFuture$Listener next -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq/c;"}
    androidx.concurrent.futures.AbstractResolvableFuture$Listener TOMBSTONE -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq/c;"}
    3:8:void androidx.concurrent.futures.AbstractResolvableFuture$Listener.<init>(java.lang.Runnable,java.util.concurrent.Executor):0:0 -> <clinit>
    3:8:void <clinit>():0 -> <clinit>
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper -> q.d:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater -> k
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater -> l
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater -> m
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater -> n
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater -> o
    1:14:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.<init>():0:0 -> <init>
    1:14:void androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.<init>(androidx.concurrent.futures.AbstractResolvableFuture$1):0 -> <init>
    1:14:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater):0 -> <init>
    1:1:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/f;Lq/f;)V"}
    1:1:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/f;Ljava/lang/Thread;)V"}
    1:1:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g;Lq/c;)Z"}
    1:1:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g;Lq/f;Lq/f;)Z"}
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper -> q.e:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    1:1:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/f;Lq/f;)V"}
    1:1:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/f;Ljava/lang/Thread;)V"}
    1:1:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g;Lq/c;)Z"}
    1:1:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g;Lq/f;Lq/f;)Z"}
androidx.concurrent.futures.AbstractResolvableFuture$Waiter -> q.f:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    java.lang.Thread thread -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter next -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq/f;"}
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter TOMBSTONE -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq/f;"}
    3:8:void androidx.concurrent.futures.AbstractResolvableFuture$Waiter.<init>(boolean):0:0 -> <clinit>
    3:8:void <clinit>():0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
androidx.concurrent.futures.ResolvableFuture -> q.h:
# {"id":"sourceFile","fileName":"ResolvableFuture.java"}
androidx.core.R$styleable -> r.a:
    int[] ColorStateListItem -> a
    int[] FontFamily -> b
    int[] FontFamilyFont -> c
    int[] GradientColor -> d
    int[] GradientColorItem -> e
    1:1:void <clinit>():0:0 -> <clinit>
androidx.core.app.AppOpsManagerCompat -> R8$$REMOVED$$CLASS$$37:
# {"id":"sourceFile","fileName":"AppOpsManagerCompat.java"}
androidx.core.app.AppOpsManagerCompat$Api23Impl -> s.a:
# {"id":"sourceFile","fileName":"AppOpsManagerCompat.java"}
    1:1:java.lang.Object getSystemService(android.content.Context,java.lang.Class):0:0 -> a
    1:1:int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String):0:0 -> b
    1:1:int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String):0:0 -> c
    1:1:java.lang.String permissionToOp(java.lang.String):0:0 -> d
androidx.core.app.AppOpsManagerCompat$Api29Impl -> s.b:
# {"id":"sourceFile","fileName":"AppOpsManagerCompat.java"}
    1:1:int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String):0:0 -> a
    1:1:java.lang.String getOpPackageName(android.content.Context):0:0 -> b
    1:1:android.app.AppOpsManager getSystemService(android.content.Context):0:0 -> c
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
# {"id":"sourceFile","fileName":"CoreComponentFactory.java"}
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
# {"id":"sourceFile","fileName":"RemoteActionCompat.java"}
    androidx.core.graphics.drawable.IconCompat mIcon -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mContentDescription -> c
    android.app.PendingIntent mActionIntent -> d
    boolean mEnabled -> e
    boolean mShouldShowIcon -> f
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
# {"id":"sourceFile","fileName":"RemoteActionCompatParcelizer.java"}
    9:15:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> read
    9:15:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)Landroidx/core/app/RemoteActionCompat;"}
    16:19:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> read
    16:19:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    20:26:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    27:36:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0:0 -> read
    27:36:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    37:51:java.lang.CharSequence androidx.versionedparcelable.VersionedParcelParcel.readCharSequence():0:0 -> read
    37:51:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0 -> read
    37:51:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    52:61:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0:0 -> read
    52:61:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    62:76:java.lang.CharSequence androidx.versionedparcelable.VersionedParcelParcel.readCharSequence():0:0 -> read
    62:76:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0 -> read
    62:76:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    77:87:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    88:98:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0:0 -> read
    88:98:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    99:114:boolean androidx.versionedparcelable.VersionedParcelParcel.readBoolean():0:0 -> read
    99:114:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0 -> read
    99:114:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    115:123:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0:0 -> read
    115:123:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    124:137:boolean androidx.versionedparcelable.VersionedParcelParcel.readBoolean():0:0 -> read
    124:137:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0 -> read
    124:137:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    7:12:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> write
    7:12:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/RemoteActionCompat;Lr0/a;)V"}
    13:15:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    16:21:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0:0 -> write
    16:21:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    22:27:void androidx.versionedparcelable.VersionedParcelParcel.writeCharSequence(java.lang.CharSequence):0:0 -> write
    22:27:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0 -> write
    22:27:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    28:30:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    31:33:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0:0 -> write
    31:33:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    34:36:void androidx.versionedparcelable.VersionedParcelParcel.writeCharSequence(java.lang.CharSequence):0:0 -> write
    34:36:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0 -> write
    34:36:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    37:39:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    40:42:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    40:42:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    43:45:void androidx.versionedparcelable.VersionedParcelParcel.writeParcelable(android.os.Parcelable):0:0 -> write
    43:45:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0 -> write
    43:45:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    46:48:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    49:51:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0:0 -> write
    49:51:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    52:54:void androidx.versionedparcelable.VersionedParcelParcel.writeBoolean(boolean):0:0 -> write
    52:54:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0 -> write
    52:54:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    55:57:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    58:60:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0:0 -> write
    58:60:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    61:64:void androidx.versionedparcelable.VersionedParcelParcel.writeBoolean(boolean):0:0 -> write
    61:64:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0 -> write
    61:64:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback -> t.b:
# {"id":"sourceFile","fileName":"IUnusedAppRestrictionsBackportCallback.java"}
    java.lang.String DESCRIPTOR -> j
    1:1:void <clinit>():0:0 -> <clinit>
    void onIsPermissionRevocationEnabledForAppResult(boolean,boolean) -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub:
# {"id":"sourceFile","fileName":"IUnusedAppRestrictionsBackportCallback.java"}
    22:27:void androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy.<init>(android.os.IBinder):0:0 -> asInterface
    22:27:androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback asInterface(android.os.IBinder):0 -> asInterface
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)Lt/b;"}
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy -> t.a:
# {"id":"sourceFile","fileName":"IUnusedAppRestrictionsBackportCallback.java"}
    android.os.IBinder mRemote -> l
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService -> t.d:
# {"id":"sourceFile","fileName":"IUnusedAppRestrictionsBackportService.java"}
    java.lang.String DESCRIPTOR -> k
    1:1:void <clinit>():0:0 -> <clinit>
    void isPermissionRevocationEnabledForApp(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub:
# {"id":"sourceFile","fileName":"IUnusedAppRestrictionsBackportService.java"}
    22:27:void androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy.<init>(android.os.IBinder):0:0 -> asInterface
    22:27:androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService asInterface(android.os.IBinder):0 -> asInterface
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/IBinder;)Lt/d;"}
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy -> t.c:
# {"id":"sourceFile","fileName":"IUnusedAppRestrictionsBackportService.java"}
    android.os.IBinder mRemote -> l
    1:1:android.os.IBinder asBinder():0:0 -> asBinder
androidx.core.content.ContextCompat$Api21Impl -> u.a:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    1:1:java.io.File getCodeCacheDir(android.content.Context):0:0 -> a
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int):0:0 -> b
    1:1:java.io.File getNoBackupFilesDir(android.content.Context):0:0 -> c
androidx.core.content.ContextCompat$Api26Impl -> u.b:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    1:1:java.lang.String androidx.core.content.ContextCompat.obtainAndCheckReceiverPermission(android.content.Context):0:0 -> a
    1:1:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0 -> a
    2:2:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0:0 -> a
    2:2:java.lang.String androidx.core.content.ContextCompat.obtainAndCheckReceiverPermission(android.content.Context):0 -> a
    2:2:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0 -> a
    3:3:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0:0 -> a
    3:3:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> a
    3:3:java.lang.String androidx.core.content.ContextCompat.obtainAndCheckReceiverPermission(android.content.Context):0 -> a
    3:3:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0 -> a
    4:4:java.lang.String androidx.core.app.AppOpsManagerCompat.permissionToOp(java.lang.String):0:0 -> a
    4:4:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0 -> a
    4:4:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> a
    4:4:java.lang.String androidx.core.content.ContextCompat.obtainAndCheckReceiverPermission(android.content.Context):0 -> a
    4:4:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0 -> a
    5:5:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0:0 -> a
    5:5:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> a
    5:5:java.lang.String androidx.core.content.ContextCompat.obtainAndCheckReceiverPermission(android.content.Context):0 -> a
    5:5:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0 -> a
    6:6:boolean androidx.core.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> a
    6:6:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0 -> a
    6:6:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> a
    6:6:java.lang.String androidx.core.content.ContextCompat.obtainAndCheckReceiverPermission(android.content.Context):0 -> a
    6:6:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0 -> a
    7:7:int androidx.core.app.AppOpsManagerCompat.checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String):0:0 -> a
    7:7:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0 -> a
    7:7:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> a
    7:7:java.lang.String androidx.core.content.ContextCompat.obtainAndCheckReceiverPermission(android.content.Context):0 -> a
    7:7:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0 -> a
    8:8:int androidx.core.app.AppOpsManagerCompat.noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String):0:0 -> a
    8:8:int androidx.core.app.AppOpsManagerCompat.checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String):0 -> a
    8:8:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0 -> a
    8:8:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> a
    8:8:java.lang.String androidx.core.content.ContextCompat.obtainAndCheckReceiverPermission(android.content.Context):0 -> a
    8:8:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0 -> a
    9:9:int androidx.core.app.AppOpsManagerCompat.noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String):0:0 -> a
    9:9:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0 -> a
    9:9:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> a
    9:9:java.lang.String androidx.core.content.ContextCompat.obtainAndCheckReceiverPermission(android.content.Context):0 -> a
    9:9:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0 -> a
    10:10:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0:0 -> a
    11:11:java.lang.String androidx.core.content.ContextCompat.obtainAndCheckReceiverPermission(android.content.Context):0:0 -> a
    11:11:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0 -> a
    12:12:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0:0 -> a
    1:1:android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent):0:0 -> b
androidx.core.content.ContextCompat$Api33Impl -> u.c:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    1:1:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0:0 -> a
androidx.core.content.PermissionChecker -> R8$$REMOVED$$CLASS$$38:
# {"id":"sourceFile","fileName":"PermissionChecker.java"}
androidx.core.content.res.CamColor -> v.a:
# {"id":"sourceFile","fileName":"CamColor.java"}
    float mHue -> a
    float mChroma -> b
    float mJ -> c
    float mJstar -> d
    float mAstar -> e
    float mBstar -> f
    1:1:void <init>(float,float,float,float,float,float,float,float,float):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FFFFFF)V"}
    3:81:void androidx.core.content.res.CamUtils.xyzFromInt(int,float[]):0:0 -> a
    3:81:void androidx.core.content.res.CamColor.fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions,float[],float[]):0 -> a
    3:81:androidx.core.content.res.CamColor fromColor(int):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lv/a;"}
    82:129:void androidx.core.content.res.CamColor.fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions,float[],float[]):0:0 -> a
    82:129:androidx.core.content.res.CamColor fromColor(int):0 -> a
    130:131:float[] androidx.core.content.res.ViewingConditions.getRgbD():0:0 -> a
    130:131:void androidx.core.content.res.CamColor.fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions,float[],float[]):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    130:131:androidx.core.content.res.CamColor fromColor(int):0 -> a
    132:528:void androidx.core.content.res.CamColor.fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions,float[],float[]):0:0 -> a
    132:528:androidx.core.content.res.CamColor fromColor(int):0 -> a
    529:537:androidx.core.content.res.CamColor fromColor(int):0:0 -> a
    3:8:float androidx.core.content.res.ViewingConditions.getC():0:0 -> b
    3:8:androidx.core.content.res.CamColor androidx.core.content.res.CamColor.fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:8:androidx.core.content.res.CamColor fromJch(float,float,float):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FFF)Lv/a;"}
    9:105:androidx.core.content.res.CamColor androidx.core.content.res.CamColor.fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions):0:0 -> b
    9:105:androidx.core.content.res.CamColor fromJch(float,float,float):0 -> b
    34:41:float androidx.core.content.res.ViewingConditions.getN():0:0 -> c
    34:41:int viewed(androidx.core.content.res.ViewingConditions):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/q;)I"}
    42:422:int viewed(androidx.core.content.res.ViewingConditions):0:0 -> c
androidx.core.content.res.CamUtils -> v.b:
# {"id":"sourceFile","fileName":"CamUtils.java"}
    float[][] XYZ_TO_CAM16RGB -> a
    float[][] CAM16RGB_TO_XYZ -> b
    float[] WHITE_POINT_D65 -> c
    float[][] SRGB_TO_XYZ -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int intFromLStar(float):0:0 -> a
    1:1:float linearized(int):0:0 -> b
    1:1:float yFromLStar(float):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()F"}
androidx.core.content.res.ColorStateListInflaterCompat -> v.c:
# {"id":"sourceFile","fileName":"ColorStateListInflaterCompat.java"}
    java.lang.ThreadLocal sTempTypedValue -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources;Landroid/content/res/XmlResourceParser;Landroid/content/res/Resources$Theme;)Landroid/content/res/ColorStateList;"}
    19:74:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> b
    19:74:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources;Landroid/content/res/XmlResourceParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroid/content/res/ColorStateList;"}
    75:84:android.content.res.TypedArray androidx.core.content.res.ColorStateListInflaterCompat.obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]):0:0 -> b
    75:84:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    75:84:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    85:97:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> b
    85:97:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    98:116:android.util.TypedValue androidx.core.content.res.ColorStateListInflaterCompat.getTypedValue():0:0 -> b
    98:116:boolean androidx.core.content.res.ColorStateListInflaterCompat.isColorInt(android.content.res.Resources,int):0 -> b
    98:116:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    98:116:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    117:128:boolean androidx.core.content.res.ColorStateListInflaterCompat.isColorInt(android.content.res.Resources,int):0:0 -> b
    117:128:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    117:128:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    129:286:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> b
    129:286:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    287:313:int androidx.core.content.res.ColorStateListInflaterCompat.modulateColorAlpha(int,float,float):0:0 -> b
    287:313:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    287:313:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    314:315:int androidx.core.content.res.CamColor.toColor(float,float,float):0:0 -> b
    314:315:int androidx.core.content.res.ColorStateListInflaterCompat.modulateColorAlpha(int,float,float):0 -> b
    314:315:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    314:315:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    316:397:int androidx.core.content.res.CamColor.toColor(float,float,float,androidx.core.content.res.ViewingConditions):0:0 -> b
    316:397:int androidx.core.content.res.CamColor.toColor(float,float,float):0 -> b
    316:397:int androidx.core.content.res.ColorStateListInflaterCompat.modulateColorAlpha(int,float,float):0 -> b
    316:397:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    316:397:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    398:420:androidx.core.content.res.CamColor androidx.core.content.res.CamColor.findCamByJ(float,float,float):0:0 -> b
    398:420:int androidx.core.content.res.CamColor.toColor(float,float,float,androidx.core.content.res.ViewingConditions):0 -> b
    398:420:int androidx.core.content.res.CamColor.toColor(float,float,float):0 -> b
    398:420:int androidx.core.content.res.ColorStateListInflaterCompat.modulateColorAlpha(int,float,float):0 -> b
    398:420:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    398:420:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    421:426:int androidx.core.content.res.CamColor.viewedInSrgb():0:0 -> b
    421:426:androidx.core.content.res.CamColor androidx.core.content.res.CamColor.findCamByJ(float,float,float):0 -> b
    421:426:int androidx.core.content.res.CamColor.toColor(float,float,float,androidx.core.content.res.ViewingConditions):0 -> b
    421:426:int androidx.core.content.res.CamColor.toColor(float,float,float):0 -> b
    421:426:int androidx.core.content.res.ColorStateListInflaterCompat.modulateColorAlpha(int,float,float):0 -> b
    421:426:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    421:426:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    427:497:float androidx.core.content.res.CamUtils.yFromInt(int):0:0 -> b
    427:497:float androidx.core.content.res.CamUtils.lStarFromInt(int):0 -> b
    427:497:androidx.core.content.res.CamColor androidx.core.content.res.CamColor.findCamByJ(float,float,float):0 -> b
    427:497:int androidx.core.content.res.CamColor.toColor(float,float,float,androidx.core.content.res.ViewingConditions):0 -> b
    427:497:int androidx.core.content.res.CamColor.toColor(float,float,float):0 -> b
    427:497:int androidx.core.content.res.ColorStateListInflaterCompat.modulateColorAlpha(int,float,float):0 -> b
    427:497:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    427:497:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    498:512:float androidx.core.content.res.CamUtils.lStarFromY(float):0:0 -> b
    498:512:float androidx.core.content.res.CamUtils.lStarFromInt(int):0 -> b
    498:512:androidx.core.content.res.CamColor androidx.core.content.res.CamColor.findCamByJ(float,float,float):0 -> b
    498:512:int androidx.core.content.res.CamColor.toColor(float,float,float,androidx.core.content.res.ViewingConditions):0 -> b
    498:512:int androidx.core.content.res.CamColor.toColor(float,float,float):0 -> b
    498:512:int androidx.core.content.res.ColorStateListInflaterCompat.modulateColorAlpha(int,float,float):0 -> b
    498:512:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    498:512:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    513:537:androidx.core.content.res.CamColor androidx.core.content.res.CamColor.findCamByJ(float,float,float):0:0 -> b
    513:537:int androidx.core.content.res.CamColor.toColor(float,float,float,androidx.core.content.res.ViewingConditions):0 -> b
    513:537:int androidx.core.content.res.CamColor.toColor(float,float,float):0 -> b
    513:537:int androidx.core.content.res.ColorStateListInflaterCompat.modulateColorAlpha(int,float,float):0 -> b
    513:537:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    513:537:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    538:656:float androidx.core.content.res.CamColor.distance(androidx.core.content.res.CamColor):0:0 -> b
    538:656:androidx.core.content.res.CamColor androidx.core.content.res.CamColor.findCamByJ(float,float,float):0 -> b
    538:656:int androidx.core.content.res.CamColor.toColor(float,float,float,androidx.core.content.res.ViewingConditions):0 -> b
    538:656:int androidx.core.content.res.CamColor.toColor(float,float,float):0 -> b
    538:656:int androidx.core.content.res.ColorStateListInflaterCompat.modulateColorAlpha(int,float,float):0 -> b
    538:656:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    538:656:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    657:752:int androidx.core.content.res.CamColor.toColor(float,float,float,androidx.core.content.res.ViewingConditions):0:0 -> b
    657:752:int androidx.core.content.res.CamColor.toColor(float,float,float):0 -> b
    657:752:int androidx.core.content.res.ColorStateListInflaterCompat.modulateColorAlpha(int,float,float):0 -> b
    657:752:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    657:752:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    753:761:int[] androidx.core.content.res.GrowingArrayUtils.append(int[],int,int):0:0 -> b
    753:761:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    753:761:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    762:791:java.lang.Object[] androidx.core.content.res.GrowingArrayUtils.append(java.lang.Object[],int,java.lang.Object):0:0 -> b
    762:791:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    762:791:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    792:835:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> b
    792:835:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> b
    836:865:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> b
androidx.core.content.res.ComplexColorCompat -> v.d:
# {"id":"sourceFile","fileName":"ComplexColorCompat.java"}
    android.graphics.Shader mShader -> a
    android.content.res.ColorStateList mColorStateList -> b
    int mColor -> c
    1:1:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int):0:0 -> <init>
    54:63:androidx.core.content.res.ComplexColorCompat androidx.core.content.res.ComplexColorCompat.from(android.content.res.ColorStateList):0:0 -> a
    54:63:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Lv/d;"}
    64:93:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> a
    94:111:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    94:111:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    112:210:float androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> a
    112:210:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    112:210:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    211:225:int androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> a
    211:225:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    211:225:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    226:239:int androidx.core.content.res.TypedArrayUtils.getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> a
    226:239:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    226:239:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    240:243:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    240:243:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    244:275:int androidx.core.content.res.TypedArrayUtils.getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> a
    244:275:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    244:275:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    276:296:int androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> a
    276:296:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    276:296:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    297:314:float androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> a
    297:314:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    297:314:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    315:317:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    315:317:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    318:467:androidx.core.content.res.GradientColorInflaterCompat$ColorStops androidx.core.content.res.GradientColorInflaterCompat.inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    318:467:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    318:467:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    468:527:void androidx.core.content.res.GradientColorInflaterCompat$ColorStops.<init>(java.util.List,java.util.List):0:0 -> a
    468:527:androidx.core.content.res.GradientColorInflaterCompat$ColorStops androidx.core.content.res.GradientColorInflaterCompat.inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    468:527:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    468:527:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    528:529:androidx.core.content.res.GradientColorInflaterCompat$ColorStops androidx.core.content.res.GradientColorInflaterCompat.checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int):0:0 -> a
    528:529:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    528:529:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    530:547:void androidx.core.content.res.GradientColorInflaterCompat$ColorStops.<init>(int,int,int):0:0 -> a
    530:547:androidx.core.content.res.GradientColorInflaterCompat$ColorStops androidx.core.content.res.GradientColorInflaterCompat.checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int):0 -> a
    530:547:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    530:547:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    548:549:androidx.core.content.res.GradientColorInflaterCompat$ColorStops androidx.core.content.res.GradientColorInflaterCompat.checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int):0:0 -> a
    548:549:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    548:549:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    550:566:void androidx.core.content.res.GradientColorInflaterCompat$ColorStops.<init>(int,int):0:0 -> a
    550:566:androidx.core.content.res.GradientColorInflaterCompat$ColorStops androidx.core.content.res.GradientColorInflaterCompat.checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int):0 -> a
    550:566:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    550:566:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    567:588:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    567:588:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    589:607:android.graphics.Shader$TileMode androidx.core.content.res.GradientColorInflaterCompat.parseTileMode(int):0:0 -> a
    589:607:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    589:607:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    608:654:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    608:654:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    655:675:android.graphics.Shader$TileMode androidx.core.content.res.GradientColorInflaterCompat.parseTileMode(int):0:0 -> a
    655:675:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    655:675:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    676:678:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    676:678:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    679:685:androidx.core.content.res.ComplexColorCompat androidx.core.content.res.ComplexColorCompat.from(android.graphics.Shader):0:0 -> a
    679:685:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    686:723:android.graphics.Shader androidx.core.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    686:723:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    724:732:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> a
    1:1:boolean isStateful():0:0 -> b
androidx.core.content.res.FontResourcesParserCompat -> R8$$REMOVED$$CLASS$$39:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
androidx.core.content.res.FontResourcesParserCompat$Api21Impl -> v.e:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    1:1:int getType(android.content.res.TypedArray,int):0:0 -> a
androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry -> v.f:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> v.g:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Lv/h;"}
    1:1:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lv/h;)V"}
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> v.h:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    java.lang.String mFileName -> a
    int mWeight -> b
    boolean mItalic -> c
    java.lang.String mVariationSettings -> d
    int mTtcIndex -> e
    int mResourceId -> f
    1:1:void <init>(java.lang.String,int,boolean,java.lang.String,int,int):0:0 -> <init>
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> v.i:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    androidx.core.provider.FontRequest mRequest -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/r;"}
    int mTimeoutMs -> b
    int mStrategy -> c
    java.lang.String mSystemFontFamilyName -> d
    1:1:void <init>(androidx.core.provider.FontRequest,int,int,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/r;IILjava/lang/String;)V"}
androidx.core.content.res.GradientColorInflaterCompat -> R8$$REMOVED$$CLASS$$41:
# {"id":"sourceFile","fileName":"GradientColorInflaterCompat.java"}
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> R8$$REMOVED$$CLASS$$40:
# {"id":"sourceFile","fileName":"GradientColorInflaterCompat.java"}
androidx.core.content.res.GrowingArrayUtils -> R8$$REMOVED$$CLASS$$42:
# {"id":"sourceFile","fileName":"GrowingArrayUtils.java"}
androidx.core.content.res.ResourcesCompat -> v.p:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    java.lang.ThreadLocal sTempTypedValue -> a
    java.util.WeakHashMap sColorStateCaches -> b
    java.lang.Object sColorStateCacheLock -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList,android.content.res.Resources$Theme):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/m;ILandroid/content/res/ColorStateList;Landroid/content/res/Resources$Theme;)V"}
androidx.core.content.res.ResourcesCompat$Api21Impl -> v.j:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> a
    1:1:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme):0:0 -> b
androidx.core.content.res.ResourcesCompat$Api23Impl -> v.k:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    1:1:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> a
    1:1:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> b
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry -> v.l:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    android.content.res.ColorStateList mValue -> a
    android.content.res.Configuration mConfiguration -> b
    int mThemeHash -> c
    1:1:void <init>(android.content.res.ColorStateList,android.content.res.Configuration,android.content.res.Resources$Theme):0:0 -> <init>
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey -> v.m:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    android.content.res.Resources mResources -> a
    android.content.res.Resources$Theme mTheme -> b
    1:1:void <init>(android.content.res.Resources,android.content.res.Resources$Theme):0:0 -> <init>
    31:42:boolean androidx.core.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> equals
    31:42:boolean equals(java.lang.Object):0 -> equals
    14:18:int androidx.core.util.ObjectsCompat.hash(java.lang.Object[]):0:0 -> hashCode
    14:18:int hashCode():0 -> hashCode
androidx.core.content.res.ResourcesCompat$FontCallback -> R8$$REMOVED$$CLASS$$43:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda0 -> v.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$3$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.$r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.core.content.res.ResourcesCompat$FontCallback androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$3$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.f$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Typeface androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$3$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.f$1 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
      # {"id":"com.android.tools.r8.synthesized"}
    1:10:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$3$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.<init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface):0:0 -> <init>
    1:10:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$3$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.$r8$init$synthetic(java.lang.Object,java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    23:73:void androidx.profileinstaller.ProfileInstallerInitializer.installAfterDelay(android.content.Context):0:0 -> run
    23:73:void androidx.profileinstaller.ProfileInstallerInitializer.lambda$delayAfterFirstFrame$0(android.content.Context):0 -> run
    23:73:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$3$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    74:78:void androidx.core.content.res.ResourcesCompat$FontCallback.lambda$callbackSuccessAsync$0(android.graphics.Typeface):0:0 -> run
    74:78:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$3$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.run$bridge():0 -> run
androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda1 -> v.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.content.res.ResourcesCompat$FontCallback androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$3$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.f$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/a0;"}
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$3$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.<init>(androidx.core.content.res.ResourcesCompat$FontCallback,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/a0;)V"}
    1:1:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$3$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.TypedArrayUtils -> R8$$REMOVED$$CLASS$$44:
# {"id":"sourceFile","fileName":"TypedArrayUtils.java"}
androidx.core.content.res.ViewingConditions -> v.q:
# {"id":"sourceFile","fileName":"ViewingConditions.java"}
    float mAw -> a
    float mNbb -> b
    float mNcb -> c
    float mC -> d
    float mNc -> e
    float mN -> f
    float[] mRgbD -> g
    float mFl -> h
    float mFlRoot -> i
    float mZ -> j
    androidx.core.content.res.ViewingConditions DEFAULT -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lv/q;"}
    22:372:androidx.core.content.res.ViewingConditions androidx.core.content.res.ViewingConditions.make(float[],float,float,float,boolean):0:0 -> <clinit>
    22:372:void <clinit>():0 -> <clinit>
    1:1:void <init>(float,float,float,float,float,float,float[],float,float,float):0:0 -> <init>
androidx.core.graphics.ColorUtils -> w.a:
# {"id":"sourceFile","fileName":"ColorUtils.java"}
    int $r8$clinit -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void <clinit>():0:0 -> <clinit>
    161:166:int androidx.core.graphics.ColorUtils.constrain(int,int,int):0:0 -> a
    161:166:int XYZToColor(double,double,double):0 -> a
    167:175:int XYZToColor(double,double,double):0:0 -> a
    176:181:int androidx.core.graphics.ColorUtils.constrain(int,int,int):0:0 -> a
    176:181:int XYZToColor(double,double,double):0 -> a
    182:189:int XYZToColor(double,double,double):0:0 -> a
    190:193:int androidx.core.graphics.ColorUtils.constrain(int,int,int):0:0 -> a
    190:193:int XYZToColor(double,double,double):0 -> a
    194:198:int XYZToColor(double,double,double):0:0 -> a
    15:18:int androidx.core.graphics.ColorUtils.compositeAlpha(int,int):0:0 -> b
    15:18:int compositeColors(int,int):0 -> b
    19:59:int compositeColors(int,int):0:0 -> b
    1:1:int compositeComponent(int,int,int,int,int):0:0 -> c
androidx.core.graphics.Insets -> w.c:
# {"id":"sourceFile","fileName":"Insets.java"}
    int left -> a
    int top -> b
    int right -> c
    int bottom -> d
    androidx.core.graphics.Insets NONE -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lw/c;"}
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int,int):0:0 -> <init>
    1:1:androidx.core.graphics.Insets of(int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Lw/c;"}
    1:1:android.graphics.Insets toPlatformInsets():0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.core.graphics.Insets$Api29Impl -> w.b:
# {"id":"sourceFile","fileName":"Insets.java"}
    1:1:android.graphics.Insets of(int,int,int,int):0:0 -> a
androidx.core.graphics.PathParser -> R8$$REMOVED$$CLASS$$45:
# {"id":"sourceFile","fileName":"PathParser.java"}
androidx.core.graphics.PathParser$PathDataNode -> w.d:
# {"id":"sourceFile","fileName":"PathParser.java"}
    char mType -> a
    float[] mParams -> b
    1:1:void <init>(char,float[]):0:0 -> <init>
    2:2:void <init>(androidx.core.graphics.PathParser$PathDataNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/d;)V"}
    1:1:void androidx.core.graphics.PathParser$PathDataNode.arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double):0:0 -> a
    1:1:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean):0 -> a
    8:17:void androidx.core.graphics.PathParser.nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path):0:0 -> b
    8:17:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lw/d;Landroid/graphics/Path;)V"}
    18:47:char androidx.core.graphics.PathParser$PathDataNode.access$000(androidx.core.graphics.PathParser$PathDataNode):0:0 -> b
    18:47:void androidx.core.graphics.PathParser.nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path):0 -> b
    18:47:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path):0 -> b
    48:958:void androidx.core.graphics.PathParser$PathDataNode.addCommand(android.graphics.Path,float[],char,char,float[]):0:0 -> b
    48:958:void androidx.core.graphics.PathParser$PathDataNode.access$200(android.graphics.Path,float[],char,char,float[]):0 -> b
    48:958:void androidx.core.graphics.PathParser.nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path):0 -> b
    48:958:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path):0 -> b
    959:970:char androidx.core.graphics.PathParser$PathDataNode.access$000(androidx.core.graphics.PathParser$PathDataNode):0:0 -> b
    959:970:void androidx.core.graphics.PathParser.nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path):0 -> b
    959:970:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path):0 -> b
androidx.core.graphics.TypefaceCompat -> w.e:
# {"id":"sourceFile","fileName":"TypefaceCompat.java"}
    androidx.core.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/a;"}
    androidx.collection.LruCache sTypefaceCache -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/d;"}
    9:18:void androidx.core.graphics.TypefaceCompatApi29Impl.<init>():0:0 -> <clinit>
    9:18:void <clinit>():0 -> <clinit>
    19:20:void <clinit>():0:0 -> <clinit>
    21:28:void androidx.core.graphics.TypefaceCompatApi28Impl.<init>():0:0 -> <clinit>
    21:28:void <clinit>():0 -> <clinit>
    29:38:void <clinit>():0:0 -> <clinit>
    39:51:boolean androidx.core.graphics.TypefaceCompatApi24Impl.isUsable():0:0 -> <clinit>
    39:51:void <clinit>():0 -> <clinit>
    52:53:void <clinit>():0:0 -> <clinit>
    54:57:void androidx.core.graphics.TypefaceCompatApi24Impl.<init>():0:0 -> <clinit>
    54:57:void <clinit>():0 -> <clinit>
    58:59:void <clinit>():0:0 -> <clinit>
    60:63:void androidx.core.graphics.TypefaceCompatApi21Impl.<init>():0:0 -> <clinit>
    60:63:void <clinit>():0 -> <clinit>
    64:73:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry.getSystemFontFamilyName():0:0 -> a
    1:1:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lv/f;Landroid/content/res/Resources;ILjava/lang/String;IILm/a0;)Landroid/graphics/Typeface;"}
    2:2:android.graphics.Typeface androidx.core.graphics.TypefaceCompat.getSystemFontFamily(java.lang.String):0:0 -> a
    2:2:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    3:3:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    4:4:int androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry.getFetchStrategy():0:0 -> a
    4:4:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    5:5:int androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry.getTimeout():0:0 -> a
    5:5:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    6:6:android.os.Handler androidx.core.content.res.ResourcesCompat$FontCallback.getHandler(android.os.Handler):0:0 -> a
    6:6:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    7:7:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    8:8:androidx.core.provider.FontRequest androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry.getRequest():0:0 -> a
    8:8:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    9:9:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0:0 -> a
    9:9:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    10:10:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0:0 -> a
    10:10:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    10:10:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    11:11:java.lang.String androidx.core.provider.FontRequestWorker.createCacheId(androidx.core.provider.FontRequest,int):0:0 -> a
    11:11:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    11:11:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    11:11:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    12:12:java.lang.String androidx.core.provider.FontRequest.getId():0:0 -> a
    12:12:java.lang.String androidx.core.provider.FontRequestWorker.createCacheId(androidx.core.provider.FontRequest,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:12:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    12:12:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    12:12:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    13:13:java.lang.String androidx.core.provider.FontRequestWorker.createCacheId(androidx.core.provider.FontRequest,int):0:0 -> a
    13:13:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    13:13:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    13:13:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    14:14:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0:0 -> a
    14:14:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    14:14:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    15:15:void androidx.core.provider.CallbackWithHandler.onTypefaceRetrieved(android.graphics.Typeface):0:0 -> a
    15:15:void androidx.core.provider.CallbackWithHandler.onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
    15:15:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    15:15:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    15:15:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    16:16:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0:0 -> a
    16:16:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    16:16:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    17:17:java.lang.Object androidx.core.provider.RequestExecutor.submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int):0:0 -> a
    17:17:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    17:17:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    17:17:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    18:18:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0:0 -> a
    18:18:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    18:18:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    19:19:java.lang.Object androidx.core.provider.RequestExecutor.submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int):0:0 -> a
    19:19:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    19:19:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    19:19:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    20:20:void androidx.core.provider.CallbackWithHandler.onTypefaceRequestFailed(int):0:0 -> a
    20:20:void androidx.core.provider.CallbackWithHandler.onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
    20:20:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    20:20:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    20:20:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    21:21:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0:0 -> a
    21:21:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    21:21:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    22:22:java.lang.String androidx.core.provider.FontRequestWorker.createCacheId(androidx.core.provider.FontRequest,int):0:0 -> a
    22:22:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
    22:22:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    22:22:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    23:23:java.lang.String androidx.core.provider.FontRequest.getId():0:0 -> a
    23:23:java.lang.String androidx.core.provider.FontRequestWorker.createCacheId(androidx.core.provider.FontRequest,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    23:23:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
    23:23:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    23:23:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    24:24:java.lang.String androidx.core.provider.FontRequestWorker.createCacheId(androidx.core.provider.FontRequest,int):0:0 -> a
    24:24:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
    24:24:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    24:24:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    25:25:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0:0 -> a
    25:25:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    25:25:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    26:26:void androidx.core.provider.CallbackWithHandler.onTypefaceRetrieved(android.graphics.Typeface):0:0 -> a
    26:26:void androidx.core.provider.CallbackWithHandler.onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
    26:26:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
    26:26:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    26:26:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    27:27:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0:0 -> a
    27:27:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    27:27:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    28:28:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> a
    28:28:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    28:28:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    28:28:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    29:29:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0:0 -> a
    29:29:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    29:29:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    30:30:android.os.Handler androidx.core.provider.CalleeHandler.create():0:0 -> a
    30:30:void androidx.core.provider.RequestExecutor.execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer):0 -> a
    30:30:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
    30:30:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    30:30:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    31:31:void androidx.core.provider.RequestExecutor.execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer):0:0 -> a
    31:31:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
    31:31:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    31:31:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    32:32:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0:0 -> a
    32:32:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    32:32:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    33:33:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    1:1:java.lang.String createResourceUid(android.content.res.Resources,int,java.lang.String,int,int):0:0 -> b
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter -> R8$$REMOVED$$CLASS$$46:
# {"id":"sourceFile","fileName":"TypefaceCompat.java"}
androidx.core.graphics.TypefaceCompatApi21Impl -> w.f:
# {"id":"sourceFile","fileName":"TypefaceCompatApi21Impl.java"}
    java.lang.Class sFontFamily -> d
    java.lang.reflect.Constructor sFontFamilyCtor -> e
    java.lang.reflect.Method sAddFontWeightStyle -> f
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> g
    boolean sHasInitBeenCalled -> h
    1:12:java.lang.Object androidx.core.graphics.TypefaceCompatApi21Impl.newFamily():0:0 -> e
    1:12:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lv/g;Landroid/content/res/Resources;I)Landroid/graphics/Typeface;"}
    13:28:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> e
    29:30:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getResourceId():0:0 -> e
    29:30:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    31:44:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> e
    45:46:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getWeight():0:0 -> e
    45:46:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    47:48:boolean androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.isItalic():0:0 -> e
    47:48:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    49:70:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> e
    71:110:android.graphics.Typeface androidx.core.graphics.TypefaceCompatApi21Impl.createFromFamiliesWithDefault(java.lang.Object):0:0 -> e
    71:110:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    111:116:java.lang.Object androidx.core.graphics.TypefaceCompatApi21Impl.newFamily():0:0 -> e
    111:116:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    15:18:android.net.Uri androidx.core.provider.FontsContractCompat$FontInfo.getUri():0:0 -> f
    15:18:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;[La0/j;I)Landroid/graphics/Typeface;"}
    19:32:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    33:74:java.io.File androidx.core.graphics.TypefaceCompatApi21Impl.getFile(android.os.ParcelFileDescriptor):0:0 -> f
    33:74:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    75:131:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    1:1:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean):0:0 -> k
    1:1:void init():0:0 -> l
androidx.core.graphics.TypefaceCompatApi24Impl -> w.g:
# {"id":"sourceFile","fileName":"TypefaceCompatApi24Impl.java"}
    java.lang.Class sFontFamily -> d
    java.lang.reflect.Constructor sFontFamilyCtor -> e
    java.lang.reflect.Method sAddFontWeightStyle -> f
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> g
    1:1:void <clinit>():0:0 -> <clinit>
    7:18:java.lang.Object androidx.core.graphics.TypefaceCompatApi24Impl.newFamily():0:0 -> e
    7:18:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lv/g;Landroid/content/res/Resources;I)Landroid/graphics/Typeface;"}
    19:26:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> e
    27:28:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getResourceId():0:0 -> e
    27:28:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    29:50:java.nio.ByteBuffer androidx.core.graphics.TypefaceCompatUtil.copyToDirectBuffer(android.content.Context,android.content.res.Resources,int):0:0 -> e
    29:50:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    51:88:java.nio.ByteBuffer androidx.core.graphics.TypefaceCompatUtil.mmap(java.io.File):0:0 -> e
    51:88:java.nio.ByteBuffer androidx.core.graphics.TypefaceCompatUtil.copyToDirectBuffer(android.content.Context,android.content.res.Resources,int):0 -> e
    51:88:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    89:94:java.nio.ByteBuffer androidx.core.graphics.TypefaceCompatUtil.copyToDirectBuffer(android.content.Context,android.content.res.Resources,int):0:0 -> e
    89:94:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    95:111:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> e
    112:115:java.nio.ByteBuffer androidx.core.graphics.TypefaceCompatUtil.copyToDirectBuffer(android.content.Context,android.content.res.Resources,int):0:0 -> e
    112:115:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    116:120:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> e
    7:16:java.lang.Object androidx.core.graphics.TypefaceCompatApi24Impl.newFamily():0:0 -> f
    7:16:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;[La0/j;I)Landroid/graphics/Typeface;"}
    17:26:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    27:28:android.net.Uri androidx.core.provider.FontsContractCompat$FontInfo.getUri():0:0 -> f
    27:28:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    29:32:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> f
    29:32:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    33:74:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    1:1:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean):0:0 -> k
    1:1:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object):0:0 -> l
androidx.core.graphics.TypefaceCompatApi26Impl -> w.h:
# {"id":"sourceFile","fileName":"TypefaceCompatApi26Impl.java"}
    java.lang.Class mFontFamily -> i
    java.lang.reflect.Constructor mFontFamilyCtor -> j
    java.lang.reflect.Method mAddFontFromAssetManager -> k
    java.lang.reflect.Method mAddFontFromBuffer -> l
    java.lang.reflect.Method mFreeze -> m
    java.lang.reflect.Method mAbortCreation -> n
    java.lang.reflect.Method mCreateFromFamiliesWithDefault -> o
    1:5:void androidx.core.graphics.TypefaceCompatApi21Impl.<init>():0:0 -> <init>
    1:5:void <init>():0 -> <init>
    6:12:java.lang.Class androidx.core.graphics.TypefaceCompatApi26Impl.obtainFontFamily():0:0 -> <init>
    6:12:void <init>():0 -> <init>
    13:16:java.lang.reflect.Constructor androidx.core.graphics.TypefaceCompatApi26Impl.obtainFontFamilyCtor(java.lang.Class):0:0 -> <init>
    13:16:void <init>():0 -> <init>
    17:28:void <init>():0:0 -> <init>
    29:36:java.lang.reflect.Method androidx.core.graphics.TypefaceCompatApi26Impl.obtainFreezeMethod(java.lang.Class):0:0 -> <init>
    29:36:void <init>():0 -> <init>
    37:40:java.lang.reflect.Method androidx.core.graphics.TypefaceCompatApi26Impl.obtainAbortCreationMethod(java.lang.Class):0:0 -> <init>
    37:40:void <init>():0 -> <init>
    41:89:void <init>():0:0 -> <init>
    29:30:java.lang.String androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getFileName():0:0 -> e
    29:30:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lv/g;Landroid/content/res/Resources;I)Landroid/graphics/Typeface;"}
    31:32:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getTtcIndex():0:0 -> e
    31:32:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    33:34:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getWeight():0:0 -> e
    33:34:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    35:36:boolean androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.isItalic():0:0 -> e
    35:36:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    37:70:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> e
    21:24:android.net.Uri androidx.core.provider.FontsContractCompat$FontInfo.getUri():0:0 -> f
    21:24:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;[La0/j;I)Landroid/graphics/Typeface;"}
    25:45:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    46:47:int androidx.core.provider.FontsContractCompat$FontInfo.getWeight():0:0 -> f
    46:47:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    48:51:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    52:53:boolean androidx.core.provider.FontsContractCompat$FontInfo.isItalic():0:0 -> f
    52:53:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    54:76:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    77:88:java.util.Map androidx.core.graphics.TypefaceCompatUtil.readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal):0:0 -> f
    77:88:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    89:93:int androidx.core.provider.FontsContractCompat$FontInfo.getResultCode():0:0 -> f
    89:93:java.util.Map androidx.core.graphics.TypefaceCompatUtil.readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal):0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    89:93:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    94:116:java.util.Map androidx.core.graphics.TypefaceCompatUtil.readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal):0:0 -> f
    94:116:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    117:130:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    131:132:android.net.Uri androidx.core.provider.FontsContractCompat$FontInfo.getUri():0:0 -> f
    131:132:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    133:141:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    142:143:int androidx.core.provider.FontsContractCompat$FontInfo.getTtcIndex():0:0 -> f
    142:143:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    144:145:int androidx.core.provider.FontsContractCompat$FontInfo.getWeight():0:0 -> f
    144:145:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    146:154:boolean androidx.core.provider.FontsContractCompat$FontInfo.isItalic():0:0 -> f
    146:154:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    155:194:boolean androidx.core.graphics.TypefaceCompatApi26Impl.addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int):0:0 -> f
    155:194:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    195:223:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    1:1:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int):0:0 -> h
    1:1:void abortCreation(java.lang.Object):0:0 -> m
    1:1:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]):0:0 -> n
    1:1:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object):0:0 -> o
    1:1:boolean freeze(java.lang.Object):0:0 -> p
    1:1:boolean isFontFamilyPrivateAPIAvailable():0:0 -> q
    1:1:java.lang.Object newFamily():0:0 -> r
    1:1:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class):0:0 -> s
    1:1:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class):0:0 -> t
    1:1:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class):0:0 -> u
androidx.core.graphics.TypefaceCompatApi28Impl -> w.i:
# {"id":"sourceFile","fileName":"TypefaceCompatApi28Impl.java"}
    1:1:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object):0:0 -> o
    1:1:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class):0:0 -> u
androidx.core.graphics.TypefaceCompatApi29Impl -> w.j:
# {"id":"sourceFile","fileName":"TypefaceCompatApi29Impl.java"}
    2:3:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry.getEntries():0:0 -> e
    2:3:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lv/g;Landroid/content/res/Resources;I)Landroid/graphics/Typeface;"}
    4:12:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> e
    13:14:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getResourceId():0:0 -> e
    13:14:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:17:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> e
    18:19:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getWeight():0:0 -> e
    18:19:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    20:23:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> e
    24:25:boolean androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.isItalic():0:0 -> e
    24:25:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    26:29:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> e
    30:31:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getTtcIndex():0:0 -> e
    30:31:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    32:35:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> e
    36:37:java.lang.String androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getVariationSettings():0:0 -> e
    36:37:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> e
    38:89:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> e
    13:16:android.net.Uri androidx.core.provider.FontsContractCompat$FontInfo.getUri():0:0 -> f
    13:16:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;[La0/j;I)Landroid/graphics/Typeface;"}
    17:33:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    34:35:int androidx.core.provider.FontsContractCompat$FontInfo.getWeight():0:0 -> f
    34:35:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    36:39:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    40:41:boolean androidx.core.provider.FontsContractCompat$FontInfo.isItalic():0:0 -> f
    40:41:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    42:45:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    46:47:int androidx.core.provider.FontsContractCompat$FontInfo.getTtcIndex():0:0 -> f
    46:47:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> f
    48:112:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> f
    1:1:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream):0:0 -> g
    1:1:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int):0:0 -> h
    1:1:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[La0/j;)La0/j;"}
    1:1:android.graphics.fonts.Font findBaseFont(android.graphics.fonts.FontFamily,int):0:0 -> k
    1:1:int getMatchScore(android.graphics.fonts.FontStyle,android.graphics.fonts.FontStyle):0:0 -> l
androidx.core.graphics.TypefaceCompatBaseImpl -> R8$$REMOVED$$CLASS$$48:
# {"id":"sourceFile","fileName":"TypefaceCompatBaseImpl.java"}
androidx.core.graphics.TypefaceCompatBaseImpl$2 -> R8$$REMOVED$$CLASS$$47:
# {"id":"sourceFile","fileName":"TypefaceCompatBaseImpl.java"}
androidx.core.graphics.TypefaceCompatUtil -> R8$$REMOVED$$CLASS$$49:
# {"id":"sourceFile","fileName":"TypefaceCompatUtil.java"}
androidx.core.graphics.drawable.DrawableCompat -> R8$$REMOVED$$CLASS$$50:
# {"id":"sourceFile","fileName":"DrawableCompat.java"}
androidx.core.graphics.drawable.DrawableCompat$Api21Impl -> x.a:
# {"id":"sourceFile","fileName":"DrawableCompat.java"}
    1:1:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme):0:0 -> a
    1:1:boolean canApplyTheme(android.graphics.drawable.Drawable):0:0 -> b
    1:1:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable):0:0 -> c
    1:1:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> d
    1:1:void setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> e
    1:1:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> f
    1:1:void setTint(android.graphics.drawable.Drawable,int):0:0 -> g
    1:1:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> h
    1:1:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> i
androidx.core.graphics.drawable.DrawableCompat$Api23Impl -> x.b:
# {"id":"sourceFile","fileName":"DrawableCompat.java"}
    1:1:int getLayoutDirection(android.graphics.drawable.Drawable):0:0 -> a
    1:1:boolean setLayoutDirection(android.graphics.drawable.Drawable,int):0:0 -> b
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    int mType -> a
    java.lang.Object mObj1 -> b
    byte[] mData -> c
    android.os.Parcelable mParcelable -> d
    int mInt1 -> e
    int mInt2 -> f
    android.content.res.ColorStateList mTintList -> g
    android.graphics.PorterDuff$Mode mTintMode -> h
    java.lang.String mTintModeStr -> i
    java.lang.String mString1 -> j
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> k
    45:131:java.lang.String toString():0:0 -> toString
    132:176:int androidx.core.graphics.drawable.IconCompat$Api23Impl.getResId(java.lang.Object):0:0 -> toString
    132:176:int getResId():0 -> toString
    132:176:java.lang.String toString():0 -> toString
    177:192:java.lang.String toString():0:0 -> toString
    193:214:int getResId():0:0 -> toString
    193:214:java.lang.String toString():0 -> toString
    215:284:java.lang.String toString():0:0 -> toString
androidx.core.graphics.drawable.IconCompat$Api23Impl -> R8$$REMOVED$$CLASS$$51:
# {"id":"sourceFile","fileName":"IconCompat.java"}
androidx.core.graphics.drawable.IconCompat$Api28Impl -> x.c:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    1:1:int getResId(java.lang.Object):0:0 -> a
    1:1:java.lang.String getResPackage(java.lang.Object):0:0 -> b
    1:1:int getType(java.lang.Object):0:0 -> c
    1:1:android.net.Uri getUri(java.lang.Object):0:0 -> d
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
# {"id":"sourceFile","fileName":"IconCompatParcelizer.java"}
    9:18:int androidx.versionedparcelable.VersionedParcel.readInt(int,int):0:0 -> read
    9:18:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)Landroidx/core/graphics/drawable/IconCompat;"}
    19:29:int androidx.versionedparcelable.VersionedParcelParcel.readInt():0:0 -> read
    19:29:int androidx.versionedparcelable.VersionedParcel.readInt(int,int):0 -> read
    19:29:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    30:39:byte[] androidx.versionedparcelable.VersionedParcel.readByteArray(byte[],int):0:0 -> read
    30:39:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    40:60:byte[] androidx.versionedparcelable.VersionedParcelParcel.readByteArray():0:0 -> read
    40:60:byte[] androidx.versionedparcelable.VersionedParcel.readByteArray(byte[],int):0 -> read
    40:60:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    61:69:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    70:79:int androidx.versionedparcelable.VersionedParcel.readInt(int,int):0:0 -> read
    70:79:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    80:90:int androidx.versionedparcelable.VersionedParcelParcel.readInt():0:0 -> read
    80:90:int androidx.versionedparcelable.VersionedParcel.readInt(int,int):0 -> read
    80:90:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    91:100:int androidx.versionedparcelable.VersionedParcel.readInt(int,int):0:0 -> read
    91:100:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    101:111:int androidx.versionedparcelable.VersionedParcelParcel.readInt():0:0 -> read
    101:111:int androidx.versionedparcelable.VersionedParcel.readInt(int,int):0 -> read
    101:111:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    112:122:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    123:132:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0:0 -> read
    123:132:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    133:144:java.lang.String androidx.versionedparcelable.VersionedParcelParcel.readString():0:0 -> read
    133:144:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0 -> read
    133:144:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    145:153:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0:0 -> read
    145:153:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    154:163:java.lang.String androidx.versionedparcelable.VersionedParcelParcel.readString():0:0 -> read
    154:163:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0 -> read
    154:163:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    164:250:void androidx.core.graphics.drawable.IconCompat.onPostParceling():0:0 -> read
    164:250:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    4:5:void androidx.core.graphics.drawable.IconCompat.onPreParceling(boolean):0:0 -> write
    4:5:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/drawable/IconCompat;Lr0/a;)V"}
    6:64:void androidx.core.graphics.drawable.IconCompat.onPreParceling(boolean):0:0 -> write
    6:64:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    65:70:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    71:76:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    71:76:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    77:81:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> write
    77:81:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0 -> write
    77:81:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    82:86:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    87:92:void androidx.versionedparcelable.VersionedParcel.writeByteArray(byte[],int):0:0 -> write
    87:92:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    93:101:void androidx.versionedparcelable.VersionedParcelParcel.writeByteArray(byte[]):0:0 -> write
    93:101:void androidx.versionedparcelable.VersionedParcel.writeByteArray(byte[],int):0 -> write
    93:101:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    102:107:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    108:113:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    108:113:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    114:118:void androidx.versionedparcelable.VersionedParcelParcel.writeParcelable(android.os.Parcelable):0:0 -> write
    114:118:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0 -> write
    114:118:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    119:123:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    124:129:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    124:129:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    130:134:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> write
    130:134:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0 -> write
    130:134:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    135:139:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    140:145:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    140:145:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    146:150:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> write
    146:150:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0 -> write
    146:150:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    151:155:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    156:161:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    156:161:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    162:166:void androidx.versionedparcelable.VersionedParcelParcel.writeParcelable(android.os.Parcelable):0:0 -> write
    162:166:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0 -> write
    162:166:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    167:171:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    172:177:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0:0 -> write
    172:177:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    178:182:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> write
    178:182:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0 -> write
    178:182:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    183:188:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    189:193:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0:0 -> write
    189:193:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    194:200:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> write
    194:200:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0 -> write
    194:200:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
androidx.core.graphics.drawable.TintAwareDrawable -> x.d:
# {"id":"sourceFile","fileName":"TintAwareDrawable.java"}
androidx.core.graphics.drawable.WrappedDrawable -> x.e:
# {"id":"sourceFile","fileName":"WrappedDrawable.java"}
androidx.core.graphics.drawable.WrappedDrawableApi14 -> x.f:
# {"id":"sourceFile","fileName":"WrappedDrawableApi14.java"}
    int mCurrentColor -> b
    android.graphics.PorterDuff$Mode mCurrentMode -> c
    boolean mColorFilterSet -> d
    androidx.core.graphics.drawable.WrappedDrawableState mState -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/h;"}
    boolean mMutated -> f
    android.graphics.drawable.Drawable mDrawable -> g
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.graphics.drawable.Drawable):0:0 -> <init>
    2:2:void androidx.core.graphics.drawable.WrappedDrawableApi14.updateLocalState(android.content.res.Resources):0:0 -> <init>
    2:2:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/h;Landroid/content/res/Resources;)V"}
    boolean isCompatTintEnabled() -> a
    5:33:void androidx.core.graphics.drawable.WrappedDrawableState.<init>(androidx.core.graphics.drawable.WrappedDrawableState):0:0 -> b
    5:33:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState():0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/h;"}
    1:1:void setWrappedDrawable(android.graphics.drawable.Drawable):0:0 -> c
    1:1:boolean updateTint(int[]):0:0 -> d
    1:1:void draw(android.graphics.Canvas):0:0 -> draw
    1:1:int getChangingConfigurations():0:0 -> getChangingConfigurations
    5:8:boolean androidx.core.graphics.drawable.WrappedDrawableState.canConstantState():0:0 -> getConstantState
    5:8:android.graphics.drawable.Drawable$ConstantState getConstantState():0 -> getConstantState
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:19:android.graphics.drawable.Drawable$ConstantState getConstantState():0:0 -> getConstantState
    1:1:android.graphics.drawable.Drawable getCurrent():0:0 -> getCurrent
    1:1:int getIntrinsicHeight():0:0 -> getIntrinsicHeight
    1:1:int getIntrinsicWidth():0:0 -> getIntrinsicWidth
    1:1:int getLayoutDirection():0:0 -> getLayoutDirection
    1:1:int getMinimumHeight():0:0 -> getMinimumHeight
    1:1:int getMinimumWidth():0:0 -> getMinimumWidth
    1:1:int getOpacity():0:0 -> getOpacity
    1:1:boolean getPadding(android.graphics.Rect):0:0 -> getPadding
    1:1:int[] getState():0:0 -> getState
    1:1:android.graphics.Region getTransparentRegion():0:0 -> getTransparentRegion
    1:1:void invalidateDrawable(android.graphics.drawable.Drawable):0:0 -> invalidateDrawable
    3:7:boolean androidx.core.graphics.drawable.DrawableCompat.isAutoMirrored(android.graphics.drawable.Drawable):0:0 -> isAutoMirrored
    3:7:boolean isAutoMirrored():0 -> isAutoMirrored
    1:1:boolean isStateful():0:0 -> isStateful
    1:1:void jumpToCurrentState():0:0 -> jumpToCurrentState
    1:1:android.graphics.drawable.Drawable mutate():0:0 -> mutate
    1:1:void onBoundsChange(android.graphics.Rect):0:0 -> onBoundsChange
    9:77:boolean androidx.core.graphics.drawable.DrawableCompat.setLayoutDirection(android.graphics.drawable.Drawable,int):0:0 -> onLayoutDirectionChanged
    9:77:boolean onLayoutDirectionChanged(int):0 -> onLayoutDirectionChanged
    1:1:boolean onLevelChange(int):0:0 -> onLevelChange
    1:1:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long):0:0 -> scheduleDrawable
    1:1:void setAlpha(int):0:0 -> setAlpha
    3:6:void androidx.core.graphics.drawable.DrawableCompat.setAutoMirrored(android.graphics.drawable.Drawable,boolean):0:0 -> setAutoMirrored
    3:6:void setAutoMirrored(boolean):0 -> setAutoMirrored
    1:1:void setChangingConfigurations(int):0:0 -> setChangingConfigurations
    1:1:void setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
    1:1:void setDither(boolean):0:0 -> setDither
    1:1:void setFilterBitmap(boolean):0:0 -> setFilterBitmap
    1:1:boolean setState(int[]):0:0 -> setState
    1:1:void setTint(int):0:0 -> setTint
    7:10:int[] androidx.core.graphics.drawable.WrappedDrawableApi14.getState():0:0 -> setTintList
    7:10:void setTintList(android.content.res.ColorStateList):0 -> setTintList
    11:14:void setTintList(android.content.res.ColorStateList):0:0 -> setTintList
    7:10:int[] androidx.core.graphics.drawable.WrappedDrawableApi14.getState():0:0 -> setTintMode
    7:10:void setTintMode(android.graphics.PorterDuff$Mode):0 -> setTintMode
    11:14:void setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    1:1:boolean setVisible(boolean,boolean):0:0 -> setVisible
    1:1:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable):0:0 -> unscheduleDrawable
androidx.core.graphics.drawable.WrappedDrawableApi21 -> x.g:
# {"id":"sourceFile","fileName":"WrappedDrawableApi21.java"}
    java.lang.reflect.Method sIsProjectedDrawableMethod -> i
    1:1:boolean isCompatTintEnabled():0:0 -> a
    1:1:void findAndCacheIsProjectedDrawableMethod():0:0 -> e
    1:1:android.graphics.Rect getDirtyBounds():0:0 -> getDirtyBounds
    1:1:void getOutline(android.graphics.Outline):0:0 -> getOutline
    1:1:boolean isProjected():0:0 -> isProjected
    1:1:void setHotspot(float,float):0:0 -> setHotspot
    1:1:void setHotspotBounds(int,int,int,int):0:0 -> setHotspotBounds
    1:1:boolean setState(int[]):0:0 -> setState
    1:1:void setTint(int):0:0 -> setTint
    1:1:void setTintList(android.content.res.ColorStateList):0:0 -> setTintList
    1:1:void setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> x.h:
# {"id":"sourceFile","fileName":"WrappedDrawableState.java"}
    int mChangingConfigurations -> a
    android.graphics.drawable.Drawable$ConstantState mDrawableState -> b
    android.content.res.ColorStateList mTint -> c
    android.graphics.PorterDuff$Mode mTintMode -> d
    1:1:int getChangingConfigurations():0:0 -> getChangingConfigurations
    1:1:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    2:2:void androidx.core.graphics.drawable.WrappedDrawableApi21.<init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources):0:0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0 -> newDrawable
androidx.core.internal.view.SupportMenu -> y.a:
# {"id":"sourceFile","fileName":"SupportMenu.java"}
androidx.core.internal.view.SupportMenuItem -> y.b:
# {"id":"sourceFile","fileName":"SupportMenuItem.java"}
    android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Ly/b;"}
    android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Ly/b;"}
androidx.core.os.TraceCompat -> z.a:
# {"id":"sourceFile","fileName":"TraceCompat.java"}
    int $r8$clinit -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void <clinit>():0:0 -> <clinit>
androidx.core.provider.CallbackWithHandler -> R8$$REMOVED$$CLASS$$53:
# {"id":"sourceFile","fileName":"CallbackWithHandler.java"}
androidx.core.provider.CallbackWithHandler$1 -> R8$$REMOVED$$CLASS$$52:
# {"id":"sourceFile","fileName":"CallbackWithHandler.java"}
androidx.core.provider.CallbackWithHandler$2 -> a0.a:
# {"id":"sourceFile","fileName":"CallbackWithHandler.java"}
    androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/a;"}
    1:1:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/a;I)V"}
    3:8:void androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter.onTypefaceRequestFailed(int):0:0 -> run
    3:8:void run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:12:void androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter.onTypefaceRequestFailed(int):0:0 -> run
    9:12:void run():0 -> run
androidx.core.provider.CalleeHandler -> R8$$REMOVED$$CLASS$$54:
# {"id":"sourceFile","fileName":"CalleeHandler.java"}
androidx.core.provider.FontProvider -> a0.d:
# {"id":"sourceFile","fileName":"FontProvider.java"}
    java.util.Comparator sByteArrayComparator -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"La0/b;"}
    3:8:void androidx.core.provider.FontProvider$$InternalSyntheticLambda$3$dea2eb8be429cfd62f5acef186358e480674e03c0f86125880269ad68ae94a4b$0.<init>():0:0 -> <clinit>
    3:8:void <clinit>():0 -> <clinit>
    14:18:java.lang.String androidx.core.provider.FontRequest.getProviderAuthority():0:0 -> a
    14:18:android.content.pm.ProviderInfo androidx.core.provider.FontProvider.getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:18:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lm/r;)La0/i;"}
    19:26:android.content.pm.ProviderInfo androidx.core.provider.FontProvider.getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    19:26:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    27:30:java.lang.String androidx.core.provider.FontRequest.getProviderPackage():0:0 -> a
    27:30:android.content.pm.ProviderInfo androidx.core.provider.FontProvider.getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    27:30:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    31:46:android.content.pm.ProviderInfo androidx.core.provider.FontProvider.getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    31:46:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    47:69:java.util.List androidx.core.provider.FontProvider.convertToByteArrayList(android.content.pm.Signature[]):0:0 -> a
    47:69:android.content.pm.ProviderInfo androidx.core.provider.FontProvider.getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    47:69:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    70:72:android.content.pm.ProviderInfo androidx.core.provider.FontProvider.getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    70:72:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    73:79:java.util.List androidx.core.provider.FontRequest.getCertificates():0:0 -> a
    73:79:java.util.List androidx.core.provider.FontProvider.getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    73:79:android.content.pm.ProviderInfo androidx.core.provider.FontProvider.getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    73:79:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    80:81:int androidx.core.provider.FontRequest.getCertificatesArrayResId():0:0 -> a
    80:81:java.util.List androidx.core.provider.FontProvider.getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    80:81:android.content.pm.ProviderInfo androidx.core.provider.FontProvider.getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    80:81:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    82:86:java.util.List androidx.core.provider.FontProvider.getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    82:86:android.content.pm.ProviderInfo androidx.core.provider.FontProvider.getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    82:86:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    87:107:android.content.pm.ProviderInfo androidx.core.provider.FontProvider.getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    87:107:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    108:153:boolean androidx.core.provider.FontProvider.equalsByteArrayList(java.util.List,java.util.List):0:0 -> a
    108:153:android.content.pm.ProviderInfo androidx.core.provider.FontProvider.getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    108:153:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    154:159:androidx.core.provider.FontsContractCompat$FontFamilyResult androidx.core.provider.FontsContractCompat$FontFamilyResult.create(int,androidx.core.provider.FontsContractCompat$FontInfo[]):0:0 -> a
    154:159:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    160:173:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0:0 -> a
    174:226:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    174:226:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    227:268:androidx.core.provider.FontProvider$ContentQueryWrapper androidx.core.provider.FontProvider$ContentQueryWrapper.make(android.content.Context,android.net.Uri):0:0 -> a
    227:268:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0 -> a
    227:268:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    269:311:java.lang.String androidx.core.provider.FontRequest.getQuery():0:0 -> a
    269:311:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    269:311:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    312:343:android.database.Cursor androidx.core.provider.FontProvider$ContentQueryWrapperApi24Impl.query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal):0:0 -> a
    312:343:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0 -> a
    312:343:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    344:356:android.database.Cursor androidx.core.provider.FontProvider$ContentQueryWrapperApi16Impl.query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal):0:0 -> a
    344:356:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0 -> a
    344:356:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    357:479:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    357:479:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    480:490:androidx.core.provider.FontsContractCompat$FontInfo androidx.core.provider.FontsContractCompat$FontInfo.create(android.net.Uri,int,int,boolean,int):0:0 -> a
    480:490:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0 -> a
    480:490:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    491:516:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    491:516:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    517:523:void androidx.core.provider.FontProvider$ContentQueryWrapperApi24Impl.close():0:0 -> a
    517:523:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0 -> a
    517:523:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    524:529:void androidx.core.provider.FontProvider$ContentQueryWrapperApi16Impl.close():0:0 -> a
    524:529:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0 -> a
    524:529:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    530:535:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    530:535:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    536:549:androidx.core.provider.FontsContractCompat$FontFamilyResult androidx.core.provider.FontsContractCompat$FontFamilyResult.create(int,androidx.core.provider.FontsContractCompat$FontInfo[]):0:0 -> a
    536:549:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    550:561:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    550:561:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    562:567:void androidx.core.provider.FontProvider$ContentQueryWrapperApi24Impl.close():0:0 -> a
    562:567:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0 -> a
    562:567:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    568:570:void androidx.core.provider.FontProvider$ContentQueryWrapperApi16Impl.close():0:0 -> a
    568:570:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0 -> a
    568:570:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    571:571:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    571:571:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    572:620:android.content.pm.ProviderInfo androidx.core.provider.FontProvider.getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    572:620:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
androidx.core.provider.FontProvider$$ExternalSyntheticLambda0 -> a0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    5:31:int androidx.core.provider.FontProvider.lambda$static$0(byte[],byte[]):0:0 -> compare
    5:31:int androidx.core.provider.FontProvider$$InternalSyntheticLambda$3$dea2eb8be429cfd62f5acef186358e480674e03c0f86125880269ad68ae94a4b$0.compare(java.lang.Object,java.lang.Object):0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.provider.FontProvider$ContentQueryWrapper -> R8$$REMOVED$$CLASS$$55:
# {"id":"sourceFile","fileName":"FontProvider.java"}
androidx.core.provider.FontProvider$ContentQueryWrapperApi16Impl -> a0.c:
# {"id":"sourceFile","fileName":"FontProvider.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.ContentProviderClient mClient -> b
    6:19:void androidx.core.provider.FontProvider$ContentQueryWrapperApi16Impl.<init>(android.content.Context,android.net.Uri):0:0 -> <init>
    6:19:void $r8$init$synthetic(android.content.Context,android.net.Uri,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    20:33:void androidx.core.provider.FontProvider$ContentQueryWrapperApi24Impl.<init>(android.content.Context,android.net.Uri):0:0 -> <init>
    20:33:void $r8$init$synthetic(android.content.Context,android.net.Uri,int):0 -> <init>
androidx.core.provider.FontProvider$ContentQueryWrapperApi24Impl -> R8$$REMOVED$$CLASS$$56:
# {"id":"sourceFile","fileName":"FontProvider.java"}
androidx.core.provider.FontRequest -> R8$$REMOVED$$CLASS$$57:
# {"id":"sourceFile","fileName":"FontRequest.java"}
androidx.core.provider.FontRequestWorker -> a0.h:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    androidx.collection.LruCache sTypefaceCache -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/d;"}
    java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/concurrent/ThreadPoolExecutor;"}
    java.lang.Object LOCK -> c
    androidx.collection.SimpleArrayMap PENDING_REPLIES -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/i;"}
    10:11:java.util.concurrent.ThreadPoolExecutor androidx.core.provider.RequestExecutor.createDefaultExecutor(java.lang.String,int,int):0:0 -> <clinit>
    10:11:void <clinit>():0 -> <clinit>
    12:22:void androidx.core.provider.RequestExecutor$DefaultThreadFactory.<init>(java.lang.String,int):0:0 -> <clinit>
    12:22:java.util.concurrent.ThreadPoolExecutor androidx.core.provider.RequestExecutor.createDefaultExecutor(java.lang.String,int,int):0 -> <clinit>
    12:22:void <clinit>():0 -> <clinit>
    23:46:java.util.concurrent.ThreadPoolExecutor androidx.core.provider.RequestExecutor.createDefaultExecutor(java.lang.String,int,int):0:0 -> <clinit>
    23:46:void <clinit>():0 -> <clinit>
    47:61:void <clinit>():0:0 -> <clinit>
    21:24:int androidx.core.provider.FontsContractCompat$FontFamilyResult.getStatusCode():0:0 -> a
    21:24:int androidx.core.provider.FontRequestWorker.getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    21:24:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/content/Context;Lm/r;I)La0/g;"}
    25:50:int androidx.core.provider.FontRequestWorker.getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult):0:0 -> a
    25:50:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0 -> a
    51:65:int androidx.core.provider.FontsContractCompat$FontInfo.getResultCode():0:0 -> a
    51:65:int androidx.core.provider.FontRequestWorker.getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    51:65:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0 -> a
    66:73:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0:0 -> a
    74:81:android.graphics.Typeface androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> a
    74:81:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0 -> a
    82:103:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0:0 -> a
androidx.core.provider.FontRequestWorker$1 -> a0.e:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String val$id -> b
    android.content.Context val$context -> c
    androidx.core.provider.FontRequest val$request -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/r;"}
    int val$style -> e
    1:14:void androidx.core.provider.FontRequestWorker$1.<init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0:0 -> <init>
    1:14:void $r8$init$synthetic(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/content/Context;Lm/r;II)V"}
    18:29:androidx.core.provider.FontRequestWorker$TypefaceResult androidx.core.provider.FontRequestWorker$3.call():0:0 -> call
    18:29:java.lang.Object androidx.core.provider.FontRequestWorker$3.call():0 -> call
    18:29:java.lang.Object call$bridge():0 -> call
      # {"id":"com.android.tools.r8.synthesized"}
    30:37:androidx.core.provider.FontRequestWorker$TypefaceResult androidx.core.provider.FontRequestWorker$1.call():0:0 -> call
    30:37:java.lang.Object androidx.core.provider.FontRequestWorker$3.call():0 -> call
    30:37:java.lang.Object call$bridge():0 -> call
    38:49:androidx.core.provider.FontRequestWorker$TypefaceResult androidx.core.provider.FontRequestWorker$3.call():0:0 -> call
    38:49:java.lang.Object androidx.core.provider.FontRequestWorker$1.call():0 -> call
    38:49:java.lang.Object call$bridge():0 -> call
    50:54:androidx.core.provider.FontRequestWorker$TypefaceResult androidx.core.provider.FontRequestWorker$1.call():0:0 -> call
    50:54:java.lang.Object androidx.core.provider.FontRequestWorker$1.call():0 -> call
    50:54:java.lang.Object call$bridge():0 -> call
androidx.core.provider.FontRequestWorker$2 -> a0.f:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.core.provider.CallbackWithHandler val$callback -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:8:void androidx.core.provider.FontRequestWorker$2.<init>(androidx.core.provider.CallbackWithHandler):0:0 -> <init>
    1:8:void $r8$init$synthetic(java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)V"}
    6:15:void androidx.core.provider.FontRequestWorker$4.accept(androidx.core.provider.FontRequestWorker$TypefaceResult):0:0 -> a
    6:15:void accept$bridge(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La0/g;)V"}
    16:19:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> a
    16:19:void androidx.core.provider.FontRequestWorker$4.accept(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:19:void accept$bridge(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
    20:61:void androidx.core.provider.FontRequestWorker$4.accept(androidx.core.provider.FontRequestWorker$TypefaceResult):0:0 -> a
    20:61:void accept$bridge(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
    62:76:void androidx.core.provider.FontRequestWorker$2.accept(androidx.core.provider.FontRequestWorker$TypefaceResult):0:0 -> a
    62:76:void accept$bridge(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
    6:11:void androidx.core.provider.FontRequestWorker$4.accept(java.lang.Object):0:0 -> b
    6:11:void accept$bridge(java.lang.Object):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    12:18:void androidx.core.provider.FontRequestWorker$2.accept(java.lang.Object):0:0 -> b
    12:18:void accept$bridge(java.lang.Object):0 -> b
androidx.core.provider.FontRequestWorker$3 -> R8$$REMOVED$$CLASS$$58:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
androidx.core.provider.FontRequestWorker$4 -> R8$$REMOVED$$CLASS$$59:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
androidx.core.provider.FontRequestWorker$TypefaceResult -> a0.g:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    android.graphics.Typeface mTypeface -> a
    int mResult -> b
    1:1:void <init>(int):0:0 -> <init>
    2:2:void <init>(android.graphics.Typeface):0:0 -> <init>
androidx.core.provider.FontsContractCompat -> R8$$REMOVED$$CLASS$$61:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
androidx.core.provider.FontsContractCompat$FontFamilyResult -> a0.i:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
    int mStatusCode -> a
    androidx.core.provider.FontsContractCompat$FontInfo[] mFonts -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Ljava/lang/Object;"}
    1:1:void androidx.core.util.Pools$SimplePool.<init>(int):0:0 -> <init>
    2:2:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[La0/j;)V"}
    1:1:java.lang.Object androidx.core.util.Pools$SimplePool.acquire():0:0 -> a
    15:29:boolean androidx.core.util.Pools$SimplePool.isInPool(java.lang.Object):0:0 -> b
    15:29:boolean androidx.core.util.Pools$SimplePool.release(java.lang.Object):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)V"}
    30:50:boolean androidx.core.util.Pools$SimplePool.release(java.lang.Object):0:0 -> b
androidx.core.provider.FontsContractCompat$FontInfo -> a0.j:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
    android.net.Uri mUri -> a
    int mTtcIndex -> b
    int mWeight -> c
    boolean mItalic -> d
    int mResultCode -> e
    4:17:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> <init>
    4:17:void <init>(android.net.Uri,int,int,boolean,int):0 -> <init>
androidx.core.provider.FontsContractCompat$FontRequestCallback -> R8$$REMOVED$$CLASS$$60:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
androidx.core.provider.RequestExecutor -> R8$$REMOVED$$CLASS$$64:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
androidx.core.provider.RequestExecutor$DefaultThreadFactory -> a0.l:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    java.lang.String mThreadName -> a
    int mPriority -> b
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread -> a0.k:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    int mPriority -> a
    1:1:void <init>(java.lang.Runnable,java.lang.String,int):0:0 -> <init>
    1:1:void run():0:0 -> run
androidx.core.provider.RequestExecutor$ReplyRunnable -> R8$$REMOVED$$CLASS$$63:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
androidx.core.provider.RequestExecutor$ReplyRunnable$1 -> R8$$REMOVED$$CLASS$$62:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
androidx.core.text.PrecomputedTextCompat -> b0.e:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
androidx.core.text.PrecomputedTextCompat$Params -> b0.d:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
    android.text.TextPaint mPaint -> a
    android.text.TextDirectionHeuristic mTextDir -> b
    int mBreakStrategy -> c
    int mHyphenationFrequency -> d
    1:1:void <init>(android.text.PrecomputedText$Params):0:0 -> <init>
    2:2:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int):0:0 -> <init>
    19:29:int androidx.core.text.PrecomputedTextCompat$Params.getBreakStrategy():0:0 -> equals
    19:29:boolean androidx.core.text.PrecomputedTextCompat$Params.equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> equals
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    19:29:boolean equals(java.lang.Object):0 -> equals
    30:40:boolean androidx.core.text.PrecomputedTextCompat$Params.equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> equals
    30:40:boolean equals(java.lang.Object):0 -> equals
    41:42:android.text.TextPaint androidx.core.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> equals
    41:42:boolean androidx.core.text.PrecomputedTextCompat$Params.equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> equals
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    41:42:boolean equals(java.lang.Object):0 -> equals
    43:188:boolean androidx.core.text.PrecomputedTextCompat$Params.equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> equals
    43:188:boolean equals(java.lang.Object):0 -> equals
    189:195:boolean equals(java.lang.Object):0:0 -> equals
    122:128:int androidx.core.util.ObjectsCompat.hash(java.lang.Object[]):0:0 -> hashCode
    122:128:int hashCode():0 -> hashCode
    129:218:int hashCode():0:0 -> hashCode
    219:223:int androidx.core.util.ObjectsCompat.hash(java.lang.Object[]):0:0 -> hashCode
    219:223:int hashCode():0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline0 -> b0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$2.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.appcompat.widget.ListPopupWindow$$InternalSyntheticApiModelOutline$2$21103ff2487b251c5b41d517e3ebcdf028dd53396c0fab7802d25408dd347f10$0.m(android.widget.PopupWindow,android.view.View,int,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/x;Landroid/view/View;IZ)I"}
    1:1:android.content.Context androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper$$InternalSyntheticApiModelOutline$2$cb5cae3fa2bc2f683aac30a765a66d90fae1498f4b209d97105f03875c259c9b$0.m(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.LocaleList androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$07a33788f0340d46167a52a800a185e7f3ff39fe498d2f890acfcd77d2b8ff76$0.m(android.text.TextPaint):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.LocaleList androidx.appcompat.widget.AppCompatTextHelper$$InternalSyntheticApiModelOutline$1$e702ce2374dd981640d32b7679bc04b975fdf1223c5b2cf262102c929108964a$1.m(java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$11.m():0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$3.m(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$5.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.appcompat.widget.AppCompatTextHelper$$InternalSyntheticApiModelOutline$1$e702ce2374dd981640d32b7679bc04b975fdf1223c5b2cf262102c929108964a$2.m(android.widget.TextView,android.os.LocaleList):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$d36eb61e12efd34cb463dc67f31f89fb064052a39bbf69e4e2e92a554d81ef48$2.m(android.os.LocaleList,java.lang.Object):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$102b0548548c42ffa95c6107a65d0936a5d01aeddfccc6b5671a1e61291c1982$0.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline1 -> b0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.appcompat.widget.AppCompatTextHelper$$InternalSyntheticApiModelOutline$1$e702ce2374dd981640d32b7679bc04b975fdf1223c5b2cf262102c929108964a$3.m(android.widget.TextView):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace$Named io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$0.m():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$1.m(android.graphics.ColorSpace$Named):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$12.m():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.textclassifier.TextClassificationManager androidx.appcompat.widget.AppCompatTextClassifierHelper$$InternalSyntheticApiModelOutline$1$3cbd53b0c1962dafdf7c00c0747e89eecc2f0594d722a0b0284c62cf0c2127bd$2.m(java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.textclassifier.TextClassifier androidx.appcompat.widget.AppCompatTextClassifierHelper$$InternalSyntheticApiModelOutline$1$3cbd53b0c1962dafdf7c00c0747e89eecc2f0594d722a0b0284c62cf0c2127bd$4.m():0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.textclassifier.TextClassifier androidx.appcompat.widget.AppCompatTextClassifierHelper$$InternalSyntheticApiModelOutline$1$3cbd53b0c1962dafdf7c00c0747e89eecc2f0594d722a0b0284c62cf0c2127bd$3.m(android.view.textclassifier.TextClassificationManager):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$8.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Class androidx.appcompat.widget.AppCompatTextClassifierHelper$$InternalSyntheticApiModelOutline$1$3cbd53b0c1962dafdf7c00c0747e89eecc2f0594d722a0b0284c62cf0c2127bd$0.m():0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$07a33788f0340d46167a52a800a185e7f3ff39fe498d2f890acfcd77d2b8ff76$1.m(android.text.TextPaint):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$6.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.appcompat.widget.TooltipCompat$$InternalSyntheticApiModelOutline$1$3265b7ad98cce048330b47366d2855466f618f3ebe61a0041354a63231104113$0.m(android.view.View,java.lang.CharSequence):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$9.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$7.m(android.view.accessibility.AccessibilityNodeInfo,java.util.List):0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$11.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> o
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.appcompat.widget.AppCompatTextHelper$$InternalSyntheticApiModelOutline$1$e702ce2374dd981640d32b7679bc04b975fdf1223c5b2cf262102c929108964a$4.m(android.widget.TextView,int,int,int,int):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/TextView;III)V"}
    1:1:boolean androidx.appcompat.widget.AppCompatTextHelper$$InternalSyntheticApiModelOutline$1$e0f7277dead435bd68501d926cebe846f81e9fa9f1f32f8a68944fafc059c7bc$0.m(android.widget.TextView,java.lang.String):0:0 -> q
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/TextView;Ljava/lang/String;)V"}
    1:1:void androidx.appcompat.widget.AppCompatTextHelper$$InternalSyntheticApiModelOutline$1$e702ce2374dd981640d32b7679bc04b975fdf1223c5b2cf262102c929108964a$5.m(android.widget.TextView,int[],int):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/TextView;[I)V"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$10.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline10 -> b0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$ca265a76fe352945436ce274dfb971278d619f9bbe007f51308c97f0abc297d7$2.m(android.text.PrecomputedText$Params):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.DisplayCutoutCompat$$InternalSyntheticApiModelOutline$2$5995697582f938161ab89c8390e62ddcc8be8764d4286173706240625ed8d046$0.m(android.view.DisplayCutout):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$2.m(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/ImageDecoder$Source;Lt0/c;)Landroid/graphics/Bitmap;"}
    1:1:android.graphics.ImageDecoder$Source io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$0.m(java.nio.ByteBuffer):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Typeface androidx.appcompat.widget.AppCompatTextHelper$$InternalSyntheticApiModelOutline$2$e7c064c6c2893ded9505970bf321c92ff1e92165cd37441f714dabc1c6856190$0.m(android.graphics.Typeface,int,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.Handler androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl$$InternalSyntheticApiModelOutline$3$8d52cf30b98a04962970f0c5e6c7c8573caae9b733781b8847fa0ec96d6a0ee8$0.m(android.os.Looper):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.PrecomputedText$Params$Builder androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$0.m(android.text.PrecomputedText$Params$Builder,int):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.PrecomputedText$Params$Builder androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$2.m(android.text.PrecomputedText$Params$Builder,android.text.TextDirectionHeuristic):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.PrecomputedText$Params$Builder androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$9$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$0.m(android.text.TextPaint):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.TextDirectionHeuristic androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$ca265a76fe352945436ce274dfb971278d619f9bbe007f51308c97f0abc297d7$1.m(android.text.PrecomputedText$Params):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.TextPaint androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$ca265a76fe352945436ce274dfb971278d619f9bbe007f51308c97f0abc297d7$0.m(android.text.PrecomputedText$Params):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.util.Size io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$4.m(android.graphics.ImageDecoder$ImageInfo):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.DisplayCutout androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$1$1ac87aafd592b5506d107ed040b16d853d1a131cdb8856d2e13ed11b9a207052$0.m(android.view.WindowInsets):0:0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$1$9207719b7ce5d8db03f418025a4671b26e9b85828127b36d45b1560d40c7fc23$0.m(android.view.WindowInsets):0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$13.m():0:0 -> o
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$aa23d9902790919d0e24dc712e40eacb6a618cb5ed4e38217aec21f5c10dc27f$0.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$3.m(android.graphics.ImageDecoder,int):0:0 -> q
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/ImageDecoder;)V"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$2.m(android.graphics.ImageDecoder,android.graphics.ColorSpace):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.PrecomputedText$Params androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$3.m(android.text.PrecomputedText$Params$Builder):0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/PrecomputedText$Params$Builder;)V"}
    1:1:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$8d12ce1004cec7cc3110efed7cdf52738f26796c558e4eabb0bcd23b154c19e1$0.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> t
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$4d38159007d0b31eda46da8085292a0315e0f0fbdefb2f40a583a39f67825376$0.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> u
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$ca265a76fe352945436ce274dfb971278d619f9bbe007f51308c97f0abc297d7$3.m(android.text.PrecomputedText$Params):0:0 -> v
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.PrecomputedText$Params$Builder androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$1.m(android.text.PrecomputedText$Params$Builder,int):0:0 -> w
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$14.m():0:0 -> x
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$d7f0b69eabd3b8255e511b271003f9cf6c4e31c2bb69b88140c248916e27199c$0.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> y
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$Builder -> R8$$REMOVED$$CLASS$$65:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
androidx.core.util.Consumer -> c0.a:
# {"id":"sourceFile","fileName":"Consumer.kt"}
androidx.core.util.ObjectsCompat -> R8$$REMOVED$$CLASS$$66:
# {"id":"sourceFile","fileName":"ObjectsCompat.java"}
androidx.core.util.Pools$SimplePool -> R8$$REMOVED$$CLASS$$67:
# {"id":"sourceFile","fileName":"Pools.kt"}
androidx.core.util.Preconditions -> R8$$REMOVED$$CLASS$$68:
# {"id":"sourceFile","fileName":"Preconditions.java"}
androidx.core.view.AccessibilityDelegateCompat -> d0.b:
# {"id":"sourceFile","fileName":"AccessibilityDelegateCompat.java"}
    android.view.View$AccessibilityDelegate mOriginalDelegate -> a
    android.view.View$AccessibilityDelegate mBridge -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld0/a;"}
    android.view.View$AccessibilityDelegate DEFAULT_DELEGATE -> c
    1:1:void <clinit>():0:0 -> <clinit>
    3:15:void androidx.core.view.AccessibilityDelegateCompat.<init>(android.view.View$AccessibilityDelegate):0:0 -> <init>
    3:15:void <init>():0 -> <init>
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> a
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Le0/j;)V"}
    4:17:java.util.List androidx.core.view.AccessibilityDelegateCompat.getActionList(android.view.View):0:0 -> c
    4:17:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    18:29:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> c
    30:31:int androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.getId():0:0 -> c
    30:31:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    32:45:int androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.getId():0:0 -> c
    32:45:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    46:68:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> c
    69:92:boolean androidx.core.view.AccessibilityDelegateCompat.performClickableSpanAction(int,android.view.View):0:0 -> c
    69:92:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    93:100:boolean androidx.core.view.AccessibilityDelegateCompat.isSpanStillValid(android.text.style.ClickableSpan,android.view.View):0:0 -> c
    93:100:boolean androidx.core.view.AccessibilityDelegateCompat.performClickableSpanAction(int,android.view.View):0 -> c
    93:100:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    101:124:android.text.style.ClickableSpan[] androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getClickableSpans(java.lang.CharSequence):0:0 -> c
    101:124:boolean androidx.core.view.AccessibilityDelegateCompat.isSpanStillValid(android.text.style.ClickableSpan,android.view.View):0 -> c
    101:124:boolean androidx.core.view.AccessibilityDelegateCompat.performClickableSpanAction(int,android.view.View):0 -> c
    101:124:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    125:135:boolean androidx.core.view.AccessibilityDelegateCompat.isSpanStillValid(android.text.style.ClickableSpan,android.view.View):0:0 -> c
    125:135:boolean androidx.core.view.AccessibilityDelegateCompat.performClickableSpanAction(int,android.view.View):0 -> c
    125:135:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    136:145:boolean androidx.core.view.AccessibilityDelegateCompat.performClickableSpanAction(int,android.view.View):0:0 -> c
    136:145:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> d0.a:
# {"id":"sourceFile","fileName":"AccessibilityDelegateCompat.java"}
    androidx.core.view.AccessibilityDelegateCompat mCompat -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld0/b;"}
    1:1:void <init>(androidx.core.view.AccessibilityDelegateCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;)V"}
    3:4:boolean androidx.core.view.AccessibilityDelegateCompat.dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> dispatchPopulateAccessibilityEvent
    3:4:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> dispatchPopulateAccessibilityEvent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:9:boolean androidx.core.view.AccessibilityDelegateCompat.dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> dispatchPopulateAccessibilityEvent
    5:9:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> dispatchPopulateAccessibilityEvent
    3:4:androidx.core.view.accessibility.AccessibilityNodeProviderCompat androidx.core.view.AccessibilityDelegateCompat.getAccessibilityNodeProvider(android.view.View):0:0 -> getAccessibilityNodeProvider
    3:4:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View):0 -> getAccessibilityNodeProvider
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:21:androidx.core.view.accessibility.AccessibilityNodeProviderCompat androidx.core.view.AccessibilityDelegateCompat.getAccessibilityNodeProvider(android.view.View):0:0 -> getAccessibilityNodeProvider
    5:21:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View):0 -> getAccessibilityNodeProvider
    22:23:java.lang.Object androidx.core.view.accessibility.AccessibilityNodeProviderCompat.getProvider():0:0 -> getAccessibilityNodeProvider
    22:23:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View):0 -> getAccessibilityNodeProvider
    24:27:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View):0:0 -> getAccessibilityNodeProvider
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> onInitializeAccessibilityEvent
    5:9:androidx.core.view.accessibility.AccessibilityNodeInfoCompat androidx.core.view.accessibility.AccessibilityNodeInfoCompat.wrap(android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    5:9:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    10:20:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    21:32:java.lang.Boolean androidx.core.view.ViewCompat$1.frameworkGet(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    21:32:java.lang.Object androidx.core.view.ViewCompat$1.frameworkGet(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    21:32:java.lang.Object androidx.core.view.ViewCompat$AccessibilityViewProperty.get(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    21:32:boolean androidx.core.view.ViewCompat.isScreenReaderFocusable(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    21:32:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    33:44:java.lang.Object androidx.core.view.ViewCompat$AccessibilityViewProperty.get(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    33:44:boolean androidx.core.view.ViewCompat.isScreenReaderFocusable(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    33:44:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    45:65:boolean androidx.core.view.ViewCompat.isScreenReaderFocusable(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    45:65:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    66:69:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setScreenReaderFocusable(boolean):0:0 -> onInitializeAccessibilityNodeInfo
    66:69:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    70:75:android.os.Bundle androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getExtras():0:0 -> onInitializeAccessibilityNodeInfo
    70:75:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setBooleanProperty(int,boolean):0 -> onInitializeAccessibilityNodeInfo
    70:75:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setScreenReaderFocusable(boolean):0 -> onInitializeAccessibilityNodeInfo
    70:75:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    76:89:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setBooleanProperty(int,boolean):0:0 -> onInitializeAccessibilityNodeInfo
    76:89:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setScreenReaderFocusable(boolean):0 -> onInitializeAccessibilityNodeInfo
    76:89:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    90:101:java.lang.Boolean androidx.core.view.ViewCompat$4.frameworkGet(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    90:101:java.lang.Object androidx.core.view.ViewCompat$4.frameworkGet(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    90:101:java.lang.Object androidx.core.view.ViewCompat$AccessibilityViewProperty.get(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    90:101:boolean androidx.core.view.ViewCompat.isAccessibilityHeading(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    90:101:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    102:113:java.lang.Object androidx.core.view.ViewCompat$AccessibilityViewProperty.get(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    102:113:boolean androidx.core.view.ViewCompat.isAccessibilityHeading(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    102:113:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    114:127:boolean androidx.core.view.ViewCompat.isAccessibilityHeading(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    114:127:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    128:131:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setHeading(boolean):0:0 -> onInitializeAccessibilityNodeInfo
    128:131:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    132:137:android.os.Bundle androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getExtras():0:0 -> onInitializeAccessibilityNodeInfo
    132:137:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setBooleanProperty(int,boolean):0 -> onInitializeAccessibilityNodeInfo
    132:137:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setHeading(boolean):0 -> onInitializeAccessibilityNodeInfo
    132:137:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    138:156:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setBooleanProperty(int,boolean):0:0 -> onInitializeAccessibilityNodeInfo
    138:156:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setHeading(boolean):0 -> onInitializeAccessibilityNodeInfo
    138:156:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    157:164:java.lang.CharSequence androidx.core.view.ViewCompat$2.frameworkGet(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    157:164:java.lang.Object androidx.core.view.ViewCompat$2.frameworkGet(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    157:164:java.lang.Object androidx.core.view.ViewCompat$AccessibilityViewProperty.get(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    157:164:java.lang.CharSequence androidx.core.view.ViewCompat.getAccessibilityPaneTitle(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    157:164:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    165:176:java.lang.Object androidx.core.view.ViewCompat$AccessibilityViewProperty.get(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    165:176:java.lang.CharSequence androidx.core.view.ViewCompat.getAccessibilityPaneTitle(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    165:176:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    177:180:java.lang.CharSequence androidx.core.view.ViewCompat.getAccessibilityPaneTitle(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    177:180:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    181:199:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setPaneTitle(java.lang.CharSequence):0:0 -> onInitializeAccessibilityNodeInfo
    181:199:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    200:207:java.lang.CharSequence androidx.core.view.ViewCompat$3.frameworkGet(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    200:207:java.lang.Object androidx.core.view.ViewCompat$3.frameworkGet(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    200:207:java.lang.Object androidx.core.view.ViewCompat$AccessibilityViewProperty.get(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    200:207:java.lang.CharSequence androidx.core.view.ViewCompat.getStateDescription(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    200:207:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    208:220:java.lang.Object androidx.core.view.ViewCompat$AccessibilityViewProperty.get(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    208:220:java.lang.CharSequence androidx.core.view.ViewCompat.getStateDescription(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    208:220:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    221:224:java.lang.CharSequence androidx.core.view.ViewCompat.getStateDescription(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    221:224:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    225:242:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setStateDescription(java.lang.CharSequence):0:0 -> onInitializeAccessibilityNodeInfo
    225:242:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    243:253:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    254:292:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.clearExtrasSpans():0:0 -> onInitializeAccessibilityNodeInfo
    254:292:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0 -> onInitializeAccessibilityNodeInfo
    254:292:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    293:300:android.util.SparseArray androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getSpansFromViewTags(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    293:300:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.removeCollectedSpans(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    293:300:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0 -> onInitializeAccessibilityNodeInfo
    293:300:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    301:357:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.removeCollectedSpans(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    301:357:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0 -> onInitializeAccessibilityNodeInfo
    301:357:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    358:378:android.text.style.ClickableSpan[] androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getClickableSpans(java.lang.CharSequence):0:0 -> onInitializeAccessibilityNodeInfo
    358:378:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0 -> onInitializeAccessibilityNodeInfo
    358:378:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    379:381:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    379:381:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    382:390:android.os.Bundle androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getExtras():0:0 -> onInitializeAccessibilityNodeInfo
    382:390:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0 -> onInitializeAccessibilityNodeInfo
    382:390:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    391:393:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    391:393:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    394:401:android.util.SparseArray androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getSpansFromViewTags(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    394:401:android.util.SparseArray androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getOrCreateSpansFromViewTags(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    394:401:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0 -> onInitializeAccessibilityNodeInfo
    394:401:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    402:410:android.util.SparseArray androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getOrCreateSpansFromViewTags(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    402:410:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0 -> onInitializeAccessibilityNodeInfo
    402:410:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    411:416:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    411:416:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    417:454:int androidx.core.view.accessibility.AccessibilityNodeInfoCompat.idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray):0:0 -> onInitializeAccessibilityNodeInfo
    417:454:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0 -> onInitializeAccessibilityNodeInfo
    417:454:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    455:469:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    455:469:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    470:532:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int):0:0 -> onInitializeAccessibilityNodeInfo
    470:532:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0 -> onInitializeAccessibilityNodeInfo
    470:532:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    533:545:java.util.List androidx.core.view.AccessibilityDelegateCompat.getActionList(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    533:545:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    546:557:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    558:570:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):0:0 -> onInitializeAccessibilityNodeInfo
    558:570:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    3:4:void androidx.core.view.AccessibilityDelegateCompat.onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> onPopulateAccessibilityEvent
    3:4:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> onPopulateAccessibilityEvent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:8:void androidx.core.view.AccessibilityDelegateCompat.onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> onPopulateAccessibilityEvent
    5:8:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> onPopulateAccessibilityEvent
    3:4:boolean androidx.core.view.AccessibilityDelegateCompat.onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> onRequestSendAccessibilityEvent
    3:4:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent):0 -> onRequestSendAccessibilityEvent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:9:boolean androidx.core.view.AccessibilityDelegateCompat.onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> onRequestSendAccessibilityEvent
    5:9:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent):0 -> onRequestSendAccessibilityEvent
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> performAccessibilityAction
    3:4:void androidx.core.view.AccessibilityDelegateCompat.sendAccessibilityEvent(android.view.View,int):0:0 -> sendAccessibilityEvent
    3:4:void sendAccessibilityEvent(android.view.View,int):0 -> sendAccessibilityEvent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:8:void androidx.core.view.AccessibilityDelegateCompat.sendAccessibilityEvent(android.view.View,int):0:0 -> sendAccessibilityEvent
    5:8:void sendAccessibilityEvent(android.view.View,int):0 -> sendAccessibilityEvent
    3:4:void androidx.core.view.AccessibilityDelegateCompat.sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    3:4:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:8:void androidx.core.view.AccessibilityDelegateCompat.sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    5:8:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
androidx.core.view.DifferentialMotionFlingController -> d0.d:
# {"id":"sourceFile","fileName":"DifferentialMotionFlingController.java"}
    android.content.Context mContext -> a
    androidx.core.view.DifferentialMotionFlingTarget mTarget -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/a;"}
    androidx.core.view.DifferentialMotionFlingController$FlingVelocityThresholdCalculator mVelocityThresholdCalculator -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld0/c;"}
    androidx.core.view.DifferentialMotionFlingController$DifferentialVelocityProvider mVelocityProvider -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld0/c;"}
    android.view.VelocityTracker mVelocityTracker -> e
    float mLastFlingVelocity -> f
    int mLastProcessedAxis -> g
    int mLastProcessedSource -> h
    int mLastProcessedDeviceId -> i
    int[] mFlingVelocityThresholds -> j
    3:5:void androidx.core.view.DifferentialMotionFlingController$$InternalSyntheticLambda$1$111a9fc5606249f80c3ba7a10c519e978a82d8e05cda35ab47de4f64be6e4e24$0.<init>():0:0 -> <init>
    3:5:void <init>(android.content.Context,androidx.core.view.DifferentialMotionFlingTarget):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lk/a;)V"}
    6:7:void <init>(android.content.Context,androidx.core.view.DifferentialMotionFlingTarget):0:0 -> <init>
    8:10:void androidx.core.view.DifferentialMotionFlingController$$InternalSyntheticLambda$1$111a9fc5606249f80c3ba7a10c519e978a82d8e05cda35ab47de4f64be6e4e24$0.<init>():0:0 -> <init>
    8:10:void <init>(android.content.Context,androidx.core.view.DifferentialMotionFlingTarget):0 -> <init>
    11:39:void androidx.core.view.DifferentialMotionFlingController.<init>(android.content.Context,androidx.core.view.DifferentialMotionFlingTarget,androidx.core.view.DifferentialMotionFlingController$FlingVelocityThresholdCalculator,androidx.core.view.DifferentialMotionFlingController$DifferentialVelocityProvider):0:0 -> <init>
    11:39:void <init>(android.content.Context,androidx.core.view.DifferentialMotionFlingTarget):0 -> <init>
androidx.core.view.DifferentialMotionFlingController$$ExternalSyntheticLambda0 -> d0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.DisplayCutoutCompat -> d0.e:
# {"id":"sourceFile","fileName":"DisplayCutoutCompat.java"}
    android.view.DisplayCutout mDisplayCutout -> a
    1:1:void <init>(android.view.DisplayCutout):0:0 -> <init>
    20:28:boolean androidx.core.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> equals
    20:28:boolean equals(java.lang.Object):0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.core.view.GravityCompat -> R8$$REMOVED$$CLASS$$69:
# {"id":"sourceFile","fileName":"GravityCompat.java"}
androidx.core.view.MarginLayoutParamsCompat -> R8$$REMOVED$$CLASS$$70:
# {"id":"sourceFile","fileName":"MarginLayoutParamsCompat.java"}
androidx.core.view.MenuItemCompat$Api26Impl -> d0.f:
# {"id":"sourceFile","fileName":"MenuItemCompat.java"}
    1:1:int getAlphabeticModifiers(android.view.MenuItem):0:0 -> a
    1:1:java.lang.CharSequence getContentDescription(android.view.MenuItem):0:0 -> b
    1:1:android.content.res.ColorStateList getIconTintList(android.view.MenuItem):0:0 -> c
    1:1:android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem):0:0 -> d
    1:1:int getNumericModifiers(android.view.MenuItem):0:0 -> e
    1:1:java.lang.CharSequence getTooltipText(android.view.MenuItem):0:0 -> f
    1:1:android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int):0:0 -> g
    1:1:android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence):0:0 -> h
    1:1:android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList):0:0 -> i
    1:1:android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode):0:0 -> j
    1:1:android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int):0:0 -> k
    1:1:android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int):0:0 -> l
    1:1:android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence):0:0 -> m
androidx.core.view.MotionEventCompat -> R8$$REMOVED$$CLASS$$71:
# {"id":"sourceFile","fileName":"MotionEventCompat.java"}
androidx.core.view.NestedScrollingChildHelper -> d0.g:
# {"id":"sourceFile","fileName":"NestedScrollingChildHelper.java"}
    android.view.ViewParent mNestedScrollingParentTouch -> a
    android.view.ViewParent mNestedScrollingParentNonTouch -> b
    android.view.View mView -> c
    boolean mIsNestedScrollingEnabled -> d
    int[] mTempNestedScrollConsumed -> e
    1:1:void <init>(android.view.View):0:0 -> <init>
    6:13:boolean dispatchNestedFling(float,float,boolean):0:0 -> a
    14:44:boolean androidx.core.view.ViewParentCompat.onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean):0:0 -> a
    14:44:boolean dispatchNestedFling(float,float,boolean):0 -> a
    6:13:boolean dispatchNestedPreFling(float,float):0:0 -> b
    14:44:boolean androidx.core.view.ViewParentCompat.onNestedPreFling(android.view.ViewParent,android.view.View,float,float):0:0 -> b
    14:44:boolean dispatchNestedPreFling(float,float):0 -> b
    15:74:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> c
    75:125:void androidx.core.view.ViewParentCompat.onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int):0:0 -> c
    75:125:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0 -> c
    126:148:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> c
    1:1:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]):0:0 -> d
    2:2:void androidx.core.view.ViewParentCompat.onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]):0:0 -> d
    2:2:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]):0 -> d
    3:3:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]):0:0 -> d
    1:1:android.view.ViewParent getNestedScrollingParentForType(int):0:0 -> e
    1:1:boolean hasNestedScrollingParent(int):0:0 -> f
    15:21:boolean startNestedScroll(int,int):0:0 -> g
    22:57:boolean androidx.core.view.ViewParentCompat.onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int):0:0 -> g
    22:57:boolean startNestedScroll(int,int):0 -> g
    58:92:void androidx.core.view.ViewParentCompat.onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int):0:0 -> g
    58:92:boolean startNestedScroll(int,int):0 -> g
    93:112:boolean androidx.core.view.ViewParentCompat.onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int):0:0 -> g
    93:112:boolean startNestedScroll(int,int):0 -> g
    113:126:boolean startNestedScroll(int,int):0:0 -> g
    7:62:void androidx.core.view.ViewParentCompat.onStopNestedScroll(android.view.ViewParent,android.view.View,int):0:0 -> h
    7:62:void stopNestedScroll(int):0 -> h
androidx.core.view.NestedScrollingParent2 -> d0.h:
# {"id":"sourceFile","fileName":"NestedScrollingParent2.java"}
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> a
    void onNestedScroll(android.view.View,int,int,int,int,int) -> c
    void onStopNestedScroll(android.view.View,int) -> d
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> e
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> f
androidx.core.view.NestedScrollingParent3 -> d0.i:
# {"id":"sourceFile","fileName":"NestedScrollingParent3.java"}
    void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> b
androidx.core.view.NestedScrollingParentHelper -> d0.j:
# {"id":"sourceFile","fileName":"NestedScrollingParentHelper.java"}
    int mNestedScrollAxesTouch -> a
    int mNestedScrollAxesNonTouch -> b
    void <init>(android.view.ViewGroup) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
androidx.core.view.OnApplyWindowInsetsListener -> d0.k:
# {"id":"sourceFile","fileName":"OnApplyWindowInsetsListener.java"}
androidx.core.view.VelocityTrackerCompat -> d0.m:
# {"id":"sourceFile","fileName":"VelocityTrackerCompat.java"}
    java.util.Map sFallbackTrackers -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.core.view.VelocityTrackerCompat$Api34Impl -> d0.l:
# {"id":"sourceFile","fileName":"VelocityTrackerCompat.java"}
    1:1:float getAxisVelocity(android.view.VelocityTracker,int):0:0 -> a
    1:1:float getAxisVelocity(android.view.VelocityTracker,int,int):0:0 -> b
    1:1:boolean isAxisSupported(android.view.VelocityTracker,int):0:0 -> c
androidx.core.view.VelocityTrackerFallback -> d0.n:
# {"id":"sourceFile","fileName":"VelocityTrackerFallback.java"}
    float[] mMovements -> a
    long[] mEventTimes -> b
    float mLastComputedVelocity -> c
    int mDataPointsBufferSize -> d
    int mDataPointsBufferLastUsedIndex -> e
    1:1:void <init>():0:0 -> <init>
androidx.core.view.ViewCompat -> d0.y:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    java.lang.reflect.Field sAccessibilityDelegateField -> a
    boolean sAccessibilityDelegateCheckFailed -> b
    1:6:void androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager.<init>():0:0 -> <clinit>
    1:6:void <clinit>():0 -> <clinit>
    11:29:android.view.View$AccessibilityDelegate androidx.core.view.ViewCompat.getAccessibilityDelegateInternal(android.view.View):0:0 -> a
    11:29:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ld0/b;)V"}
    30:54:android.view.View$AccessibilityDelegate androidx.core.view.ViewCompat.getAccessibilityDelegateThroughReflection(android.view.View):0:0 -> a
    30:54:android.view.View$AccessibilityDelegate androidx.core.view.ViewCompat.getAccessibilityDelegateInternal(android.view.View):0 -> a
    30:54:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0 -> a
    55:63:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0:0 -> a
    64:75:void androidx.core.view.ViewCompat.setImportantForAccessibilityIfNeeded(android.view.View):0:0 -> a
    64:75:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0 -> a
    76:81:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0:0 -> a
androidx.core.view.ViewCompat$1 -> R8$$REMOVED$$CLASS$$72:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
androidx.core.view.ViewCompat$2 -> R8$$REMOVED$$CLASS$$73:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
androidx.core.view.ViewCompat$3 -> R8$$REMOVED$$CLASS$$74:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
androidx.core.view.ViewCompat$4 -> R8$$REMOVED$$CLASS$$75:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> R8$$REMOVED$$CLASS$$76:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
androidx.core.view.ViewCompat$AccessibilityViewProperty -> R8$$REMOVED$$CLASS$$77:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
androidx.core.view.ViewCompat$Api20Impl -> d0.o:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets):0:0 -> a
    1:1:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets):0:0 -> b
    1:1:void requestApplyInsets(android.view.View):0:0 -> c
androidx.core.view.ViewCompat$Api21Impl -> d0.q:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View):0:0 -> a
    1:2:android.view.WindowInsets androidx.core.view.WindowInsetsCompat.toWindowInsets():0:0 -> b
    1:2:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ld0/q0;Landroid/graphics/Rect;)Ld0/q0;"}
    3:14:android.view.WindowInsets androidx.core.view.WindowInsetsCompat.toWindowInsets():0:0 -> b
    3:14:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0 -> b
    15:27:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0:0 -> b
    1:1:boolean dispatchNestedFling(android.view.View,float,float,boolean):0:0 -> c
    1:1:boolean dispatchNestedPreFling(android.view.View,float,float):0:0 -> d
    1:1:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]):0:0 -> e
    1:1:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]):0:0 -> f
    1:1:android.content.res.ColorStateList getBackgroundTintList(android.view.View):0:0 -> g
    1:1:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View):0:0 -> h
    1:1:float getElevation(android.view.View):0:0 -> i
    1:51:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder.getRootWindowInsets(android.view.View):0:0 -> j
    1:51:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Ld0/q0;"}
    52:72:void androidx.core.view.WindowInsetsCompat$Builder.<init>():0:0 -> j
    52:72:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder.getRootWindowInsets(android.view.View):0 -> j
    52:72:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> j
    73:84:androidx.core.graphics.Insets androidx.core.graphics.Insets.of(android.graphics.Rect):0:0 -> j
    73:84:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder.getRootWindowInsets(android.view.View):0 -> j
    73:84:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> j
    85:87:androidx.core.view.WindowInsetsCompat$Builder androidx.core.view.WindowInsetsCompat$Builder.setStableInsets(androidx.core.graphics.Insets):0:0 -> j
    85:87:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder.getRootWindowInsets(android.view.View):0 -> j
    85:87:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> j
    88:99:androidx.core.graphics.Insets androidx.core.graphics.Insets.of(android.graphics.Rect):0:0 -> j
    88:99:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder.getRootWindowInsets(android.view.View):0 -> j
    88:99:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> j
    100:102:androidx.core.view.WindowInsetsCompat$Builder androidx.core.view.WindowInsetsCompat$Builder.setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> j
    100:102:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder.getRootWindowInsets(android.view.View):0 -> j
    100:102:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> j
    103:106:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Builder.build():0:0 -> j
    103:106:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder.getRootWindowInsets(android.view.View):0 -> j
    103:106:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> j
    107:108:void androidx.core.view.WindowInsetsCompat.setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> j
    107:108:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder.getRootWindowInsets(android.view.View):0 -> j
    107:108:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> j
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    109:111:void androidx.core.view.WindowInsetsCompat.setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> j
    109:111:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder.getRootWindowInsets(android.view.View):0 -> j
    109:111:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> j
    112:115:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder.getRootWindowInsets(android.view.View):0:0 -> j
    112:115:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> j
    116:123:void androidx.core.view.WindowInsetsCompat.copyRootViewBounds(android.view.View):0:0 -> j
    116:123:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder.getRootWindowInsets(android.view.View):0 -> j
    116:123:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> j
    124:147:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder.getRootWindowInsets(android.view.View):0:0 -> j
    124:147:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> j
    1:1:java.lang.String getTransitionName(android.view.View):0:0 -> k
    1:1:float getTranslationZ(android.view.View):0:0 -> l
    1:1:float getZ(android.view.View):0:0 -> m
    1:1:boolean hasNestedScrollingParent(android.view.View):0:0 -> n
    1:1:boolean isImportantForAccessibility(android.view.View):0:0 -> o
    1:1:boolean isNestedScrollingEnabled(android.view.View):0:0 -> p
    1:1:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList):0:0 -> q
    1:1:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode):0:0 -> r
    1:1:void setElevation(android.view.View,float):0:0 -> s
    1:1:void setNestedScrollingEnabled(android.view.View,boolean):0:0 -> t
    1:1:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ld0/k;)V"}
    1:1:void setTransitionName(android.view.View,java.lang.String):0:0 -> v
    1:1:void setTranslationZ(android.view.View,float):0:0 -> w
    1:1:void setZ(android.view.View,float):0:0 -> x
    1:1:boolean startNestedScroll(android.view.View,int):0:0 -> y
    1:1:void stopNestedScroll(android.view.View):0:0 -> z
androidx.core.view.ViewCompat$Api21Impl$1 -> d0.p:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    androidx.core.view.WindowInsetsCompat mLastInsets -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld0/q0;"}
    android.view.View val$v -> b
    1:1:void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ld0/k;)V"}
    1:1:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets):0:0 -> onApplyWindowInsets
androidx.core.view.ViewCompat$Api23Impl -> d0.r:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    9:12:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.toWindowInsetsCompat(android.view.WindowInsets):0:0 -> a
    9:12:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Ld0/q0;"}
    13:17:void androidx.core.view.WindowInsetsCompat.setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> a
    13:17:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> a
    18:21:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> a
    22:25:void androidx.core.view.WindowInsetsCompat.copyRootViewBounds(android.view.View):0:0 -> a
    22:25:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> a
    1:1:int getScrollIndicators(android.view.View):0:0 -> b
    1:1:void setScrollIndicators(android.view.View,int):0:0 -> c
    1:1:void setScrollIndicators(android.view.View,int,int):0:0 -> d
androidx.core.view.ViewCompat$Api26Impl -> d0.s:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int):0:0 -> a
    1:1:android.view.autofill.AutofillId getAutofillId(android.view.View):0:0 -> b
    1:1:int getImportantForAutofill(android.view.View):0:0 -> c
    1:1:int getNextClusterForwardId(android.view.View):0:0 -> d
    1:1:boolean hasExplicitFocusable(android.view.View):0:0 -> e
    1:1:boolean isFocusedByDefault(android.view.View):0:0 -> f
    1:1:boolean isImportantForAutofill(android.view.View):0:0 -> g
    1:1:boolean isKeyboardNavigationCluster(android.view.View):0:0 -> h
    1:1:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int):0:0 -> i
    1:1:boolean restoreDefaultFocus(android.view.View):0:0 -> j
    1:1:void setAutofillHints(android.view.View,java.lang.String[]):0:0 -> k
    1:1:void setFocusedByDefault(android.view.View,boolean):0:0 -> l
    1:1:void setImportantForAutofill(android.view.View,int):0:0 -> m
    1:1:void setKeyboardNavigationCluster(android.view.View,boolean):0:0 -> n
    1:1:void setNextClusterForwardId(android.view.View,int):0:0 -> o
    1:1:void setTooltipText(android.view.View,java.lang.CharSequence):0:0 -> p
androidx.core.view.ViewCompat$Api28Impl -> d0.u:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ld0/x;)V"}
    1:1:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View):0:0 -> b
    1:1:boolean isAccessibilityHeading(android.view.View):0:0 -> c
    1:1:boolean isScreenReaderFocusable(android.view.View):0:0 -> d
    14:17:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> e
    14:17:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ld0/x;)V"}
    18:25:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> e
    1:1:java.lang.Object requireViewById(android.view.View,int):0:0 -> f
    1:1:void setAccessibilityHeading(android.view.View,boolean):0:0 -> g
    1:1:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence):0:0 -> h
    1:1:void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Lf0/a;)V"}
    1:1:void setScreenReaderFocusable(android.view.View,boolean):0:0 -> j
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0 -> d0.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$1$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.onUnhandledKeyEvent(android.view.View,android.view.KeyEvent):0:0 -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api29Impl -> d0.v:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View):0:0 -> a
    1:1:android.view.contentcapture.ContentCaptureSession getContentCaptureSession(android.view.View):0:0 -> b
    1:1:java.util.List getSystemGestureExclusionRects(android.view.View):0:0 -> c
    1:1:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> d
    1:1:void setContentCaptureSession(android.view.View,androidx.core.view.contentcapture.ContentCaptureSessionCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Lg0/a;)V"}
    1:1:void setSystemGestureExclusionRects(android.view.View,java.util.List):0:0 -> f
androidx.core.view.ViewCompat$Api30Impl -> d0.w:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    1:1:int getImportantForContentCapture(android.view.View):0:0 -> a
    1:1:java.lang.CharSequence getStateDescription(android.view.View):0:0 -> b
    1:1:boolean isImportantForContentCapture(android.view.View):0:0 -> c
    1:1:void setImportantForContentCapture(android.view.View,int):0:0 -> d
    1:1:void setStateDescription(android.view.View,java.lang.CharSequence):0:0 -> e
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat -> d0.x:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
androidx.core.view.ViewConfigurationCompat -> d0.c0:
# {"id":"sourceFile","fileName":"ViewConfigurationCompat.java"}
    java.lang.reflect.Method sGetScaledScrollFactorMethod -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context):0:0 -> a
androidx.core.view.ViewConfigurationCompat$Api26Impl -> d0.z:
# {"id":"sourceFile","fileName":"ViewConfigurationCompat.java"}
    1:1:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration):0:0 -> a
    1:1:float getScaledVerticalScrollFactor(android.view.ViewConfiguration):0:0 -> b
androidx.core.view.ViewConfigurationCompat$Api28Impl -> d0.a0:
# {"id":"sourceFile","fileName":"ViewConfigurationCompat.java"}
    1:1:int getScaledHoverSlop(android.view.ViewConfiguration):0:0 -> a
    1:1:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration):0:0 -> b
androidx.core.view.ViewConfigurationCompat$Api34Impl -> d0.b0:
# {"id":"sourceFile","fileName":"ViewConfigurationCompat.java"}
    1:1:int getScaledMaximumFlingVelocity(android.view.ViewConfiguration,int,int,int):0:0 -> a
    1:1:int getScaledMinimumFlingVelocity(android.view.ViewConfiguration,int,int,int):0:0 -> b
androidx.core.view.ViewParentCompat -> R8$$REMOVED$$CLASS$$78:
# {"id":"sourceFile","fileName":"ViewParentCompat.java"}
androidx.core.view.ViewParentCompat$Api21Impl -> d0.d0:
# {"id":"sourceFile","fileName":"ViewParentCompat.java"}
    1:1:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean):0:0 -> a
    1:1:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float):0:0 -> b
    1:1:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]):0:0 -> c
    1:1:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int):0:0 -> d
    1:1:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int):0:0 -> e
    1:1:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int):0:0 -> f
    1:1:void onStopNestedScroll(android.view.ViewParent,android.view.View):0:0 -> g
androidx.core.view.WindowInsetsCompat -> d0.q0:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    androidx.core.view.WindowInsetsCompat$Impl mImpl -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld0/p0;"}
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    2:2:void <init>(android.view.WindowInsets):0:0 -> <init>
    3:5:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> a
    3:5:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets;Landroid/view/View;)Ld0/q0;"}
    6:24:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0:0 -> a
    25:35:androidx.core.view.WindowInsetsCompat androidx.core.view.ViewCompat.getRootWindowInsets(android.view.View):0:0 -> a
    25:35:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0 -> a
    36:38:void androidx.core.view.WindowInsetsCompat.setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> a
    36:38:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0 -> a
    39:42:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0:0 -> a
    43:46:void androidx.core.view.WindowInsetsCompat.copyRootViewBounds(android.view.View):0:0 -> a
    43:46:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0 -> a
    17:21:boolean androidx.core.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> equals
    17:21:boolean equals(java.lang.Object):0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> d0.e0:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    java.lang.reflect.Field sViewAttachInfoField -> a
    java.lang.reflect.Field sStableInsets -> b
    java.lang.reflect.Field sContentInsets -> c
    boolean sReflectionSucceeded -> d
    1:1:void <clinit>():0:0 -> <clinit>
androidx.core.view.WindowInsetsCompat$Builder -> R8$$REMOVED$$CLASS$$79:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
androidx.core.view.WindowInsetsCompat$BuilderImpl -> d0.i0:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/q0;)V"}
    1:1:void applyInsetTypes():0:0 -> a
    androidx.core.view.WindowInsetsCompat build() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld0/q0;"}
    void setStableInsets(androidx.core.graphics.Insets) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/c;)V"}
    void setSystemWindowInsets(androidx.core.graphics.Insets) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/c;)V"}
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> d0.f0:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    android.view.WindowInsets mPlatformInsets -> a
    androidx.core.graphics.Insets mStableInsets -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lw/c;"}
    java.lang.reflect.Field sConsumedField -> c
    boolean sConsumedFieldFetched -> d
    java.lang.reflect.Constructor sConstructor -> e
    boolean sConstructorFetched -> f
    1:1:void <init>():0:0 -> <init>
    7:10:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.toWindowInsetsCompat(android.view.WindowInsets):0:0 -> b
    7:10:androidx.core.view.WindowInsetsCompat build():0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld0/q0;"}
    11:17:void androidx.core.view.WindowInsetsCompat.setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> b
    11:17:androidx.core.view.WindowInsetsCompat build():0 -> b
    18:21:void androidx.core.view.WindowInsetsCompat.setStableInsets(androidx.core.graphics.Insets):0:0 -> b
    18:21:androidx.core.view.WindowInsetsCompat build():0 -> b
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/c;)V"}
    1:1:void setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/c;)V"}
    1:1:android.view.WindowInsets createWindowInsetsInstance():0:0 -> e
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> d0.g0:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    android.view.WindowInsets$Builder mPlatBuilder -> a
    1:1:void <init>():0:0 -> <init>
    11:14:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.toWindowInsetsCompat(android.view.WindowInsets):0:0 -> b
    11:14:androidx.core.view.WindowInsetsCompat build():0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld0/q0;"}
    15:20:void androidx.core.view.WindowInsetsCompat.setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> b
    15:20:androidx.core.view.WindowInsetsCompat build():0 -> b
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/c;)V"}
    1:1:void setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/c;)V"}
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> d0.h0:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1:1:void <init>():0:0 -> <init>
androidx.core.view.WindowInsetsCompat$Impl -> d0.p0:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    androidx.core.view.WindowInsetsCompat mHost -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld0/q0;"}
    int $r8$clinit -> b
      # {"id":"com.android.tools.r8.synthesized"}
    7:27:void androidx.core.view.WindowInsetsCompat$Builder.<init>():0:0 -> <clinit>
    7:27:void <clinit>():0 -> <clinit>
    28:31:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Builder.build():0:0 -> <clinit>
    28:31:void <clinit>():0 -> <clinit>
    32:33:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.consumeDisplayCutout():0:0 -> <clinit>
    32:33:void <clinit>():0 -> <clinit>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    34:37:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.consumeDisplayCutout():0:0 -> <clinit>
    34:37:void <clinit>():0 -> <clinit>
    38:39:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.consumeStableInsets():0:0 -> <clinit>
    38:39:void <clinit>():0 -> <clinit>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    40:43:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.consumeStableInsets():0:0 -> <clinit>
    40:43:void <clinit>():0 -> <clinit>
    44:45:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.consumeSystemWindowInsets():0:0 -> <clinit>
    44:45:void <clinit>():0 -> <clinit>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    46:49:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.consumeSystemWindowInsets():0:0 -> <clinit>
    46:49:void <clinit>():0 -> <clinit>
    1:1:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/q0;)V"}
    1:1:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld0/q0;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeStableInsets():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld0/q0;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld0/q0;"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld0/e;"}
    41:46:boolean androidx.core.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> equals
    41:46:boolean equals(java.lang.Object):0 -> equals
    47:54:boolean equals(java.lang.Object):0:0 -> equals
    55:60:boolean androidx.core.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> equals
    55:60:boolean equals(java.lang.Object):0 -> equals
    61:68:boolean equals(java.lang.Object):0:0 -> equals
    69:77:boolean androidx.core.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> equals
    69:77:boolean equals(java.lang.Object):0 -> equals
    1:1:androidx.core.graphics.Insets getStableInsets():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw/c;"}
    1:1:androidx.core.graphics.Insets getSystemWindowInsets():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw/c;"}
    1:1:boolean isConsumed():0:0 -> h
    47:51:int androidx.core.util.ObjectsCompat.hash(java.lang.Object[]):0:0 -> hashCode
    47:51:int hashCode():0 -> hashCode
    1:1:boolean isRound():0:0 -> i
    1:1:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lw/c;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/q0;)V"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/c;)V"}
androidx.core.view.WindowInsetsCompat$Impl20 -> d0.j0:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    android.view.WindowInsets mPlatformInsets -> c
    androidx.core.graphics.Insets mSystemWindowInsets -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lw/c;"}
    androidx.core.graphics.Insets mRootViewVisibleInsets -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lw/c;"}
    boolean sVisibleRectReflectionFetched -> f
    java.lang.reflect.Method sGetViewRootImplMethod -> g
    java.lang.Class sAttachInfoClass -> h
    java.lang.reflect.Field sVisibleInsetsField -> i
    java.lang.reflect.Field sAttachInfoField -> j
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/q0;Landroid/view/WindowInsets;)V"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:androidx.core.graphics.Insets getSystemWindowInsets():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw/c;"}
    1:1:boolean isRound():0:0 -> i
    1:1:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lw/c;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/q0;)V"}
    68:80:androidx.core.graphics.Insets androidx.core.graphics.Insets.of(android.graphics.Rect):0:0 -> m
    68:80:androidx.core.graphics.Insets getVisibleInsets(android.view.View):0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Lw/c;"}
    81:110:androidx.core.graphics.Insets getVisibleInsets(android.view.View):0:0 -> m
    1:1:void loadReflectionField():0:0 -> n
    1:1:void setRootViewData(androidx.core.graphics.Insets):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/c;)V"}
androidx.core.view.WindowInsetsCompat$Impl21 -> d0.k0:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    androidx.core.graphics.Insets mStableInsets -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lw/c;"}
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/q0;Landroid/view/WindowInsets;)V"}
    8:12:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.toWindowInsetsCompat(android.view.WindowInsets):0:0 -> b
    8:12:androidx.core.view.WindowInsetsCompat consumeStableInsets():0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld0/q0;"}
    8:12:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.toWindowInsetsCompat(android.view.WindowInsets):0:0 -> c
    8:12:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld0/q0;"}
    1:1:androidx.core.graphics.Insets getStableInsets():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw/c;"}
    1:1:boolean isConsumed():0:0 -> h
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/c;)V"}
androidx.core.view.WindowInsetsCompat$Impl28 -> d0.l0:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/q0;Landroid/view/WindowInsets;)V"}
    8:12:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.toWindowInsetsCompat(android.view.WindowInsets):0:0 -> a
    8:12:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld0/q0;"}
    11:17:androidx.core.view.DisplayCutoutCompat androidx.core.view.DisplayCutoutCompat.wrap(android.view.DisplayCutout):0:0 -> e
    11:17:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld0/e;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.core.view.WindowInsetsCompat$Impl29 -> d0.m0:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/q0;Landroid/view/WindowInsets;)V"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/c;)V"}
androidx.core.view.WindowInsetsCompat$Impl30 -> d0.o0:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    int $r8$clinit -> l
      # {"id":"com.android.tools.r8.synthesized"}
    6:9:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.toWindowInsetsCompat(android.view.WindowInsets):0:0 -> <clinit>
    6:9:void <clinit>():0 -> <clinit>
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/q0;Landroid/view/WindowInsets;)V"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> d0.n0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$InternalSyntheticApiModelOutline$1$bd1cd9d0943ca231e7274d929fa7c010412d008ae6662d31a63e4bf50757d82d$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$2cc005fa53a8049e244b5ffce5b2e308ea0dcdb0fed28f3a858d514c163d0b4f$0.m(android.view.WindowInsetsAnimation):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$3.m(android.view.WindowInsets,int):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl30$$InternalSyntheticApiModelOutline$1$7c95e3cf87277cc9e90a5ee20212fa74552db1fed9bbd019afd18ee3ae455fac$0.m():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsetsAnimation io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$0.m(java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowMetrics io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$512bd08af4a4826aa6bf69ffea8b7559cd1ea1887827bdbe0ea32b6c735136b2$0.m(android.view.WindowManager):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$15.m():0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$InternalSyntheticApiModelOutline$1$4c819f8c8ad227d9802b1a549dcea82babc035996fc947c4508511c1b3807738$0.m(android.view.View,android.view.WindowInsetsAnimation$Callback):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)V"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$InternalSyntheticApiModelOutline$1$524166dcacb1ec2521be0b4cc9c9bbb9c4da57519381d013591dedc3f0213233$0.m(android.view.View,android.view.WindowInsetsAnimation$Callback):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$8.m(android.view.WindowInsets$Builder,int,android.graphics.Insets):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets$Builder;ILandroid/graphics/Insets;)V"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$2.m():0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowMetrics io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$b5695396496141d2a4a17509d3a51c5da8d47d4a7cc9fb47cc5063a45bafcaeb$0.m(android.view.WindowManager):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$16.m():0:0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> e0.a:
# {"id":"sourceFile","fileName":"AccessibilityClickableSpanCompat.java"}
    int mOriginalClickableSpanId -> a
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat mNodeInfoCompat -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le0/j;"}
    int mClickableSpanActionId -> c
    1:1:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILe0/j;I)V"}
    15:18:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.performAction(int,android.os.Bundle):0:0 -> onClick
    15:18:void onClick(android.view.View):0 -> onClick
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    19:22:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.performAction(int,android.os.Bundle):0:0 -> onClick
    19:22:void onClick(android.view.View):0 -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> R8$$REMOVED$$CLASS$$80:
# {"id":"sourceFile","fileName":"AccessibilityEventCompat.java"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> e0.j:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    android.view.accessibility.AccessibilityNodeInfo mInfo -> a
    int sClickableSpanId -> b
    1:1:void <init>(android.view.accessibility.AccessibilityNodeInfo):0:0 -> <init>
    2:2:void <init>(java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/accessibility/AccessibilityNodeInfo;I)V"}
    1:1:java.util.List extrasIntList(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ljava/util/ArrayList;"}
    1:1:java.lang.String getActionSymbolicName(int):0:0 -> b
    3:12:android.os.Bundle androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getExtras():0:0 -> c
    3:12:boolean getBooleanProperty(int):0 -> c
    13:21:boolean getBooleanProperty(int):0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getBoundsInParent(android.graphics.Rect):0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
    3:3:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getBoundsInScreen(android.graphics.Rect):0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
    5:5:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getBoundsInWindow(android.graphics.Rect):0:0 -> toString
    5:5:java.lang.String toString():0 -> toString
    6:6:java.lang.String toString():0:0 -> toString
    7:7:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getPackageName():0:0 -> toString
    7:7:java.lang.String toString():0 -> toString
    8:8:java.lang.String toString():0:0 -> toString
    9:9:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getClassName():0:0 -> toString
    9:9:java.lang.String toString():0 -> toString
    10:10:java.lang.String toString():0:0 -> toString
    11:11:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.hasSpans():0:0 -> toString
    11:11:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getText():0 -> toString
    11:11:java.lang.String toString():0 -> toString
    12:12:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getText():0:0 -> toString
    12:12:java.lang.String toString():0 -> toString
    13:13:android.os.Bundle androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getExtras():0:0 -> toString
    13:13:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getText():0 -> toString
    13:13:java.lang.String toString():0 -> toString
    14:14:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getText():0:0 -> toString
    14:14:java.lang.String toString():0 -> toString
    15:15:java.lang.String toString():0:0 -> toString
    16:16:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getError():0:0 -> toString
    16:16:java.lang.String toString():0 -> toString
    17:17:java.lang.String toString():0:0 -> toString
    18:18:int androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getMaxTextLength():0:0 -> toString
    18:18:java.lang.String toString():0 -> toString
    19:19:java.lang.String toString():0:0 -> toString
    20:20:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getStateDescription():0:0 -> toString
    20:20:java.lang.String toString():0 -> toString
    21:21:java.lang.String toString():0:0 -> toString
    22:22:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getContentDescription():0:0 -> toString
    22:22:java.lang.String toString():0 -> toString
    23:23:java.lang.String toString():0:0 -> toString
    24:24:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getTooltipText():0:0 -> toString
    24:24:java.lang.String toString():0 -> toString
    25:25:java.lang.String toString():0:0 -> toString
    26:26:java.lang.String androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getViewIdResourceName():0:0 -> toString
    26:26:java.lang.String toString():0 -> toString
    27:27:java.lang.String toString():0:0 -> toString
    28:28:java.lang.String androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getUniqueId():0:0 -> toString
    28:28:java.lang.String toString():0 -> toString
    29:29:java.lang.String toString():0:0 -> toString
    30:30:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isCheckable():0:0 -> toString
    30:30:java.lang.String toString():0 -> toString
    31:31:java.lang.String toString():0:0 -> toString
    32:32:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isChecked():0:0 -> toString
    32:32:java.lang.String toString():0 -> toString
    33:33:java.lang.String toString():0:0 -> toString
    34:34:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isFocusable():0:0 -> toString
    34:34:java.lang.String toString():0 -> toString
    35:35:java.lang.String toString():0:0 -> toString
    36:36:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isFocused():0:0 -> toString
    36:36:java.lang.String toString():0 -> toString
    37:37:java.lang.String toString():0:0 -> toString
    38:38:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isSelected():0:0 -> toString
    38:38:java.lang.String toString():0 -> toString
    39:39:java.lang.String toString():0:0 -> toString
    40:40:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isClickable():0:0 -> toString
    40:40:java.lang.String toString():0 -> toString
    41:41:java.lang.String toString():0:0 -> toString
    42:42:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isLongClickable():0:0 -> toString
    42:42:java.lang.String toString():0 -> toString
    43:43:java.lang.String toString():0:0 -> toString
    44:44:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isContextClickable():0:0 -> toString
    44:44:java.lang.String toString():0 -> toString
    45:45:java.lang.String toString():0:0 -> toString
    46:46:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isEnabled():0:0 -> toString
    46:46:java.lang.String toString():0 -> toString
    47:47:java.lang.String toString():0:0 -> toString
    48:48:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isPassword():0:0 -> toString
    48:48:java.lang.String toString():0 -> toString
    49:49:java.lang.String toString():0:0 -> toString
    50:50:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isScrollable():0:0 -> toString
    50:50:java.lang.String toString():0 -> toString
    51:51:java.lang.String toString():0:0 -> toString
    52:52:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getContainerTitle():0:0 -> toString
    52:52:java.lang.String toString():0 -> toString
    53:53:java.lang.String toString():0:0 -> toString
    54:54:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isGranularScrollingSupported():0:0 -> toString
    54:54:java.lang.String toString():0 -> toString
    55:55:java.lang.String toString():0:0 -> toString
    56:56:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isImportantForAccessibility():0:0 -> toString
    56:56:java.lang.String toString():0 -> toString
    57:57:java.lang.String toString():0:0 -> toString
    58:58:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isVisibleToUser():0:0 -> toString
    58:58:java.lang.String toString():0 -> toString
    59:59:java.lang.String toString():0:0 -> toString
    60:60:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isTextSelectable():0:0 -> toString
    60:60:java.lang.String toString():0 -> toString
    61:61:java.lang.String toString():0:0 -> toString
    62:62:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isAccessibilityDataSensitive():0:0 -> toString
    62:62:java.lang.String toString():0 -> toString
    63:63:java.lang.String toString():0:0 -> toString
    64:64:java.util.List androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getActionList():0:0 -> toString
    64:64:java.lang.String toString():0 -> toString
    65:65:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(java.lang.Object):0:0 -> toString
    65:65:java.util.List androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getActionList():0 -> toString
    65:65:java.lang.String toString():0 -> toString
    66:66:java.util.List androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getActionList():0:0 -> toString
    66:66:java.lang.String toString():0 -> toString
    67:67:java.lang.String toString():0:0 -> toString
    68:68:int androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.getId():0:0 -> toString
    68:68:java.lang.String toString():0 -> toString
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    69:69:int androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.getId():0:0 -> toString
    69:69:java.lang.String toString():0 -> toString
    70:70:java.lang.String toString():0:0 -> toString
    71:71:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.getLabel():0:0 -> toString
    71:71:java.lang.String toString():0 -> toString
    72:72:java.lang.String toString():0:0 -> toString
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline2 -> e0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$5.m():0:0 -> A
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$10.m():0:0 -> B
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.widget.TextViewCompat$OreoCallback$$InternalSyntheticApiModelOutline$1$a6e6859eeeea66ecd2b0693aaf7e3b24fa0bdb27d8152169d43fcde602cd607f$0.m(android.content.Context,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$InternalSyntheticApiModelOutline$2$0f371b4564e7a29f897baad0a0948d0532c33ac9fc7c7bd8baa8cb8235106334$4.m(android.widget.TextView):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.appcompat.graphics.drawable.DrawableContainer$$InternalSyntheticApiModelOutline$1$94c22007c3260daa0b6d43eb042ea630587a5c3f25c43e1ea682c3d13d36ec5f$0.m(androidx.appcompat.graphics.drawable.DrawableContainer):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/i;)I"}
    1:1:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources$$InternalSyntheticApiModelOutline$1$0f2de0ae2fca4281e0098a00e5e2c4ae580967c43b58808c386673d2d88e96c2$0.m(android.content.Context,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$InternalSyntheticApiModelOutline$2$0f371b4564e7a29f897baad0a0948d0532c33ac9fc7c7bd8baa8cb8235106334$2.m(android.text.StaticLayout$Builder,float,float):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$InternalSyntheticApiModelOutline$2$0f371b4564e7a29f897baad0a0948d0532c33ac9fc7c7bd8baa8cb8235106334$7.m(android.text.StaticLayout$Builder,int):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$InternalSyntheticApiModelOutline$2$0f371b4564e7a29f897baad0a0948d0532c33ac9fc7c7bd8baa8cb8235106334$1.m(android.text.StaticLayout$Builder,android.text.Layout$Alignment):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$InternalSyntheticApiModelOutline$2$0f371b4564e7a29f897baad0a0948d0532c33ac9fc7c7bd8baa8cb8235106334$3.m(android.text.StaticLayout$Builder,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$InternalSyntheticApiModelOutline$2$0f371b4564e7a29f897baad0a0948d0532c33ac9fc7c7bd8baa8cb8235106334$0.m(java.lang.CharSequence,int,int,android.text.TextPaint,int):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;ILandroid/text/TextPaint;I)Landroid/text/StaticLayout$Builder;"}
    1:1:android.text.StaticLayout androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$InternalSyntheticApiModelOutline$2$0f371b4564e7a29f897baad0a0948d0532c33ac9fc7c7bd8baa8cb8235106334$11.m(android.text.StaticLayout$Builder):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$0.m():0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.appcompat.widget.AppCompatTextClassifierHelper$$InternalSyntheticApiModelOutline$1$3cbd53b0c1962dafdf7c00c0747e89eecc2f0594d722a0b0284c62cf0c2127bd$1.m(android.content.Context,java.lang.Class):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.appcompat.graphics.drawable.DrawableContainer$$InternalSyntheticApiModelOutline$1$94c22007c3260daa0b6d43eb042ea630587a5c3f25c43e1ea682c3d13d36ec5f$1.m(android.graphics.drawable.Drawable,int):0:0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/drawable/Drawable;I)V"}
    1:1:android.text.StaticLayout$Builder androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$InternalSyntheticApiModelOutline$2$0f371b4564e7a29f897baad0a0948d0532c33ac9fc7c7bd8baa8cb8235106334$8.m(android.text.StaticLayout$Builder,int):0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/StaticLayout$Builder;I)V"}
    1:1:android.text.StaticLayout$Builder androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$InternalSyntheticApiModelOutline$2$0f371b4564e7a29f897baad0a0948d0532c33ac9fc7c7bd8baa8cb8235106334$10.m(android.text.StaticLayout$Builder,android.text.TextDirectionHeuristic):0:0 -> o
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/StaticLayout$Builder;Landroid/text/TextDirectionHeuristic;)V"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$1.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.appcompat.widget.MenuPopupWindow$$InternalSyntheticApiModelOutline$1$d97a5b4959e84058cd777745bda13b325034e6369d7f67b5a8a9d8de2d3c752d$0.m(android.widget.PopupWindow,android.transition.Transition):0:0 -> q
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/x;)V"}
    1:1:boolean androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState$$InternalSyntheticApiModelOutline$1$de51b5f9ed5199eb60a1082964abebf8f7fa8984369b7601f61807f1d0c07364$0.m(android.graphics.drawable.Drawable,int):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$6915b14c7d9a13dcf2b54ed043ba2ca199a0c6ada736e0b1a091a1b1cdf6fe84$0.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$InternalSyntheticApiModelOutline$2$0f371b4564e7a29f897baad0a0948d0532c33ac9fc7c7bd8baa8cb8235106334$6.m(android.widget.TextView):0:0 -> t
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.text.StaticLayout$Builder androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$InternalSyntheticApiModelOutline$2$0f371b4564e7a29f897baad0a0948d0532c33ac9fc7c7bd8baa8cb8235106334$5.m(android.text.StaticLayout$Builder,int):0:0 -> u
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$1.m():0:0 -> v
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.appcompat.widget.MenuPopupWindow$$InternalSyntheticApiModelOutline$1$fab6f383339c26750fc4a637d19c6b2bc6d3a0dcc4f5cd5a076549ebeee47520$0.m(android.widget.PopupWindow,android.transition.Transition):0:0 -> w
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/x;)V"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$2.m():0:0 -> x
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$3.m():0:0 -> y
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$4.m():0:0 -> z
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> e0.e:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    java.lang.Object mAction -> a
    int mId -> b
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le0/e;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le0/e;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le0/e;"}
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le0/e;"}
    5:7:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    5:7:void <clinit>():0 -> <clinit>
    8:10:void <clinit>():0:0 -> <clinit>
    11:13:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    11:13:void <clinit>():0 -> <clinit>
    14:16:void <clinit>():0:0 -> <clinit>
    17:19:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    17:19:void <clinit>():0 -> <clinit>
    20:23:void <clinit>():0:0 -> <clinit>
    24:26:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    24:26:void <clinit>():0 -> <clinit>
    27:30:void <clinit>():0:0 -> <clinit>
    31:33:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    31:33:void <clinit>():0 -> <clinit>
    34:37:void <clinit>():0:0 -> <clinit>
    38:40:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    38:40:void <clinit>():0 -> <clinit>
    41:44:void <clinit>():0:0 -> <clinit>
    45:47:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    45:47:void <clinit>():0 -> <clinit>
    48:51:void <clinit>():0:0 -> <clinit>
    52:54:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    52:54:void <clinit>():0 -> <clinit>
    55:60:void <clinit>():0:0 -> <clinit>
    61:63:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence,java.lang.Class):0:0 -> <clinit>
    61:63:void <clinit>():0 -> <clinit>
    64:67:void <clinit>():0:0 -> <clinit>
    68:70:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence,java.lang.Class):0:0 -> <clinit>
    68:70:void <clinit>():0 -> <clinit>
    71:76:void <clinit>():0:0 -> <clinit>
    77:79:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence,java.lang.Class):0:0 -> <clinit>
    77:79:void <clinit>():0 -> <clinit>
    80:83:void <clinit>():0:0 -> <clinit>
    84:86:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence,java.lang.Class):0:0 -> <clinit>
    84:86:void <clinit>():0 -> <clinit>
    87:90:void <clinit>():0:0 -> <clinit>
    91:95:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    91:95:void <clinit>():0 -> <clinit>
    96:99:void <clinit>():0:0 -> <clinit>
    100:104:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    100:104:void <clinit>():0 -> <clinit>
    105:108:void <clinit>():0:0 -> <clinit>
    109:111:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    109:111:void <clinit>():0 -> <clinit>
    112:116:void <clinit>():0:0 -> <clinit>
    117:119:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    117:119:void <clinit>():0 -> <clinit>
    120:123:void <clinit>():0:0 -> <clinit>
    124:126:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    124:126:void <clinit>():0 -> <clinit>
    127:132:void <clinit>():0:0 -> <clinit>
    133:135:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence,java.lang.Class):0:0 -> <clinit>
    133:135:void <clinit>():0 -> <clinit>
    136:139:void <clinit>():0:0 -> <clinit>
    140:142:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    140:142:void <clinit>():0 -> <clinit>
    143:146:void <clinit>():0:0 -> <clinit>
    147:149:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    147:149:void <clinit>():0 -> <clinit>
    150:153:void <clinit>():0:0 -> <clinit>
    154:156:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence):0:0 -> <clinit>
    154:156:void <clinit>():0 -> <clinit>
    157:162:void <clinit>():0:0 -> <clinit>
    163:165:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(int,java.lang.CharSequence,java.lang.Class):0:0 -> <clinit>
    163:165:void <clinit>():0 -> <clinit>
    166:546:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;ILjava/lang/Class;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    24:38:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.getLabel():0:0 -> toString
    24:38:java.lang.String toString():0 -> toString
    39:50:java.lang.String toString():0:0 -> toString
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline10 -> e0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$19.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$17.m():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$18.m():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline12 -> e0.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.hardware.SyncFence io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$685e711b6a86eca5f914a3e20520c224bfc614c662da16953495279006885cfd$0.m(android.media.Image):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$9$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$0.m(int,int):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$3.m(android.media.ImageReader$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$20.m():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$9$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$1.m():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$685e711b6a86eca5f914a3e20520c224bfc614c662da16953495279006885cfd$1.m(android.hardware.SyncFence):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/hardware/SyncFence;)V"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$0.m(android.media.ImageReader$Builder,int):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/ImageReader$Builder;)V"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$1.m(android.media.ImageReader$Builder,int):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/ImageReader$Builder;)V"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$2.m(android.media.ImageReader$Builder,long):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/ImageReader$Builder;)V"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl -> e0.f:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    1:1:java.lang.Object createRangeInfo(int,float,float,float):0:0 -> a
    1:1:java.lang.CharSequence getStateDescription(android.view.accessibility.AccessibilityNodeInfo):0:0 -> b
    1:1:void setStateDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> c
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl -> e0.g:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    1:1:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat buildCollectionItemInfoCompat(boolean,int,int,int,int,boolean,java.lang.String,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZIIIIZLjava/lang/String;Ljava/lang/String;)Le0/i;"}
    7:15:androidx.core.view.accessibility.AccessibilityNodeInfoCompat androidx.core.view.accessibility.AccessibilityNodeInfoCompat.wrapNonNullInstance(java.lang.Object):0:0 -> b
    7:15:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(android.view.accessibility.AccessibilityNodeInfo,int,int):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/accessibility/AccessibilityNodeInfo;II)Le0/j;"}
    1:1:java.lang.String getCollectionItemColumnTitle(java.lang.Object):0:0 -> c
    1:1:java.lang.String getCollectionItemRowTitle(java.lang.Object):0:0 -> d
    1:1:android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo):0:0 -> e
    7:15:androidx.core.view.accessibility.AccessibilityNodeInfoCompat androidx.core.view.accessibility.AccessibilityNodeInfoCompat.wrapNonNullInstance(java.lang.Object):0:0 -> f
    7:15:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent(android.view.accessibility.AccessibilityNodeInfo,int):0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/accessibility/AccessibilityNodeInfo;I)Le0/j;"}
    1:1:java.lang.String getUniqueId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> g
    1:1:boolean isTextSelectable(android.view.accessibility.AccessibilityNodeInfo):0:0 -> h
    1:1:void setTextSelectable(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> i
    1:1:void setUniqueId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String):0:0 -> j
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl -> e0.h:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionScrollInDirection():0:0 -> a
    1:1:void getBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect):0:0 -> b
    1:1:java.lang.CharSequence getContainerTitle(android.view.accessibility.AccessibilityNodeInfo):0:0 -> c
    1:1:long getMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo):0:0 -> d
    1:1:boolean hasRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo):0:0 -> e
    1:1:boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo):0:0 -> f
    1:1:void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> g
    1:1:void setBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect):0:0 -> h
    1:1:void setContainerTitle(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> i
    1:1:void setMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo,long):0:0 -> j
    1:1:void setQueryFromAppProcessEnabled(android.view.accessibility.AccessibilityNodeInfo,android.view.View,boolean):0:0 -> k
    1:1:void setRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> l
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> R8$$REMOVED$$CLASS$$81:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> e0.i:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    java.lang.Object mInfo -> a
    1:1:void <init>(java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/accessibility/AccessibilityNodeInfo$CollectionItemInfo;)V"}
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> R8$$REMOVED$$CLASS$$82:
# {"id":"sourceFile","fileName":"AccessibilityNodeProviderCompat.java"}
androidx.core.view.accessibility.AccessibilityRecordCompat -> R8$$REMOVED$$CLASS$$83:
# {"id":"sourceFile","fileName":"AccessibilityRecordCompat.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> e0.k:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> e0.l:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> e0.m:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> e0.n:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> e0.o:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> e0.p:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> e0.q:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.autofill.AutofillIdCompat -> f0.a:
# {"id":"sourceFile","fileName":"AutofillIdCompat.java"}
androidx.core.view.contentcapture.ContentCaptureSessionCompat -> g0.a:
# {"id":"sourceFile","fileName":"ContentCaptureSessionCompat.java"}
androidx.core.widget.AutoScrollHelper -> R8$$REMOVED$$CLASS$$85:
# {"id":"sourceFile","fileName":"AutoScrollHelper.java"}
androidx.core.widget.AutoScrollHelper$ClampedScroller -> h0.a:
# {"id":"sourceFile","fileName":"AutoScrollHelper.java"}
    int mRampUpDuration -> a
    int mRampDownDuration -> b
    float mTargetVelocityX -> c
    float mTargetVelocityY -> d
    long mStartTime -> e
    long mDeltaTime -> f
    long mStopTime -> g
    float mStopValue -> h
    int mEffectiveRampDown -> i
    1:1:float getValueAt(long):0:0 -> a
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> R8$$REMOVED$$CLASS$$84:
# {"id":"sourceFile","fileName":"AutoScrollHelper.java"}
androidx.core.widget.AutoSizeableTextView -> h0.b:
# {"id":"sourceFile","fileName":"AutoSizeableTextView.java"}
    boolean PLATFORM_SUPPORTS_AUTOSIZE -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.core.widget.EdgeEffectCompat -> R8$$REMOVED$$CLASS$$86:
# {"id":"sourceFile","fileName":"EdgeEffectCompat.java"}
androidx.core.widget.EdgeEffectCompat$Api21Impl -> h0.c:
# {"id":"sourceFile","fileName":"EdgeEffectCompat.java"}
    1:1:void onPull(android.widget.EdgeEffect,float,float):0:0 -> a
androidx.core.widget.EdgeEffectCompat$Api31Impl -> h0.d:
# {"id":"sourceFile","fileName":"EdgeEffectCompat.java"}
    1:1:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet):0:0 -> a
    1:1:float getDistance(android.widget.EdgeEffect):0:0 -> b
    1:1:float onPullDistance(android.widget.EdgeEffect,float,float):0:0 -> c
androidx.core.widget.ImageViewCompat -> R8$$REMOVED$$CLASS$$87:
# {"id":"sourceFile","fileName":"ImageViewCompat.java"}
androidx.core.widget.ImageViewCompat$Api21Impl -> h0.e:
# {"id":"sourceFile","fileName":"ImageViewCompat.java"}
    1:1:android.content.res.ColorStateList getImageTintList(android.widget.ImageView):0:0 -> a
    1:1:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView):0:0 -> b
    1:1:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList):0:0 -> c
    1:1:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode):0:0 -> d
androidx.core.widget.ListViewAutoScrollHelper -> h0.f:
# {"id":"sourceFile","fileName":"ListViewAutoScrollHelper.java"}
    androidx.core.widget.AutoScrollHelper$ClampedScroller androidx.core.widget.AutoScrollHelper.mScroller -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh0/a;"}
    android.view.animation.Interpolator androidx.core.widget.AutoScrollHelper.mEdgeInterpolator -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroid/view/animation/AccelerateInterpolator;"}
    android.view.View androidx.core.widget.AutoScrollHelper.mTarget -> c
    java.lang.Runnable androidx.core.widget.AutoScrollHelper.mRunnable -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/f;"}
    float[] androidx.core.widget.AutoScrollHelper.mRelativeEdges -> e
    float[] androidx.core.widget.AutoScrollHelper.mMaximumEdges -> f
    int androidx.core.widget.AutoScrollHelper.mEdgeType -> g
    int androidx.core.widget.AutoScrollHelper.mActivationDelay -> h
    float[] androidx.core.widget.AutoScrollHelper.mRelativeVelocity -> i
    float[] androidx.core.widget.AutoScrollHelper.mMinimumVelocity -> j
    float[] androidx.core.widget.AutoScrollHelper.mMaximumVelocity -> k
    boolean androidx.core.widget.AutoScrollHelper.mAlreadyDelayed -> l
    boolean androidx.core.widget.AutoScrollHelper.mNeedsReset -> m
    boolean androidx.core.widget.AutoScrollHelper.mNeedsCancel -> n
    boolean androidx.core.widget.AutoScrollHelper.mAnimating -> o
    boolean androidx.core.widget.AutoScrollHelper.mEnabled -> p
    android.widget.ListView mTarget -> q
    int androidx.core.widget.AutoScrollHelper.DEFAULT_ACTIVATION_DELAY -> r
    1:1:void androidx.core.widget.AutoScrollHelper.<clinit>():0:0 -> <clinit>
    1:5:void androidx.core.widget.AutoScrollHelper.<init>(android.view.View):0:0 -> <init>
    1:5:void <init>(android.widget.ListView):0 -> <init>
    6:22:void androidx.core.widget.AutoScrollHelper$ClampedScroller.<init>():0:0 -> <init>
    6:22:void androidx.core.widget.AutoScrollHelper.<init>(android.view.View):0 -> <init>
    6:22:void <init>(android.widget.ListView):0 -> <init>
    23:100:void androidx.core.widget.AutoScrollHelper.<init>(android.view.View):0:0 -> <init>
    23:100:void <init>(android.widget.ListView):0 -> <init>
    101:109:androidx.core.widget.AutoScrollHelper androidx.core.widget.AutoScrollHelper.setMaximumVelocity(float,float):0:0 -> <init>
    101:109:void androidx.core.widget.AutoScrollHelper.<init>(android.view.View):0 -> <init>
    101:109:void <init>(android.widget.ListView):0 -> <init>
    110:120:androidx.core.widget.AutoScrollHelper androidx.core.widget.AutoScrollHelper.setMinimumVelocity(float,float):0:0 -> <init>
    110:120:void androidx.core.widget.AutoScrollHelper.<init>(android.view.View):0 -> <init>
    110:120:void <init>(android.widget.ListView):0 -> <init>
    121:129:androidx.core.widget.AutoScrollHelper androidx.core.widget.AutoScrollHelper.setMaximumEdges(float,float):0:0 -> <init>
    121:129:void androidx.core.widget.AutoScrollHelper.<init>(android.view.View):0 -> <init>
    121:129:void <init>(android.widget.ListView):0 -> <init>
    130:138:androidx.core.widget.AutoScrollHelper androidx.core.widget.AutoScrollHelper.setRelativeEdges(float,float):0:0 -> <init>
    130:138:void androidx.core.widget.AutoScrollHelper.<init>(android.view.View):0 -> <init>
    130:138:void <init>(android.widget.ListView):0 -> <init>
    139:156:androidx.core.widget.AutoScrollHelper androidx.core.widget.AutoScrollHelper.setRelativeVelocity(float,float):0:0 -> <init>
    139:156:void androidx.core.widget.AutoScrollHelper.<init>(android.view.View):0 -> <init>
    139:156:void <init>(android.widget.ListView):0 -> <init>
    3:11:float androidx.core.widget.AutoScrollHelper.computeTargetVelocity(int,float,float,float):0:0 -> a
    3:11:float computeTargetVelocity(int,float,float,float):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    12:63:float androidx.core.widget.AutoScrollHelper.getEdgeValue(float,float,float,float):0:0 -> a
    12:63:float androidx.core.widget.AutoScrollHelper.computeTargetVelocity(int,float,float,float):0 -> a
    12:63:float computeTargetVelocity(int,float,float,float):0 -> a
    64:93:float androidx.core.widget.AutoScrollHelper.computeTargetVelocity(int,float,float,float):0:0 -> a
    64:93:float computeTargetVelocity(int,float,float,float):0 -> a
    1:1:float androidx.core.widget.AutoScrollHelper.constrain(float,float,float):0:0 -> b
    1:1:float constrainEdgeValue(float,float):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    71:72:void androidx.core.widget.AutoScrollHelper$ClampedScroller.setTargetVelocity(float,float):0:0 -> d
    71:72:boolean androidx.core.widget.AutoScrollHelper.onTouch(android.view.View,android.view.MotionEvent):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    73:78:void androidx.core.widget.AutoScrollHelper$ClampedScroller.setTargetVelocity(float,float):0:0 -> d
    73:78:boolean androidx.core.widget.AutoScrollHelper.onTouch(android.view.View,android.view.MotionEvent):0 -> d
    79:88:boolean androidx.core.widget.AutoScrollHelper.onTouch(android.view.View,android.view.MotionEvent):0:0 -> d
    89:112:void androidx.core.widget.AutoScrollHelper.startAnimating():0:0 -> d
    89:112:boolean androidx.core.widget.AutoScrollHelper.onTouch(android.view.View,android.view.MotionEvent):0 -> d
    113:118:void androidx.core.view.ViewCompat.postOnAnimationDelayed(android.view.View,java.lang.Runnable,long):0:0 -> d
    113:118:void androidx.core.widget.AutoScrollHelper.startAnimating():0 -> d
    113:118:boolean androidx.core.widget.AutoScrollHelper.onTouch(android.view.View,android.view.MotionEvent):0 -> d
    119:124:void androidx.core.widget.AutoScrollHelper.startAnimating():0:0 -> d
    119:124:boolean androidx.core.widget.AutoScrollHelper.onTouch(android.view.View,android.view.MotionEvent):0 -> d
    11:13:void androidx.core.widget.AutoScrollHelper.requestStop():0:0 -> e
    11:13:void requestStop():0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    14:43:void androidx.core.widget.AutoScrollHelper$ClampedScroller.requestStop():0:0 -> e
    14:43:void androidx.core.widget.AutoScrollHelper.requestStop():0 -> e
    14:43:void requestStop():0 -> e
    3:4:int androidx.core.widget.AutoScrollHelper$ClampedScroller.getVerticalDirection():0:0 -> f
    3:4:boolean androidx.core.widget.AutoScrollHelper.shouldAnimate():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:4:boolean shouldAnimate():0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    5:10:int androidx.core.widget.AutoScrollHelper$ClampedScroller.getVerticalDirection():0:0 -> f
    5:10:boolean androidx.core.widget.AutoScrollHelper.shouldAnimate():0 -> f
    5:10:boolean shouldAnimate():0 -> f
    11:20:int androidx.core.widget.AutoScrollHelper$ClampedScroller.getHorizontalDirection():0:0 -> f
    11:20:boolean androidx.core.widget.AutoScrollHelper.shouldAnimate():0 -> f
    11:20:boolean shouldAnimate():0 -> f
    21:75:boolean androidx.core.widget.ListViewAutoScrollHelper.canTargetScrollVertically(int):0:0 -> f
    21:75:boolean androidx.core.widget.AutoScrollHelper.shouldAnimate():0 -> f
    21:75:boolean shouldAnimate():0 -> f
    1:5:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    float mVerticalScrollFactor -> A
    androidx.core.view.DifferentialMotionFlingController mDifferentialMotionFlingController -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld0/d;"}
    float DECELERATION_RATE -> C
    androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh0/g;"}
    int[] SCROLLVIEW_STYLEABLE -> E
    float mPhysicalCoeff -> b
    long mLastScroll -> c
    android.graphics.Rect mTempRect -> d
    android.widget.OverScroller mScroller -> e
    android.widget.EdgeEffect mEdgeGlowTop -> f
    android.widget.EdgeEffect mEdgeGlowBottom -> g
    int mLastMotionY -> h
    boolean mIsLayoutDirty -> i
    boolean mIsLaidOut -> j
    android.view.View mChildToScrollTo -> k
    boolean mIsBeingDragged -> l
    android.view.VelocityTracker mVelocityTracker -> m
    boolean mFillViewport -> n
    boolean mSmoothScrollingEnabled -> o
    int mTouchSlop -> p
    int mMinimumVelocity -> q
    int mMaximumVelocity -> r
    int mActivePointerId -> s
    int[] mScrollOffset -> t
    int[] mScrollConsumed -> u
    int mNestedYOffset -> v
    int mLastScrollerY -> w
    androidx.core.widget.NestedScrollView$SavedState mSavedState -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh0/k;"}
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld0/j;"}
    androidx.core.view.NestedScrollingChildHelper mChildHelper -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld0/g;"}
    25:39:void androidx.core.widget.NestedScrollView$AccessibilityDelegate.<init>():0:0 -> <clinit>
    25:39:void <clinit>():0 -> <clinit>
    4:61:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    4:61:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    62:87:android.widget.EdgeEffect androidx.core.widget.EdgeEffectCompat.create(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    62:87:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    62:87:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    88:113:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    88:113:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    114:163:void initScrollView():0:0 -> <init>
    114:163:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    114:163:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    164:200:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    164:200:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:11:void androidx.core.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> a
    6:11:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:15:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> a
    1:1:void addView(android.view.View):0:0 -> addView
    2:2:void addView(android.view.View,int):0:0 -> addView
    3:3:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams):0:0 -> addView
    4:4:void addView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> addView
    1:1:void onNestedScroll(android.view.View,int,int,int,int,int,int[]):0:0 -> b
    1:1:void onNestedScroll(android.view.View,int,int,int,int,int):0:0 -> c
    25:111:int consumeFlingInVerticalStretch(int):0:0 -> computeScroll
    25:111:void computeScroll():0 -> computeScroll
    112:120:void computeScroll():0:0 -> computeScroll
    121:123:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> computeScroll
    121:123:void computeScroll():0 -> computeScroll
    124:161:void computeScroll():0:0 -> computeScroll
    162:164:void androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[],int,int[]):0:0 -> computeScroll
    162:164:void dispatchNestedScroll(int,int,int,int,int[],int,int[]):0 -> computeScroll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    162:164:void computeScroll():0 -> computeScroll
    165:216:void computeScroll():0:0 -> computeScroll
    217:224:void abortAnimatedScroll():0:0 -> computeScroll
    217:224:void computeScroll():0 -> computeScroll
    225:238:void computeScroll():0:0 -> computeScroll
    7:11:void androidx.core.view.NestedScrollingParentHelper.onStopNestedScroll(android.view.View,int):0:0 -> d
    7:11:void onStopNestedScroll(android.view.View,int):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:15:void onStopNestedScroll(android.view.View,int):0:0 -> d
    9:11:boolean executeKeyEvent(android.view.KeyEvent):0:0 -> dispatchKeyEvent
    9:11:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    12:56:boolean canScroll():0:0 -> dispatchKeyEvent
    12:56:boolean executeKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    12:56:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    57:190:boolean executeKeyEvent(android.view.KeyEvent):0:0 -> dispatchKeyEvent
    57:190:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    8:12:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> dispatchNestedPreScroll
    8:12:boolean dispatchNestedPreScroll(int,int,int[],int[]):0 -> dispatchNestedPreScroll
    10:14:boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[]):0:0 -> dispatchNestedScroll
    10:14:boolean dispatchNestedScroll(int,int,int,int,int[]):0 -> dispatchNestedScroll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:11:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> e
    8:11:void onNestedPreScroll(android.view.View,int,int,int[],int):0 -> e
    1:1:boolean onStartNestedScroll(android.view.View,android.view.View,int,int):0:0 -> f
    132:142:boolean isOffScreen(android.view.View):0:0 -> g
    132:142:boolean arrowScroll(int):0 -> g
    143:158:boolean arrowScroll(int):0:0 -> g
    3:4:int androidx.core.view.NestedScrollingParentHelper.getNestedScrollAxes():0:0 -> getNestedScrollAxes
    3:4:int getNestedScrollAxes():0 -> getNestedScrollAxes
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:8:int androidx.core.view.NestedScrollingParentHelper.getNestedScrollAxes():0:0 -> getNestedScrollAxes
    5:8:int getNestedScrollAxes():0 -> getNestedScrollAxes
    1:1:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect):0:0 -> h
    4:8:boolean hasNestedScrollingParent(int):0:0 -> hasNestedScrollingParent
    4:8:boolean hasNestedScrollingParent():0 -> hasNestedScrollingParent
    33:45:void runAnimatedScroll(boolean):0:0 -> i
    33:45:void fling(int):0 -> i
    3:5:boolean androidx.core.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> isNestedScrollingEnabled
    3:5:boolean isNestedScrollingEnabled():0 -> isNestedScrollingEnabled
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:boolean fullScroll(int):0:0 -> j
    1:1:boolean isViewDescendantOf(android.view.View,android.view.View):0:0 -> k
    1:1:boolean isWithinDeltaOfScreen(android.view.View,int,int):0:0 -> l
    32:35:void androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[],int,int[]):0:0 -> m
    32:35:void onNestedScrollInternal(int,int,int[]):0 -> m
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void onSecondaryPointerUp(android.view.MotionEvent):0:0 -> n
    44:54:boolean hasNestedScrollingParent(int):0:0 -> o
    44:54:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean):0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Z"}
    55:73:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean):0:0 -> o
    1:1:boolean androidx.core.view.MotionEventCompat.isFromSource(android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    1:1:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    2:2:boolean onGenericMotionEvent(android.view.MotionEvent):0:0 -> onGenericMotionEvent
    3:3:boolean androidx.core.view.MotionEventCompat.isFromSource(android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    3:3:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    4:4:boolean onGenericMotionEvent(android.view.MotionEvent):0:0 -> onGenericMotionEvent
    5:5:boolean androidx.core.view.MotionEventCompat.isFromSource(android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    5:5:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    6:6:boolean onGenericMotionEvent(android.view.MotionEvent):0:0 -> onGenericMotionEvent
    7:7:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    7:7:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    7:7:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    8:9:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    8:9:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    8:9:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    8:9:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    10:10:int androidx.core.view.ViewConfigurationCompat.getScaledMinimumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int):0:0 -> onGenericMotionEvent
    10:10:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0 -> onGenericMotionEvent
    10:10:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    10:10:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    10:10:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    11:11:boolean androidx.core.view.ViewConfigurationCompat.isInputDeviceInfoValid(int,int,int):0:0 -> onGenericMotionEvent
    11:11:int androidx.core.view.ViewConfigurationCompat.getScaledMinimumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int):0 -> onGenericMotionEvent
    11:11:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0 -> onGenericMotionEvent
    11:11:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    11:11:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    11:11:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    12:12:int androidx.core.view.ViewConfigurationCompat.getScaledMinimumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int):0:0 -> onGenericMotionEvent
    12:12:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0 -> onGenericMotionEvent
    12:12:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    12:12:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    12:12:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    13:13:int androidx.core.view.ViewConfigurationCompat.getPlatformResId(android.content.res.Resources,java.lang.String,java.lang.String):0:0 -> onGenericMotionEvent
    13:13:int androidx.core.view.ViewConfigurationCompat.getPreApi34MinimumFlingVelocityResId(android.content.res.Resources,int,int):0 -> onGenericMotionEvent
    13:13:int androidx.core.view.ViewConfigurationCompat.getScaledMinimumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int):0 -> onGenericMotionEvent
    13:13:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0 -> onGenericMotionEvent
    13:13:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    13:13:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    13:13:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    14:14:int androidx.core.view.ViewConfigurationCompat.getScaledMinimumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int):0:0 -> onGenericMotionEvent
    14:14:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0 -> onGenericMotionEvent
    14:14:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    14:14:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    14:14:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    15:15:int androidx.core.view.ViewConfigurationCompat.getCompatFlingVelocityThreshold(android.content.res.Resources,int,androidx.core.util.Supplier,int):0:0 -> onGenericMotionEvent
    15:15:int androidx.core.view.ViewConfigurationCompat.getScaledMinimumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int):0 -> onGenericMotionEvent
    15:15:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0 -> onGenericMotionEvent
    15:15:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    15:15:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    15:15:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    16:16:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    16:16:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    16:16:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    16:16:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    17:17:int androidx.core.view.ViewConfigurationCompat.getScaledMaximumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int):0:0 -> onGenericMotionEvent
    17:17:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0 -> onGenericMotionEvent
    17:17:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    17:17:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    17:17:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    18:18:boolean androidx.core.view.ViewConfigurationCompat.isInputDeviceInfoValid(int,int,int):0:0 -> onGenericMotionEvent
    18:18:int androidx.core.view.ViewConfigurationCompat.getScaledMaximumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int):0 -> onGenericMotionEvent
    18:18:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0 -> onGenericMotionEvent
    18:18:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    18:18:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    18:18:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    19:19:int androidx.core.view.ViewConfigurationCompat.getScaledMaximumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int):0:0 -> onGenericMotionEvent
    19:19:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0 -> onGenericMotionEvent
    19:19:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    19:19:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    19:19:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    20:20:int androidx.core.view.ViewConfigurationCompat.getPlatformResId(android.content.res.Resources,java.lang.String,java.lang.String):0:0 -> onGenericMotionEvent
    20:20:int androidx.core.view.ViewConfigurationCompat.getPreApi34MaximumFlingVelocityResId(android.content.res.Resources,int,int):0 -> onGenericMotionEvent
    20:20:int androidx.core.view.ViewConfigurationCompat.getScaledMaximumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int):0 -> onGenericMotionEvent
    20:20:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0 -> onGenericMotionEvent
    20:20:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    20:20:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    20:20:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    21:21:int androidx.core.view.ViewConfigurationCompat.getScaledMaximumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int):0:0 -> onGenericMotionEvent
    21:21:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0 -> onGenericMotionEvent
    21:21:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    21:21:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    21:21:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    22:22:int androidx.core.view.ViewConfigurationCompat.getCompatFlingVelocityThreshold(android.content.res.Resources,int,androidx.core.util.Supplier,int):0:0 -> onGenericMotionEvent
    22:22:int androidx.core.view.ViewConfigurationCompat.getScaledMaximumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int):0 -> onGenericMotionEvent
    22:22:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0 -> onGenericMotionEvent
    22:22:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    22:22:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    22:22:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    23:23:void androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    23:23:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    23:23:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    23:23:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    24:24:boolean androidx.core.view.DifferentialMotionFlingController.calculateFlingVelocityThresholds(android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    24:24:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    24:24:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    25:25:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    25:25:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    26:26:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    26:26:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    26:26:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    27:27:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    27:27:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    27:27:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    27:27:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    28:28:void androidx.core.view.VelocityTrackerCompat.addMovement(android.view.VelocityTracker,android.view.MotionEvent):0:0 -> onGenericMotionEvent
    28:28:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    28:28:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    28:28:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    28:28:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    29:29:void androidx.core.view.VelocityTrackerFallback.addMovement(android.view.MotionEvent):0:0 -> onGenericMotionEvent
    29:29:void androidx.core.view.VelocityTrackerCompat.addMovement(android.view.VelocityTracker,android.view.MotionEvent):0 -> onGenericMotionEvent
    29:29:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    29:29:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    29:29:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    29:29:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    30:30:void androidx.core.view.VelocityTrackerFallback.clear():0:0 -> onGenericMotionEvent
    30:30:void androidx.core.view.VelocityTrackerFallback.addMovement(android.view.MotionEvent):0 -> onGenericMotionEvent
    30:30:void androidx.core.view.VelocityTrackerCompat.addMovement(android.view.VelocityTracker,android.view.MotionEvent):0 -> onGenericMotionEvent
    30:30:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    30:30:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    30:30:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    30:30:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    31:31:void androidx.core.view.VelocityTrackerFallback.addMovement(android.view.MotionEvent):0:0 -> onGenericMotionEvent
    31:31:void androidx.core.view.VelocityTrackerCompat.addMovement(android.view.VelocityTracker,android.view.MotionEvent):0 -> onGenericMotionEvent
    31:31:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    31:31:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    31:31:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    31:31:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    32:32:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int,float):0:0 -> onGenericMotionEvent
    32:32:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int):0 -> onGenericMotionEvent
    32:32:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    32:32:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    32:32:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    32:32:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    33:33:androidx.core.view.VelocityTrackerFallback androidx.core.view.VelocityTrackerCompat.getFallbackTrackerOrNull(android.view.VelocityTracker):0:0 -> onGenericMotionEvent
    33:33:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int,float):0 -> onGenericMotionEvent
    33:33:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int):0 -> onGenericMotionEvent
    33:33:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    33:33:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    33:33:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    33:33:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    34:34:float androidx.core.view.VelocityTrackerFallback.getCurrentVelocity():0:0 -> onGenericMotionEvent
    34:34:void androidx.core.view.VelocityTrackerFallback.computeCurrentVelocity(int,float):0 -> onGenericMotionEvent
    34:34:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int,float):0 -> onGenericMotionEvent
    34:34:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int):0 -> onGenericMotionEvent
    34:34:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    34:34:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    34:34:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    34:34:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    35:35:float androidx.core.view.VelocityTrackerFallback.kineticEnergyToVelocity(float):0:0 -> onGenericMotionEvent
    35:35:float androidx.core.view.VelocityTrackerFallback.getCurrentVelocity():0 -> onGenericMotionEvent
    35:35:void androidx.core.view.VelocityTrackerFallback.computeCurrentVelocity(int,float):0 -> onGenericMotionEvent
    35:35:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int,float):0 -> onGenericMotionEvent
    35:35:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int):0 -> onGenericMotionEvent
    35:35:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    35:35:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    35:35:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    35:35:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    36:36:float androidx.core.view.VelocityTrackerFallback.getCurrentVelocity():0:0 -> onGenericMotionEvent
    36:36:void androidx.core.view.VelocityTrackerFallback.computeCurrentVelocity(int,float):0 -> onGenericMotionEvent
    36:36:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int,float):0 -> onGenericMotionEvent
    36:36:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int):0 -> onGenericMotionEvent
    36:36:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    36:36:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    36:36:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    36:36:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    37:37:float androidx.core.view.VelocityTrackerFallback.kineticEnergyToVelocity(float):0:0 -> onGenericMotionEvent
    37:37:float androidx.core.view.VelocityTrackerFallback.getCurrentVelocity():0 -> onGenericMotionEvent
    37:37:void androidx.core.view.VelocityTrackerFallback.computeCurrentVelocity(int,float):0 -> onGenericMotionEvent
    37:37:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int,float):0 -> onGenericMotionEvent
    37:37:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int):0 -> onGenericMotionEvent
    37:37:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    37:37:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    37:37:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    37:37:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    38:38:void androidx.core.view.VelocityTrackerFallback.computeCurrentVelocity(int,float):0:0 -> onGenericMotionEvent
    38:38:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int,float):0 -> onGenericMotionEvent
    38:38:void androidx.core.view.VelocityTrackerCompat.computeCurrentVelocity(android.view.VelocityTracker,int):0 -> onGenericMotionEvent
    38:38:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    38:38:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    38:38:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    38:38:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    39:39:float androidx.core.view.VelocityTrackerCompat.getAxisVelocity(android.view.VelocityTracker,int):0:0 -> onGenericMotionEvent
    39:39:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    39:39:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    39:39:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    39:39:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    40:40:androidx.core.view.VelocityTrackerFallback androidx.core.view.VelocityTrackerCompat.getFallbackTrackerOrNull(android.view.VelocityTracker):0:0 -> onGenericMotionEvent
    40:40:float androidx.core.view.VelocityTrackerCompat.getAxisVelocity(android.view.VelocityTracker,int):0 -> onGenericMotionEvent
    40:40:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    40:40:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    40:40:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    40:40:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    41:41:float androidx.core.view.VelocityTrackerFallback.getAxisVelocity(int):0:0 -> onGenericMotionEvent
    41:41:float androidx.core.view.VelocityTrackerCompat.getAxisVelocity(android.view.VelocityTracker,int):0 -> onGenericMotionEvent
    41:41:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    41:41:float androidx.core.view.DifferentialMotionFlingController.getCurrentVelocity(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    41:41:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    41:41:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    42:42:float androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl.getScaledScrollFactor():0:0 -> onGenericMotionEvent
    42:42:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    42:42:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    43:43:float androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl.getScaledScrollFactor():0:0 -> onGenericMotionEvent
    43:43:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    43:43:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    44:44:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    44:44:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    45:45:void androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl.stopDifferentialMotionFling():0:0 -> onGenericMotionEvent
    45:45:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    45:45:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    46:46:android.widget.OverScroller access$000(androidx.core.widget.NestedScrollView):0:0 -> onGenericMotionEvent
    46:46:void androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl.stopDifferentialMotionFling():0 -> onGenericMotionEvent
    46:46:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    46:46:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    47:47:void androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl.stopDifferentialMotionFling():0:0 -> onGenericMotionEvent
    47:47:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    47:47:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    48:48:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    48:48:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    49:49:void androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl.stopDifferentialMotionFling():0:0 -> onGenericMotionEvent
    49:49:boolean androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl.startDifferentialMotionFling(float):0 -> onGenericMotionEvent
    49:49:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    49:49:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    50:50:android.widget.OverScroller access$000(androidx.core.widget.NestedScrollView):0:0 -> onGenericMotionEvent
    50:50:void androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl.stopDifferentialMotionFling():0 -> onGenericMotionEvent
    50:50:boolean androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl.startDifferentialMotionFling(float):0 -> onGenericMotionEvent
    50:50:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    50:50:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    51:51:void androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl.stopDifferentialMotionFling():0:0 -> onGenericMotionEvent
    51:51:boolean androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl.startDifferentialMotionFling(float):0 -> onGenericMotionEvent
    51:51:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    51:51:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    52:52:boolean androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl.startDifferentialMotionFling(float):0:0 -> onGenericMotionEvent
    52:52:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0 -> onGenericMotionEvent
    52:52:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    53:53:void androidx.core.view.DifferentialMotionFlingController.onMotionEvent(android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    53:53:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    108:115:void initVelocityTrackerIfNotExists():0:0 -> onInterceptTouchEvent
    108:115:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    116:139:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    140:146:void recycleVelocityTracker():0:0 -> onInterceptTouchEvent
    140:146:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    147:185:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    186:227:boolean inChild(int,int):0:0 -> onInterceptTouchEvent
    186:227:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    228:237:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    238:249:void initOrResetVelocityTracker():0:0 -> onInterceptTouchEvent
    238:249:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    250:301:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    302:309:void recycleVelocityTracker():0:0 -> onInterceptTouchEvent
    302:309:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    21:46:void scrollToChild(android.view.View):0:0 -> onLayout
    21:46:void onLayout(boolean,int,int,int,int):0 -> onLayout
    47:139:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    8:11:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> onNestedPreScroll
    8:11:void onNestedPreScroll(android.view.View,int,int,int[],int):0 -> onNestedPreScroll
    8:11:void onNestedPreScroll(android.view.View,int,int,int[]):0 -> onNestedPreScroll
    32:43:boolean isOffScreen(android.view.View):0:0 -> onRequestFocusInDescendants
    32:43:boolean onRequestFocusInDescendants(int,android.graphics.Rect):0 -> onRequestFocusInDescendants
    44:48:boolean onRequestFocusInDescendants(int,android.graphics.Rect):0:0 -> onRequestFocusInDescendants
    7:9:void androidx.core.widget.NestedScrollView$SavedState.<init>(android.os.Parcelable):0:0 -> onSaveInstanceState
    7:9:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    10:16:android.os.Parcelable onSaveInstanceState():0:0 -> onSaveInstanceState
    38:41:void smoothScrollBy(int,int):0:0 -> onSizeChanged
    38:41:void doScrollY(int):0 -> onSizeChanged
    38:41:void onSizeChanged(int,int,int,int):0 -> onSizeChanged
    42:45:void doScrollY(int):0:0 -> onSizeChanged
    42:45:void onSizeChanged(int,int,int,int):0 -> onSizeChanged
    9:14:void initVelocityTrackerIfNotExists():0:0 -> onTouchEvent
    9:14:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    15:142:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    143:147:void recycleVelocityTracker():0:0 -> onTouchEvent
    143:147:void endTouchDrag():0 -> onTouchEvent
    143:147:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    148:164:void endTouchDrag():0:0 -> onTouchEvent
    148:164:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    165:210:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    211:298:int releaseVerticalGlow(int,float):0:0 -> onTouchEvent
    211:298:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    299:372:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    373:416:boolean edgeEffectFling(int):0:0 -> onTouchEvent
    373:416:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    417:465:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    466:470:void recycleVelocityTracker():0:0 -> onTouchEvent
    466:470:void endTouchDrag():0 -> onTouchEvent
    466:470:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    471:484:void endTouchDrag():0:0 -> onTouchEvent
    471:484:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    485:514:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    515:520:void abortAnimatedScroll():0:0 -> onTouchEvent
    515:520:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    521:533:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    534:540:void initializeTouchDrag(int,int):0:0 -> onTouchEvent
    534:540:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    541:547:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:boolean pageScroll(int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    26:126:android.view.View findFocusableViewInBounds(boolean,int,int):0:0 -> q
    26:126:boolean scrollAndFocus(int,int,int):0 -> q
    127:140:boolean scrollAndFocus(int,int,int):0:0 -> q
    25:35:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> r
    25:35:int scrollBy(int,int,int,boolean):0 -> r
    36:55:int scrollBy(int,int,int,boolean):0:0 -> r
    56:76:boolean canOverScroll():0:0 -> r
    56:76:int scrollBy(int,int,int,boolean):0 -> r
    77:84:int scrollBy(int,int,int,boolean):0:0 -> r
    85:95:boolean hasNestedScrollingParent(int):0:0 -> r
    85:95:int scrollBy(int,int,int,boolean):0 -> r
    96:118:int scrollBy(int,int,int,boolean):0:0 -> r
    119:121:void androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[],int,int[]):0:0 -> r
    119:121:void dispatchNestedScroll(int,int,int,int,int[],int,int[]):0 -> r
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    119:121:int scrollBy(int,int,int,boolean):0 -> r
    122:240:int scrollBy(int,int,int,boolean):0:0 -> r
    7:25:void scrollToChild(android.view.View):0:0 -> requestChildFocus
    7:25:void requestChildFocus(android.view.View,android.view.View):0 -> requestChildFocus
    26:29:void requestChildFocus(android.view.View,android.view.View):0:0 -> requestChildFocus
    22:39:boolean scrollToChildRect(android.graphics.Rect,boolean):0:0 -> requestChildRectangleOnScreen
    22:39:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean):0 -> requestChildRectangleOnScreen
    40:43:void smoothScrollBy(int,int):0:0 -> requestChildRectangleOnScreen
    40:43:boolean scrollToChildRect(android.graphics.Rect,boolean):0 -> requestChildRectangleOnScreen
    40:43:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean):0 -> requestChildRectangleOnScreen
    7:12:void recycleVelocityTracker():0:0 -> requestDisallowInterceptTouchEvent
    7:12:void requestDisallowInterceptTouchEvent(boolean):0 -> requestDisallowInterceptTouchEvent
    13:16:void requestDisallowInterceptTouchEvent(boolean):0:0 -> requestDisallowInterceptTouchEvent
    17:64:float getSplineFlingDistance(int):0:0 -> s
    17:64:boolean shouldAbsorb(android.widget.EdgeEffect,int):0 -> s
    92:107:void scrollTo(int,int):0:0 -> scrollTo
    3:6:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    3:6:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:8:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    7:8:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    9:13:void androidx.core.view.ViewCompat.stopNestedScroll(android.view.View):0:0 -> setNestedScrollingEnabled
    9:13:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    9:13:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    14:16:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    14:16:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    1:1:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener):0:0 -> setOnScrollChangeListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/i;)V"}
    4:8:boolean startNestedScroll(int,int):0:0 -> startNestedScroll
    4:8:boolean startNestedScroll(int):0 -> startNestedScroll
    92:110:void runAnimatedScroll(boolean):0:0 -> t
    92:110:void smoothScrollBy(int,int,int,boolean):0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIZ)V"}
    111:118:void smoothScrollBy(int,int,int,boolean):0:0 -> t
    119:124:void abortAnimatedScroll():0:0 -> t
    119:124:void smoothScrollBy(int,int,int,boolean):0 -> t
    125:134:void smoothScrollBy(int,int,int,boolean):0:0 -> t
    1:1:boolean startNestedScroll(int,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)V"}
    1:1:boolean stopGlowAnimations(android.view.MotionEvent):0:0 -> v
    1:1:void stopNestedScroll(int):0:0 -> w
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> h0.g:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    45:47:void androidx.core.view.accessibility.AccessibilityRecordCompat.setMaxScrollX(android.view.accessibility.AccessibilityRecord,int):0:0 -> a
    45:47:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> a
    48:51:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> a
    52:55:void androidx.core.view.accessibility.AccessibilityRecordCompat.setMaxScrollY(android.view.accessibility.AccessibilityRecord,int):0:0 -> a
    52:55:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> a
    3:7:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    3:7:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Le0/j;)V"}
    8:15:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    16:18:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setClassName(java.lang.CharSequence):0:0 -> b
    16:18:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    19:31:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    32:34:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setScrollable(boolean):0:0 -> b
    32:34:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    35:42:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    43:49:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):0:0 -> b
    43:49:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    50:51:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    52:58:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):0:0 -> b
    52:58:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    59:66:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    67:73:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):0:0 -> b
    67:73:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    74:75:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    76:83:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):0:0 -> b
    76:83:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    92:106:void androidx.core.widget.NestedScrollView.smoothScrollTo(int,int,int,boolean):0:0 -> c
    92:106:void androidx.core.widget.NestedScrollView.smoothScrollTo(int,int,boolean):0 -> c
    92:106:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    107:135:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> c
    136:150:void androidx.core.widget.NestedScrollView.smoothScrollTo(int,int,int,boolean):0:0 -> c
    136:150:void androidx.core.widget.NestedScrollView.smoothScrollTo(int,int,boolean):0 -> c
    136:150:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
androidx.core.widget.NestedScrollView$Api21Impl -> h0.h:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    1:1:boolean getClipToPadding(android.view.ViewGroup):0:0 -> a
androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl -> R8$$REMOVED$$CLASS$$88:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
androidx.core.widget.NestedScrollView$OnScrollChangeListener -> h0.i:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
androidx.core.widget.NestedScrollView$SavedState -> h0.k:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    int scrollPosition -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> h0.j:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:6:void androidx.core.widget.NestedScrollView$SavedState$1.<init>():0:0 -> <init>
    1:6:void $r8$init$synthetic(int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    8:13:androidx.versionedparcelable.ParcelImpl androidx.versionedparcelable.ParcelImpl$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    8:13:java.lang.Object androidx.versionedparcelable.ParcelImpl$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    8:13:java.lang.Object createFromParcel$bridge(android.os.Parcel):0 -> createFromParcel
      # {"id":"com.android.tools.r8.synthesized"}
    14:15:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    14:15:java.lang.Object androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    14:15:java.lang.Object createFromParcel$bridge(android.os.Parcel):0 -> createFromParcel
    16:105:void androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState.<init>(android.os.Parcel):0:0 -> createFromParcel
    16:105:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    16:105:java.lang.Object androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    16:105:java.lang.Object createFromParcel$bridge(android.os.Parcel):0 -> createFromParcel
    106:107:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    106:107:java.lang.Object androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    106:107:java.lang.Object createFromParcel$bridge(android.os.Parcel):0 -> createFromParcel
    108:146:void androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem.<init>(android.os.Parcel):0:0 -> createFromParcel
    108:146:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    108:146:java.lang.Object androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    108:146:java.lang.Object createFromParcel$bridge(android.os.Parcel):0 -> createFromParcel
    147:148:androidx.recyclerview.widget.LinearLayoutManager$SavedState androidx.recyclerview.widget.LinearLayoutManager$SavedState$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    147:148:java.lang.Object androidx.recyclerview.widget.LinearLayoutManager$SavedState$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    147:148:java.lang.Object createFromParcel$bridge(android.os.Parcel):0 -> createFromParcel
    149:174:void androidx.recyclerview.widget.LinearLayoutManager$SavedState.<init>(android.os.Parcel):0:0 -> createFromParcel
    149:174:androidx.recyclerview.widget.LinearLayoutManager$SavedState androidx.recyclerview.widget.LinearLayoutManager$SavedState$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    149:174:java.lang.Object androidx.recyclerview.widget.LinearLayoutManager$SavedState$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    149:174:java.lang.Object createFromParcel$bridge(android.os.Parcel):0 -> createFromParcel
    175:176:androidx.core.widget.NestedScrollView$SavedState androidx.core.widget.NestedScrollView$SavedState$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    175:176:java.lang.Object androidx.core.widget.NestedScrollView$SavedState$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    175:176:java.lang.Object createFromParcel$bridge(android.os.Parcel):0 -> createFromParcel
    177:186:void androidx.core.widget.NestedScrollView$SavedState.<init>(android.os.Parcel):0:0 -> createFromParcel
    177:186:androidx.core.widget.NestedScrollView$SavedState androidx.core.widget.NestedScrollView$SavedState$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    177:186:java.lang.Object androidx.core.widget.NestedScrollView$SavedState$1.createFromParcel(android.os.Parcel):0 -> createFromParcel
    177:186:java.lang.Object createFromParcel$bridge(android.os.Parcel):0 -> createFromParcel
    6:8:androidx.versionedparcelable.ParcelImpl[] androidx.versionedparcelable.ParcelImpl$1.newArray(int):0:0 -> newArray
    6:8:java.lang.Object[] androidx.versionedparcelable.ParcelImpl$1.newArray(int):0 -> newArray
    6:8:java.lang.Object[] newArray$bridge(int):0 -> newArray
      # {"id":"com.android.tools.r8.synthesized"}
    9:11:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1.newArray(int):0:0 -> newArray
    9:11:java.lang.Object[] androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1.newArray(int):0 -> newArray
    9:11:java.lang.Object[] newArray$bridge(int):0 -> newArray
    12:14:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1.newArray(int):0:0 -> newArray
    12:14:java.lang.Object[] androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1.newArray(int):0 -> newArray
    12:14:java.lang.Object[] newArray$bridge(int):0 -> newArray
    15:17:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] androidx.recyclerview.widget.LinearLayoutManager$SavedState$1.newArray(int):0:0 -> newArray
    15:17:java.lang.Object[] androidx.recyclerview.widget.LinearLayoutManager$SavedState$1.newArray(int):0 -> newArray
    15:17:java.lang.Object[] newArray$bridge(int):0 -> newArray
    18:20:androidx.core.widget.NestedScrollView$SavedState[] androidx.core.widget.NestedScrollView$SavedState$1.newArray(int):0:0 -> newArray
    18:20:java.lang.Object[] androidx.core.widget.NestedScrollView$SavedState$1.newArray(int):0 -> newArray
    18:20:java.lang.Object[] newArray$bridge(int):0 -> newArray
androidx.core.widget.PopupWindowCompat -> R8$$REMOVED$$CLASS$$89:
# {"id":"sourceFile","fileName":"PopupWindowCompat.java"}
androidx.core.widget.PopupWindowCompat$Api23Impl -> h0.l:
# {"id":"sourceFile","fileName":"PopupWindowCompat.java"}
    1:1:boolean getOverlapAnchor(android.widget.PopupWindow):0:0 -> a
    1:1:int getWindowLayoutType(android.widget.PopupWindow):0:0 -> b
    1:1:void setOverlapAnchor(android.widget.PopupWindow,boolean):0:0 -> c
    1:1:void setWindowLayoutType(android.widget.PopupWindow,int):0:0 -> d
androidx.core.widget.TextViewCompat -> R8$$REMOVED$$CLASS$$90:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
androidx.core.widget.TextViewCompat$Api23Impl -> h0.m:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1:1:int getBreakStrategy(android.widget.TextView):0:0 -> a
    1:1:android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView):0:0 -> b
    1:1:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView):0:0 -> c
    1:1:int getHyphenationFrequency(android.widget.TextView):0:0 -> d
    1:1:void setBreakStrategy(android.widget.TextView,int):0:0 -> e
    1:1:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList):0:0 -> f
    1:1:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode):0:0 -> g
    1:1:void setHyphenationFrequency(android.widget.TextView,int):0:0 -> h
androidx.core.widget.TextViewCompat$Api24Impl -> h0.n:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1:1:android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale):0:0 -> a
androidx.core.widget.TextViewCompat$Api28Impl -> h0.o:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1:1:java.lang.CharSequence castToCharSequence(android.text.PrecomputedText):0:0 -> a
    1:1:java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols):0:0 -> b
    1:1:android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView):0:0 -> c
    1:1:void setFirstBaselineToTopHeight(android.widget.TextView,int):0:0 -> d
androidx.core.widget.TextViewCompat$OreoCallback -> h0.p:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    android.view.ActionMode$Callback mCallback -> a
    android.widget.TextView mTextView -> b
    java.lang.Class mMenuBuilderClass -> c
    java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod -> d
    boolean mCanUseMenuBuilderReferences -> e
    boolean mInitializedMenuBuilderReferences -> f
    1:1:void <init>(android.view.ActionMode$Callback,android.widget.TextView):0:0 -> <init>
    1:1:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem):0:0 -> onActionItemClicked
    1:1:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu):0:0 -> onCreateActionMode
    1:1:void onDestroyActionMode(android.view.ActionMode):0:0 -> onDestroyActionMode
    3:126:void androidx.core.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0:0 -> onPrepareActionMode
    3:126:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    127:138:java.util.List androidx.core.widget.TextViewCompat$OreoCallback.getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0:0 -> onPrepareActionMode
    127:138:void androidx.core.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    127:138:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    139:151:android.content.Intent androidx.core.widget.TextViewCompat$OreoCallback.createProcessTextIntent():0:0 -> onPrepareActionMode
    139:151:java.util.List androidx.core.widget.TextViewCompat$OreoCallback.getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0 -> onPrepareActionMode
    139:151:void androidx.core.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    139:151:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    152:171:java.util.List androidx.core.widget.TextViewCompat$OreoCallback.getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0:0 -> onPrepareActionMode
    152:171:void androidx.core.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    152:171:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    172:203:boolean androidx.core.widget.TextViewCompat$OreoCallback.isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context):0:0 -> onPrepareActionMode
    172:203:java.util.List androidx.core.widget.TextViewCompat$OreoCallback.getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0 -> onPrepareActionMode
    172:203:void androidx.core.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    172:203:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    204:208:java.util.List androidx.core.widget.TextViewCompat$OreoCallback.getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0:0 -> onPrepareActionMode
    204:208:void androidx.core.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    204:208:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    209:230:void androidx.core.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0:0 -> onPrepareActionMode
    209:230:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    231:243:android.content.Intent androidx.core.widget.TextViewCompat$OreoCallback.createProcessTextIntent():0:0 -> onPrepareActionMode
    231:243:android.content.Intent androidx.core.widget.TextViewCompat$OreoCallback.createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView):0 -> onPrepareActionMode
    231:243:void androidx.core.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    231:243:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    244:265:boolean androidx.core.widget.TextViewCompat$OreoCallback.isEditable(android.widget.TextView):0:0 -> onPrepareActionMode
    244:265:android.content.Intent androidx.core.widget.TextViewCompat$OreoCallback.createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView):0 -> onPrepareActionMode
    244:265:void androidx.core.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    244:265:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    266:279:android.content.Intent androidx.core.widget.TextViewCompat$OreoCallback.createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView):0:0 -> onPrepareActionMode
    266:279:void androidx.core.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    266:279:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    280:291:void androidx.core.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0:0 -> onPrepareActionMode
    280:291:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    292:296:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0:0 -> onPrepareActionMode
androidx.core.widget.TintableCompoundDrawablesView -> h0.q:
# {"id":"sourceFile","fileName":"TintableCompoundDrawablesView.java"}
    void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
androidx.cursoradapter.widget.CursorAdapter -> i0.b:
# {"id":"sourceFile","fileName":"CursorAdapter.java"}
    boolean mDataValid -> b
    boolean mAutoRequery -> c
    android.database.Cursor mCursor -> d
    android.content.Context mContext -> e
    int mRowIDColumn -> f
    androidx.cursoradapter.widget.CursorAdapter$ChangeObserver mChangeObserver -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Li0/a;"}
    android.database.DataSetObserver mDataSetObserver -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/r0;"}
    androidx.cursoradapter.widget.CursorFilter mCursorFilter -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Li0/d;"}
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroid/database/Cursor;)V"}
    13:66:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.swapCursor(android.database.Cursor):0:0 -> b
    13:66:void changeCursor(android.database.Cursor):0 -> b
    67:70:void changeCursor(android.database.Cursor):0:0 -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/database/Cursor;)Ljava/lang/String;"}
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;)Landroid/view/View;"}
    1:1:int getCount():0:0 -> getCount
    20:25:android.view.View androidx.cursoradapter.widget.ResourceCursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> getDropDownView
    20:25:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0 -> getDropDownView
    26:31:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0:0 -> getDropDownView
    7:16:void androidx.cursoradapter.widget.CursorFilter.<init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient):0:0 -> getFilter
    7:16:android.widget.Filter getFilter():0 -> getFilter
    1:1:java.lang.Object getItem(int):0:0 -> getItem
    1:1:long getItemId(int):0:0 -> getItemId
    1:1:android.view.View getView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> i0.a:
# {"id":"sourceFile","fileName":"CursorAdapter.java"}
    androidx.cursoradapter.widget.CursorAdapter this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Li0/b;"}
    1:1:void <init>(androidx.cursoradapter.widget.CursorAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/b;)V"}
    1:1:boolean deliverSelfNotifications():0:0 -> deliverSelfNotifications
    3:6:void androidx.cursoradapter.widget.CursorAdapter.onContentChanged():0:0 -> onChange
    3:6:void onChange(boolean):0 -> onChange
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:25:void androidx.cursoradapter.widget.CursorAdapter.onContentChanged():0:0 -> onChange
    7:25:void onChange(boolean):0 -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> R8$$REMOVED$$CLASS$$91:
# {"id":"sourceFile","fileName":"CursorAdapter.java"}
androidx.cursoradapter.widget.CursorFilter -> i0.d:
# {"id":"sourceFile","fileName":"CursorFilter.java"}
    androidx.cursoradapter.widget.CursorFilter$CursorFilterClient mClient -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Li0/c;"}
    1:1:java.lang.CharSequence convertResultToString(java.lang.Object):0:0 -> convertResultToString
    10:12:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence):0:0 -> performFiltering
    13:16:android.database.Cursor androidx.appcompat.widget.SuggestionsAdapter.runQueryOnBackgroundThread(java.lang.CharSequence):0:0 -> performFiltering
    13:16:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence):0 -> performFiltering
    17:18:android.database.Cursor androidx.appcompat.widget.SuggestionsAdapter.runQueryOnBackgroundThread(java.lang.CharSequence):0:0 -> performFiltering
    17:18:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence):0 -> performFiltering
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    19:53:android.database.Cursor androidx.appcompat.widget.SuggestionsAdapter.runQueryOnBackgroundThread(java.lang.CharSequence):0:0 -> performFiltering
    19:53:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence):0 -> performFiltering
    54:75:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence):0:0 -> performFiltering
    6:7:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> publishResults
    6:7:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults):0 -> publishResults
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:21:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults):0:0 -> publishResults
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient -> i0.c:
# {"id":"sourceFile","fileName":"CursorFilter.java"}
androidx.cursoradapter.widget.ResourceCursorAdapter -> R8$$REMOVED$$CLASS$$92:
# {"id":"sourceFile","fileName":"ResourceCursorAdapter.java"}
androidx.customview.view.AbsSavedState -> j0.b:
# {"id":"sourceFile","fileName":"AbsSavedState.java"}
    android.os.Parcelable mSuperState -> a
    androidx.customview.view.AbsSavedState EMPTY_STATE -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj0/a;"}
    3:7:void androidx.customview.view.AbsSavedState$1.<init>():0:0 -> <clinit>
    3:7:void <clinit>():0 -> <clinit>
    8:16:void <clinit>():0:0 -> <clinit>
    1:1:void androidx.customview.view.AbsSavedState.<init>():0:0 -> <init>
    1:1:void <init>(androidx.customview.view.AbsSavedState$1):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    2:2:void <init>(android.os.Parcel,java.lang.ClassLoader):0:0 -> <init>
    3:3:void <init>(android.os.Parcelable):0:0 -> <init>
    1:1:int describeContents():0:0 -> describeContents
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> j0.a:
# {"id":"sourceFile","fileName":"AbsSavedState.java"}
androidx.customview.view.AbsSavedState$2 -> R8$$REMOVED$$CLASS$$93:
# {"id":"sourceFile","fileName":"AbsSavedState.java"}
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.a:
# {"id":"sourceFile","fileName":"EmptyActivityLifecycleCallbacks.kt"}
androidx.lifecycle.Lifecycle -> androidx.lifecycle.f:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.d:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    androidx.lifecycle.Lifecycle$Event[] $VALUES -> $VALUES
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event$Companion Companion -> Companion
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/b;"}
    androidx.lifecycle.Lifecycle$Event ON_ANY -> ON_ANY
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event ON_CREATE -> ON_CREATE
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event ON_DESTROY -> ON_DESTROY
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event ON_PAUSE -> ON_PAUSE
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event ON_RESUME -> ON_RESUME
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event ON_START -> ON_START
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event ON_STOP -> ON_STOP
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    6:10:void <init>(java.lang.String,int):0:0 -> <clinit>
    6:10:void <clinit>():0 -> <clinit>
    11:15:void <clinit>():0:0 -> <clinit>
    16:20:void <init>(java.lang.String,int):0:0 -> <clinit>
    16:20:void <clinit>():0 -> <clinit>
    21:25:void <clinit>():0:0 -> <clinit>
    26:30:void <init>(java.lang.String,int):0:0 -> <clinit>
    26:30:void <clinit>():0 -> <clinit>
    31:35:void <clinit>():0:0 -> <clinit>
    36:40:void <init>(java.lang.String,int):0:0 -> <clinit>
    36:40:void <clinit>():0 -> <clinit>
    41:45:void <clinit>():0:0 -> <clinit>
    46:50:void <init>(java.lang.String,int):0:0 -> <clinit>
    46:50:void <clinit>():0 -> <clinit>
    51:55:void <clinit>():0:0 -> <clinit>
    56:60:void <init>(java.lang.String,int):0:0 -> <clinit>
    56:60:void <clinit>():0 -> <clinit>
    61:65:void <clinit>():0:0 -> <clinit>
    66:89:void <init>(java.lang.String,int):0:0 -> <clinit>
    66:89:void <clinit>():0 -> <clinit>
    90:91:void <clinit>():0:0 -> <clinit>
    92:97:void androidx.lifecycle.Lifecycle$Event$Companion.<init>():0:0 -> <clinit>
    92:97:void androidx.lifecycle.Lifecycle$Event$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0 -> <clinit>
    92:97:void <clinit>():0 -> <clinit>
androidx.lifecycle.Lifecycle$Event$Companion -> androidx.lifecycle.b:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
androidx.lifecycle.Lifecycle$Event$WhenMappings -> androidx.lifecycle.c:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    int[] $EnumSwitchMapping$0 -> a
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.e:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    androidx.lifecycle.Lifecycle$State DESTROYED -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/e;"}
    androidx.lifecycle.Lifecycle$State INITIALIZED -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/e;"}
    androidx.lifecycle.Lifecycle$State CREATED -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/e;"}
    androidx.lifecycle.Lifecycle$State STARTED -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/e;"}
    androidx.lifecycle.Lifecycle$State RESUMED -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/e;"}
    androidx.lifecycle.Lifecycle$State[] $VALUES -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Landroidx/lifecycle/e;"}
    6:10:void <init>(java.lang.String,int):0:0 -> <clinit>
    6:10:void <clinit>():0 -> <clinit>
    11:15:void <clinit>():0:0 -> <clinit>
    16:20:void <init>(java.lang.String,int):0:0 -> <clinit>
    16:20:void <clinit>():0 -> <clinit>
    21:25:void <clinit>():0:0 -> <clinit>
    26:30:void <init>(java.lang.String,int):0:0 -> <clinit>
    26:30:void <clinit>():0 -> <clinit>
    31:35:void <clinit>():0:0 -> <clinit>
    36:40:void <init>(java.lang.String,int):0:0 -> <clinit>
    36:40:void <clinit>():0 -> <clinit>
    41:45:void <clinit>():0:0 -> <clinit>
    46:66:void <init>(java.lang.String,int):0:0 -> <clinit>
    46:66:void <clinit>():0 -> <clinit>
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.h:
# {"id":"sourceFile","fileName":"LifecycleDispatcher.kt"}
    java.util.concurrent.atomic.AtomicBoolean initialized -> a
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.g:
# {"id":"sourceFile","fileName":"LifecycleDispatcher.kt"}
    16:18:void androidx.lifecycle.ReportFragment$Companion.injectIfNeededIn(android.app.Activity):0:0 -> onActivityCreated
    16:18:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    19:26:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion.registerIn(android.app.Activity):0:0 -> onActivityCreated
    19:26:void androidx.lifecycle.ReportFragment$Companion.injectIfNeededIn(android.app.Activity):0 -> onActivityCreated
    19:26:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    27:58:void androidx.lifecycle.ReportFragment$Companion.injectIfNeededIn(android.app.Activity):0:0 -> onActivityCreated
    27:58:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
androidx.lifecycle.LifecycleOwner -> androidx.lifecycle.i:
# {"id":"sourceFile","fileName":"LifecycleOwner.kt"}
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.j:
# {"id":"sourceFile","fileName":"LifecycleRegistry.kt"}
    boolean enforceMainThread -> a
    androidx.arch.core.internal.FastSafeIterableMap observerMap -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lo/a;"}
    androidx.lifecycle.Lifecycle$State state -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/e;"}
    java.lang.ref.WeakReference lifecycleOwner -> d
    boolean handlingEvent -> e
    kotlinx.coroutines.flow.MutableStateFlow _currentStateFlow -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld1/a;"}
    6:16:void androidx.lifecycle.Lifecycle.<init>():0:0 -> <init>
    6:16:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0 -> <init>
    6:16:void <init>(androidx.lifecycle.LifecycleOwner):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i;)V"}
    17:39:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0:0 -> <init>
    17:39:void <init>(androidx.lifecycle.LifecycleOwner):0 -> <init>
    40:47:kotlinx.coroutines.flow.MutableStateFlow kotlinx.coroutines.flow.StateFlowKt.MutableStateFlow(java.lang.Object):0:0 -> <init>
    40:47:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0 -> <init>
    40:47:void <init>(androidx.lifecycle.LifecycleOwner):0 -> <init>
    10:13:void enforceMainThreadIfNeeded(java.lang.String):0:0 -> a
    10:13:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;)V"}
    14:15:boolean androidx.arch.core.executor.ArchTaskExecutor.isMainThread():0:0 -> a
    14:15:void enforceMainThreadIfNeeded(java.lang.String):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:15:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    16:24:boolean androidx.arch.core.executor.ArchTaskExecutor.isMainThread():0:0 -> a
    16:24:void enforceMainThreadIfNeeded(java.lang.String):0 -> a
    16:24:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    25:34:void enforceMainThreadIfNeeded(java.lang.String):0:0 -> a
    25:34:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    35:94:androidx.lifecycle.Lifecycle$State androidx.lifecycle.Lifecycle$Event.getTargetState():0:0 -> a
    35:94:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    95:145:void moveToState(androidx.lifecycle.Lifecycle$State):0:0 -> a
    95:145:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    146:155:void sync():0:0 -> a
    146:155:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    146:155:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    156:162:boolean isSynced():0:0 -> a
    156:162:void sync():0 -> a
    156:162:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    156:162:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    163:169:void sync():0:0 -> a
    163:169:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    163:169:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    170:179:boolean kotlinx.coroutines.flow.StateFlowImpl.updateState(java.lang.Object,java.lang.Object):0:0 -> a
    170:179:void kotlinx.coroutines.flow.StateFlowImpl.setValue(java.lang.Object):0 -> a
    170:179:void sync():0 -> a
    170:179:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    170:179:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    180:185:boolean kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object,java.lang.Object):0:0 -> a
    180:185:boolean kotlinx.coroutines.flow.StateFlowImpl.updateState(java.lang.Object,java.lang.Object):0 -> a
    180:185:void kotlinx.coroutines.flow.StateFlowImpl.setValue(java.lang.Object):0 -> a
    180:185:void sync():0 -> a
    180:185:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    180:185:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    186:232:boolean kotlinx.coroutines.flow.StateFlowImpl.updateState(java.lang.Object,java.lang.Object):0:0 -> a
    186:232:void kotlinx.coroutines.flow.StateFlowImpl.setValue(java.lang.Object):0 -> a
    186:232:void sync():0 -> a
    186:232:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    186:232:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    233:240:void moveToState(androidx.lifecycle.Lifecycle$State):0:0 -> a
    233:240:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    241:242:boolean kotlinx.coroutines.flow.StateFlowImpl.updateState(java.lang.Object,java.lang.Object):0:0 -> a
    241:242:void kotlinx.coroutines.flow.StateFlowImpl.setValue(java.lang.Object):0 -> a
    241:242:void sync():0 -> a
    241:242:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    241:242:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    243:252:void sync():0:0 -> a
    243:252:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    243:252:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
androidx.lifecycle.ProcessLifecycleInitializer -> androidx.lifecycle.ProcessLifecycleInitializer:
# {"id":"sourceFile","fileName":"ProcessLifecycleInitializer.kt"}
    1:1:java.util.List dependencies():0:0 -> a
    3:14:androidx.lifecycle.LifecycleOwner create(android.content.Context):0:0 -> b
    3:14:java.lang.Object create(android.content.Context):0 -> b
    15:24:boolean androidx.startup.AppInitializer.isEagerlyInitialized(java.lang.Class):0:0 -> b
    15:24:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> b
    15:24:java.lang.Object create(android.content.Context):0 -> b
    25:53:void androidx.lifecycle.LifecycleDispatcher.init(android.content.Context):0:0 -> b
    25:53:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> b
    25:53:java.lang.Object create(android.content.Context):0 -> b
    54:55:androidx.lifecycle.ProcessLifecycleOwner androidx.lifecycle.ProcessLifecycleOwner.access$getNewInstance$cp():0:0 -> b
    54:55:void androidx.lifecycle.ProcessLifecycleOwner$Companion.init$lifecycle_process_release(android.content.Context):0 -> b
    54:55:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> b
    54:55:java.lang.Object create(android.content.Context):0 -> b
    56:58:void androidx.lifecycle.ProcessLifecycleOwner$Companion.init$lifecycle_process_release(android.content.Context):0:0 -> b
    56:58:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> b
    56:58:java.lang.Object create(android.content.Context):0 -> b
    59:90:void androidx.lifecycle.ProcessLifecycleOwner.attach$lifecycle_process_release(android.content.Context):0:0 -> b
    59:90:void androidx.lifecycle.ProcessLifecycleOwner$Companion.init$lifecycle_process_release(android.content.Context):0 -> b
    59:90:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> b
    59:90:java.lang.Object create(android.content.Context):0 -> b
    91:102:androidx.lifecycle.LifecycleOwner create(android.content.Context):0:0 -> b
    91:102:java.lang.Object create(android.content.Context):0 -> b
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.o:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    int startedCounter -> a
    int resumedCounter -> b
    boolean pauseSent -> c
    boolean stopSent -> d
    android.os.Handler handler -> e
    androidx.lifecycle.LifecycleRegistry registry -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/j;"}
    java.lang.Runnable delayedPauseRunnable -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll0/f;"}
    androidx.lifecycle.ReportFragment$ActivityInitializationListener initializationListener -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/n;"}
    androidx.lifecycle.ProcessLifecycleOwner newInstance -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/o;"}
    30:33:void activityResumed$lifecycle_process_release():0:0 -> a
    34:43:void kotlin.jvm.internal.Intrinsics.throwJavaNpe():0:0 -> a
    34:43:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):0 -> a
    34:43:void activityResumed$lifecycle_process_release():0 -> a
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl -> androidx.lifecycle.k:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    1:1:void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks):0:0 -> a
androidx.lifecycle.ProcessLifecycleOwner$Companion -> R8$$REMOVED$$CLASS$$94:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
androidx.lifecycle.ProcessLifecycleOwner$attach$1 -> androidx.lifecycle.m:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> this$0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/o;"}
    14:32:androidx.lifecycle.ReportFragment androidx.lifecycle.ReportFragment$Companion.get(android.app.Activity):0:0 -> onActivityCreated
    14:32:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    33:34:androidx.lifecycle.ReportFragment$ActivityInitializationListener androidx.lifecycle.ProcessLifecycleOwner.access$getInitializationListener$p(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> onActivityCreated
    33:34:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    35:37:void androidx.lifecycle.ReportFragment.setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> onActivityCreated
    35:37:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    8:11:void androidx.lifecycle.ProcessLifecycleOwner.activityPaused$lifecycle_process_release():0:0 -> onActivityPaused
    8:11:void onActivityPaused(android.app.Activity):0 -> onActivityPaused
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:27:void androidx.lifecycle.ProcessLifecycleOwner.activityPaused$lifecycle_process_release():0:0 -> onActivityPaused
    12:27:void onActivityPaused(android.app.Activity):0 -> onActivityPaused
    28:37:void kotlin.jvm.internal.Intrinsics.throwJavaNpe():0:0 -> onActivityPaused
    28:37:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):0 -> onActivityPaused
    28:37:void androidx.lifecycle.ProcessLifecycleOwner.activityPaused$lifecycle_process_release():0 -> onActivityPaused
    28:37:void onActivityPaused(android.app.Activity):0 -> onActivityPaused
    8:11:void androidx.lifecycle.ProcessLifecycleOwner.activityStopped$lifecycle_process_release():0:0 -> onActivityStopped
    8:11:void onActivityStopped(android.app.Activity):0 -> onActivityStopped
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:15:void androidx.lifecycle.ProcessLifecycleOwner.activityStopped$lifecycle_process_release():0:0 -> onActivityStopped
    12:15:void onActivityStopped(android.app.Activity):0 -> onActivityStopped
    16:30:void androidx.lifecycle.ProcessLifecycleOwner.dispatchStopIfNeeded$lifecycle_process_release():0:0 -> onActivityStopped
    16:30:void androidx.lifecycle.ProcessLifecycleOwner.activityStopped$lifecycle_process_release():0 -> onActivityStopped
    16:30:void onActivityStopped(android.app.Activity):0 -> onActivityStopped
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1 -> androidx.lifecycle.l:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> this$0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/o;"}
    8:11:void androidx.lifecycle.ProcessLifecycleOwner.activityStarted$lifecycle_process_release():0:0 -> onActivityPostStarted
    8:11:void onActivityPostStarted(android.app.Activity):0 -> onActivityPostStarted
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:30:void androidx.lifecycle.ProcessLifecycleOwner.activityStarted$lifecycle_process_release():0:0 -> onActivityPostStarted
    12:30:void onActivityPostStarted(android.app.Activity):0 -> onActivityPostStarted
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1 -> androidx.lifecycle.n:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/o;"}
androidx.lifecycle.ReportFragment -> androidx.lifecycle.s:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
    androidx.lifecycle.ReportFragment$ActivityInitializationListener processListener -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/n;"}
    int $r8$clinit -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void dispatch(androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;)V"}
    8:14:void androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1.onResume():0:0 -> onResume
    8:14:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0 -> onResume
    8:14:void onResume():0 -> onResume
    15:18:void onResume():0:0 -> onResume
    8:13:void androidx.lifecycle.ProcessLifecycleOwner.activityStarted$lifecycle_process_release():0:0 -> onStart
    8:13:void androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1.onStart():0 -> onStart
    8:13:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0 -> onStart
    8:13:void onStart():0 -> onStart
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    14:33:void androidx.lifecycle.ProcessLifecycleOwner.activityStarted$lifecycle_process_release():0:0 -> onStart
    14:33:void androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1.onStart():0 -> onStart
    14:33:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0 -> onStart
    14:33:void onStart():0 -> onStart
    34:37:void onStart():0:0 -> onStart
androidx.lifecycle.ReportFragment$Companion -> R8$$REMOVED$$CLASS$$95:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.r:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
    androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion -> Companion
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/q;"}
    3:8:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion.<init>():0:0 -> <clinit>
    3:8:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0 -> <clinit>
    3:8:void <clinit>():0 -> <clinit>
    8:19:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion.registerIn(android.app.Activity):0:0 -> registerIn
    8:19:void registerIn(android.app.Activity):0 -> registerIn
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion -> androidx.lifecycle.q:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$ExternalSyntheticApiModelOutline0 -> androidx.lifecycle.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.appcompat.widget.DrawableUtils$$InternalSyntheticApiModelOutline$1$2c278e7bda027994a3543295caa41737fb2fe1af3e83dca87c7710dc53b4b23d$1.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$7.m(int,int,int,int):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroid/graphics/Insets;"}
    1:1:android.graphics.Insets androidx.appcompat.widget.DrawableUtils$$InternalSyntheticApiModelOutline$1$2c278e7bda027994a3543295caa41737fb2fe1af3e83dca87c7710dc53b4b23d$0.m(android.graphics.drawable.Drawable):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$67794fd1c8ab5a462427a2fbe2bb4c3c6b829e00b33b77f88fa79eddd5c77c68$0.m(int,int,int,int,long):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Landroid/media/ImageReader;"}
    1:1:android.text.TextDirectionHeuristic androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$InternalSyntheticApiModelOutline$2$0f371b4564e7a29f897baad0a0948d0532c33ac9fc7c7bd8baa8cb8235106334$9.m(android.widget.TextView):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$8$a204b8eefc41564daf6595e28b0232288c13e496630a36581a3f2c9667b5b6be$0.m():0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$9$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$0.m(android.view.WindowInsets):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$ee8cb0ef857f0d92636e84006869a5dab776eec7bf08e3331dcf284032d49109$0.m(android.view.WindowInsets$Builder):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$6.m():0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$9$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$1.m():0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$InternalSyntheticApiModelOutline$1$697f715c7301ae348f7ba2ab082eb37b64d67d01fe586b84528231ac2d1ce45b$0.m(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/lifecycle/r;)V"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$9d187abb3bbc9745a880878a21bef611d92809b2198c7b753440a50ba682397e$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets$Builder;Landroid/graphics/Insets;)V"}
    1:1:void androidx.appcompat.widget.ButtonBarLayout$$InternalSyntheticApiModelOutline$1$03e64689608840339601dfb5ca3d200de8ab2befb596b1e6cbe83e0b30f0e4ff$0.m(androidx.appcompat.widget.ButtonBarLayout,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/appcompat/widget/ButtonBarLayout;Landroid/content/Context;[ILandroid/util/AttributeSet;Landroid/content/res/TypedArray;)V"}
    1:1:void androidx.appcompat.widget.SearchView$$InternalSyntheticApiModelOutline$1$85442c5e8c62468097139194d69bac8cc8ca23cafc0c353e98bf4b8f1d47e78f$0.m(androidx.appcompat.widget.SearchView$SearchAutoComplete):0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.appcompat.widget.ListPopupWindow$$InternalSyntheticApiModelOutline$2$5481045a7ab6ebad12ada2416b8371991693ab86e194b86ed15c4bfb98a81e63$0.m(android.widget.PopupWindow,boolean):0:0 -> o
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/x;)V"}
    1:1:void androidx.appcompat.widget.ListPopupWindow$$InternalSyntheticApiModelOutline$1$3c41db82eb511fcb137365d97e9531eba90c078a24cff943c7c57c030eca0fbf$0.m(android.widget.PopupWindow,android.graphics.Rect):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/x;Landroid/graphics/Rect;)V"}
    1:1:boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$$InternalSyntheticApiModelOutline$1$0517860593e93b350be8e0925c5532ddcba157136646271a16d4b39299c0f1a1$0.m(android.widget.TextView):0:0 -> q
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.appcompat.widget.DrawableUtils$$InternalSyntheticApiModelOutline$1$2c278e7bda027994a3543295caa41737fb2fe1af3e83dca87c7710dc53b4b23d$2.m(android.graphics.Insets):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$7.m():0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$a7bac0df715b28c98a7dcfbd576701be30c0b9593556f6a2c1e40d1cb3582ae7$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> t
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets$Builder;Landroid/graphics/Insets;)V"}
    1:1:void androidx.appcompat.widget.MenuPopupWindow$$InternalSyntheticApiModelOutline$1$ab11aaad82c2688a8aca62643dd0b1ca283a8581a6941c3b63b12ee7ace28258$0.m(android.widget.PopupWindow,boolean):0:0 -> u
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/x;)V"}
    1:1:int androidx.appcompat.widget.DrawableUtils$$InternalSyntheticApiModelOutline$1$2c278e7bda027994a3543295caa41737fb2fe1af3e83dca87c7710dc53b4b23d$3.m(android.graphics.Insets):0:0 -> v
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$8.m():0:0 -> w
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.appcompat.widget.DrawableUtils$$InternalSyntheticApiModelOutline$1$2c278e7bda027994a3543295caa41737fb2fe1af3e83dca87c7710dc53b4b23d$4.m(android.graphics.Insets):0:0 -> x
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$9.m():0:0 -> y
      # {"id":"com.android.tools.r8.synthesized"}
androidx.preference.CheckBoxPreference -> androidx.preference.CheckBoxPreference:
# {"id":"sourceFile","fileName":"CheckBoxPreference.java"}
    11:16:void androidx.preference.TwoStatePreference.<init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    11:16:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    11:16:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:16:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    17:25:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    17:25:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    17:25:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    26:36:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    26:36:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    26:36:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    26:36:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    37:44:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    37:44:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    37:44:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    37:44:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    45:48:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    45:48:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    45:48:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.preference.DialogPreference -> androidx.preference.DialogPreference:
# {"id":"sourceFile","fileName":"DialogPreference.java"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:android.graphics.drawable.Drawable androidx.core.content.res.TypedArrayUtils.getDrawable(android.content.res.TypedArray,int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;I)V"}
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    4:4:int androidx.core.content.res.TypedArrayUtils.getResourceId(android.content.res.TypedArray,int,int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
androidx.preference.DropDownPreference -> androidx.preference.DropDownPreference:
# {"id":"sourceFile","fileName":"DropDownPreference.java"}
    android.widget.ArrayAdapter mAdapter -> j
    4:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    4:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    7:16:android.widget.ArrayAdapter createAdapter():0:0 -> <init>
    7:16:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:16:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:16:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    17:40:void updateEntries():0:0 -> <init>
    17:40:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    17:40:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    17:40:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void notifyChanged():0:0 -> b
androidx.preference.EditTextPreference -> androidx.preference.EditTextPreference:
# {"id":"sourceFile","fileName":"EditTextPreference.java"}
    11:20:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    11:20:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:20:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    21:34:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    21:34:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    21:34:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    21:34:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    35:46:androidx.preference.EditTextPreference$SimpleSummaryProvider androidx.preference.EditTextPreference$SimpleSummaryProvider.getInstance():0:0 -> <init>
    35:46:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    35:46:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    35:46:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    47:50:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    47:50:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    47:50:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int):0:0 -> c
androidx.preference.EditTextPreference$SimpleSummaryProvider -> R8$$REMOVED$$CLASS$$96:
# {"id":"sourceFile","fileName":"EditTextPreference.java"}
androidx.preference.ListPreference -> androidx.preference.ListPreference:
# {"id":"sourceFile","fileName":"ListPreference.java"}
    java.lang.CharSequence[] mEntries -> h
    java.lang.String mSummary -> i
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:java.lang.CharSequence[] androidx.core.content.res.TypedArrayUtils.getTextArray(android.content.res.TypedArray,int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;I)V"}
    3:3:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:androidx.preference.ListPreference$SimpleSummaryProvider androidx.preference.ListPreference$SimpleSummaryProvider.getInstance():0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void androidx.preference.Preference.setSummaryProvider(androidx.preference.Preference$SummaryProvider):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    7:53:java.lang.CharSequence getSummary():0:0 -> a
    1:1:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int):0:0 -> c
    1:1:java.lang.CharSequence getEntry():0:0 -> d
androidx.preference.ListPreference$SimpleSummaryProvider -> R8$$REMOVED$$CLASS$$97:
# {"id":"sourceFile","fileName":"ListPreference.java"}
androidx.preference.MultiSelectListPreference -> androidx.preference.MultiSelectListPreference:
# {"id":"sourceFile","fileName":"MultiSelectListPreference.java"}
    11:26:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    11:26:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:26:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    27:46:java.lang.CharSequence[] androidx.core.content.res.TypedArrayUtils.getTextArray(android.content.res.TypedArray,int,int):0:0 -> <init>
    27:46:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    27:46:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    27:46:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    47:50:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    47:50:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    47:50:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int):0:0 -> c
androidx.preference.Preference -> androidx.preference.Preference:
# {"id":"sourceFile","fileName":"Preference.java"}
    android.content.Context mContext -> a
    int mOrder -> b
    java.lang.CharSequence mTitle -> c
    java.lang.CharSequence mSummary -> d
    java.lang.String mKey -> e
    java.lang.Object mDefaultValue -> f
    androidx.preference.Preference$SummaryProvider mSummaryProvider -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk0/a;"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:int androidx.core.content.res.TypedArrayUtils.getResourceId(android.content.res.TypedArray,int,int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;I)V"}
    3:3:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:java.lang.CharSequence androidx.core.content.res.TypedArrayUtils.getText(android.content.res.TypedArray,int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:int androidx.core.content.res.TypedArrayUtils.getInt(android.content.res.TypedArray,int,int,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:int androidx.core.content.res.TypedArrayUtils.getResourceId(android.content.res.TypedArray,int,int,int):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    8:8:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    10:10:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    12:12:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    14:14:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    7:14:java.lang.CharSequence getSummary():0:0 -> a
    1:1:void notifyChanged():0:0 -> b
    1:1:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int):0:0 -> c
    3:39:int compareTo(androidx.preference.Preference):0:0 -> compareTo
    3:39:int compareTo(java.lang.Object):0 -> compareTo
    1:52:java.lang.StringBuilder getFilterableStringBuilder():0:0 -> toString
    1:52:java.lang.String toString():0 -> toString
    53:57:java.lang.String toString():0:0 -> toString
androidx.preference.Preference$SummaryProvider -> k0.a:
# {"id":"sourceFile","fileName":"Preference.java"}
androidx.preference.PreferenceCategory -> androidx.preference.PreferenceCategory:
# {"id":"sourceFile","fileName":"PreferenceCategory.java"}
    11:14:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    11:14:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:14:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.preference.PreferenceGroup -> androidx.preference.PreferenceGroup:
# {"id":"sourceFile","fileName":"PreferenceGroup.java"}
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;I)V"}
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    4:4:int androidx.core.content.res.TypedArrayUtils.getInt(android.content.res.TypedArray,int,int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:boolean androidx.preference.Preference.hasKey():0:0 -> <init>
    5:5:void setInitialExpandedChildrenCount(int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:void setInitialExpandedChildrenCount(int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
androidx.preference.PreferenceScreen -> androidx.preference.PreferenceScreen:
# {"id":"sourceFile","fileName":"PreferenceScreen.java"}
    11:14:void androidx.preference.PreferenceGroup.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    11:14:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.preference.R$styleable -> k0.b:
    int[] CheckBoxPreference -> a
    int[] DialogPreference -> b
    int[] EditTextPreference -> c
    int[] ListPreference -> d
    int[] MultiSelectListPreference -> e
    int[] Preference -> f
    int[] PreferenceGroup -> g
    int[] PreferenceImageView -> h
    int[] SeekBarPreference -> i
    int[] SwitchPreference -> j
    int[] SwitchPreferenceCompat -> k
    1:1:void <clinit>():0:0 -> <clinit>
androidx.preference.SeekBarPreference -> androidx.preference.SeekBarPreference:
# {"id":"sourceFile","fileName":"SeekBarPreference.java"}
    int mMax -> h
    int mSeekBarIncrement -> i
    4:46:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    4:46:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:46:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    47:57:void setSeekBarIncrement(int):0:0 -> <init>
    47:57:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    47:57:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    47:57:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    58:72:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    58:72:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    58:72:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int):0:0 -> c
androidx.preference.SwitchPreference -> androidx.preference.SwitchPreference:
# {"id":"sourceFile","fileName":"SwitchPreference.java"}
    11:16:void androidx.preference.TwoStatePreference.<init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    11:16:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    11:16:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:16:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    17:25:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    17:25:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    17:25:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    26:60:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    26:60:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    26:60:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    26:60:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    61:68:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    61:68:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    61:68:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    61:68:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    69:72:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    69:72:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    69:72:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.preference.SwitchPreferenceCompat -> androidx.preference.SwitchPreferenceCompat:
# {"id":"sourceFile","fileName":"SwitchPreferenceCompat.java"}
    4:9:void androidx.preference.TwoStatePreference.<init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    4:9:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:9:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    10:18:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    10:18:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:18:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    19:53:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    19:53:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    19:53:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    19:53:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    54:61:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    54:61:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    54:61:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    54:61:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    62:65:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    62:65:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    62:65:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.preference.TwoStatePreference -> androidx.preference.TwoStatePreference:
# {"id":"sourceFile","fileName":"TwoStatePreference.java"}
    2:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    2:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int):0:0 -> c
androidx.preference.UnPressableLinearLayout -> androidx.preference.UnPressableLinearLayout:
# {"id":"sourceFile","fileName":"UnPressableLinearLayout.java"}
androidx.preference.internal.PreferenceImageView -> androidx.preference.internal.PreferenceImageView:
# {"id":"sourceFile","fileName":"PreferenceImageView.java"}
    int mMaxWidth -> b
    int mMaxHeight -> c
    2:37:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    2:37:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.profileinstaller.BenchmarkOperation -> R8$$REMOVED$$CLASS$$100:
# {"id":"sourceFile","fileName":"BenchmarkOperation.java"}
androidx.profileinstaller.BenchmarkOperation$Api21ContextHelper -> R8$$REMOVED$$CLASS$$98:
# {"id":"sourceFile","fileName":"BenchmarkOperation.java"}
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper -> R8$$REMOVED$$CLASS$$99:
# {"id":"sourceFile","fileName":"BenchmarkOperation.java"}
androidx.profileinstaller.DeviceProfileWriter -> l0.b:
# {"id":"sourceFile","fileName":"DeviceProfileWriter.java"}
    java.util.concurrent.Executor mExecutor -> a
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback mDiagnostics -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll0/d;"}
    byte[] mDesiredVersion -> c
    java.io.File mCurProfile -> d
    java.lang.String mApkName -> e
    boolean mDeviceSupportsAotProfile -> f
    androidx.profileinstaller.DexProfileData[] mProfile -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Ll0/c;"}
    byte[] mTranscodedProfile -> h
    1:1:void <init>(android.content.res.AssetManager,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,java.lang.String,java.lang.String,java.lang.String,java.io.File):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/AssetManager;Ln/a;Ll0/d;Ljava/lang/String;Ljava/io/File;)V"}
    1:1:java.io.InputStream openStreamFromAssets(android.content.res.AssetManager,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/AssetManager;Ljava/lang/String;)Ljava/io/FileInputStream;"}
    1:1:void result(int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/io/Serializable;)V"}
androidx.profileinstaller.DeviceProfileWriter$$ExternalSyntheticLambda0 -> l0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.$r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    int androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$1 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$2 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
      # {"id":"com.android.tools.r8.synthesized"}
    1:12:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.<init>(androidx.profileinstaller.DeviceProfileWriter,int,java.lang.Object):0:0 -> <init>
    1:12:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.$r8$init$synthetic(java.lang.Object,int,java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;ILjava/io/Serializable;I)V"}
    14:19:void androidx.profileinstaller.ProfileInstaller.lambda$result$0(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> run
    14:19:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    20:26:void androidx.profileinstaller.DeviceProfileWriter.lambda$result$0(int,java.lang.Object):0:0 -> run
    20:26:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.run$bridge():0 -> run
androidx.profileinstaller.DexProfileData -> l0.c:
# {"id":"sourceFile","fileName":"DexProfileData.java"}
    java.lang.String apkName -> a
    java.lang.String dexName -> b
    long dexChecksum -> c
    long mTypeIdCount -> d
    int classSetSize -> e
    int hotMethodRegionSize -> f
    int numMethodIds -> g
    int[] classes -> h
    java.util.TreeMap methods -> i
    1:1:void <init>(java.lang.String,java.lang.String,long,long,int,int,int,int[],java.util.TreeMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;JIII[ILjava/util/TreeMap;)V"}
androidx.profileinstaller.Encoding -> R8$$REMOVED$$CLASS$$101:
# {"id":"sourceFile","fileName":"Encoding.java"}
androidx.profileinstaller.FileSectionType -> R8$$REMOVED$$CLASS$$102:
# {"id":"sourceFile","fileName":"FileSectionType.java"}
androidx.profileinstaller.ProfileInstallReceiver -> androidx.profileinstaller.ProfileInstallReceiver:
# {"id":"sourceFile","fileName":"ProfileInstallReceiver.java"}
    71:94:void androidx.profileinstaller.ProfileInstaller.writeSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> onReceive
    71:94:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    95:108:void androidx.profileinstaller.ProfileInstaller.lambda$result$0(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> onReceive
    95:108:void androidx.profileinstaller.ProfileInstaller.result(java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0 -> onReceive
    95:108:void androidx.profileinstaller.ProfileInstaller.writeSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> onReceive
    95:108:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    109:119:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    120:123:void androidx.profileinstaller.ProfileInstaller.deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> onReceive
    120:123:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    124:135:boolean androidx.profileinstaller.ProfileInstaller.deleteProfileWrittenFor(java.io.File):0:0 -> onReceive
    124:135:void androidx.profileinstaller.ProfileInstaller.deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> onReceive
    124:135:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    136:142:void androidx.profileinstaller.ProfileInstaller.lambda$result$0(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> onReceive
    136:142:void androidx.profileinstaller.ProfileInstaller.result(java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0 -> onReceive
    136:142:void androidx.profileinstaller.ProfileInstaller.deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> onReceive
    136:142:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    143:159:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    160:177:void saveProfile(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> onReceive
    160:177:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    178:212:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    213:225:java.io.File androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper.getDeviceProtectedCodeCacheDir(android.content.Context):0:0 -> onReceive
    213:225:void androidx.profileinstaller.BenchmarkOperation.dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0 -> onReceive
    213:225:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    226:230:java.io.File androidx.profileinstaller.BenchmarkOperation$Api21ContextHelper.getCodeCacheDir(android.content.Context):0:0 -> onReceive
    226:230:void androidx.profileinstaller.BenchmarkOperation.dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0 -> onReceive
    226:230:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    231:251:void androidx.profileinstaller.BenchmarkOperation.dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0:0 -> onReceive
    231:251:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    252:255:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics -> R8$$REMOVED$$CLASS$$103:
# {"id":"sourceFile","fileName":"ProfileInstallReceiver.java"}
androidx.profileinstaller.ProfileInstaller -> l0.e:
# {"id":"sourceFile","fileName":"ProfileInstaller.java"}
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback EMPTY_DIAGNOSTICS -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/m;"}
    byte[] androidx.profileinstaller.ProfileTranscoder.MAGIC_PROF -> b
    byte[] androidx.profileinstaller.ProfileTranscoder.MAGIC_PROFM -> c
    byte[] androidx.profileinstaller.ProfileVersion.V015_S -> d
    byte[] androidx.profileinstaller.ProfileVersion.V010_P -> e
    byte[] androidx.profileinstaller.ProfileVersion.V009_O_MR1 -> f
    byte[] androidx.profileinstaller.ProfileVersion.V005_O -> g
    byte[] androidx.profileinstaller.ProfileVersion.V001_N -> h
    byte[] androidx.profileinstaller.ProfileVersion.METADATA_V001_N -> i
    byte[] androidx.profileinstaller.ProfileVersion.METADATA_V002 -> j
    1:14:void androidx.profileinstaller.ProfileInstaller.<clinit>():0:0 -> <clinit>
    1:14:void l0.ProfileInstaller.$r8$clinit$synthetic():0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    15:29:void androidx.profileinstaller.ProfileTranscoder.<clinit>():0:0 -> <clinit>
    15:29:void l0.ProfileInstaller.$r8$clinit$synthetic():0 -> <clinit>
    30:74:void androidx.profileinstaller.ProfileVersion.<clinit>():0:0 -> <clinit>
    30:74:void l0.ProfileInstaller.$r8$clinit$synthetic():0 -> <clinit>
    17:25:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> a
    17:25:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ll0/c;[B)[B"}
    26:33:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> a
    34:48:int androidx.profileinstaller.ProfileTranscoder.getMethodBitmapStorageSize(int):0:0 -> a
    34:48:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> a
    49:77:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> a
    78:89:void androidx.profileinstaller.ProfileTranscoder.writeLineData(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> a
    78:89:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> a
    90:114:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> a
    115:126:void androidx.profileinstaller.ProfileTranscoder.writeLineData(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> a
    115:126:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> a
    127:163:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> a
    164:168:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> a
    164:168:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> a
    169:169:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> a
    3:24:java.lang.String androidx.profileinstaller.ProfileVersion.dexKeySeparator(byte[]):0:0 -> b
    3:24:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0 -> b
    25:30:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0:0 -> b
    31:54:java.lang.String androidx.profileinstaller.ProfileTranscoder.enforceSeparator(java.lang.String,java.lang.String):0:0 -> b
    31:54:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0 -> b
    55:91:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0:0 -> b
    92:106:java.lang.String androidx.profileinstaller.ProfileVersion.dexKeySeparator(byte[]):0:0 -> b
    92:106:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0 -> b
    107:117:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0:0 -> b
    118:139:java.lang.String androidx.profileinstaller.ProfileTranscoder.enforceSeparator(java.lang.String,java.lang.String):0:0 -> b
    118:139:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0 -> b
    26:30:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> c
    26:30:int androidx.profileinstaller.ProfileTranscoder.methodFlagBitmapIndex(int,int,int):0 -> c
    31:32:int androidx.profileinstaller.ProfileTranscoder.methodFlagBitmapIndex(int,int,int):0:0 -> c
    33:39:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> c
    33:39:int androidx.profileinstaller.ProfileTranscoder.methodFlagBitmapIndex(int,int,int):0 -> c
    40:40:int androidx.profileinstaller.ProfileTranscoder.methodFlagBitmapIndex(int,int,int):0:0 -> c
    1:1:void noteProfileWrittenFor(android.content.pm.PackageInfo,java.io.File):0:0 -> d
    8:13:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> e
    8:13:int[] androidx.profileinstaller.ProfileTranscoder.readClasses(java.io.InputStream,int):0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayInputStream;I)[I"}
    14:19:int[] androidx.profileinstaller.ProfileTranscoder.readClasses(java.io.InputStream,int):0:0 -> e
    22:28:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    22:28:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/FileInputStream;[B[B[Ll0/c;)[Ll0/c;"}
    29:33:int androidx.profileinstaller.Encoding.readUInt8(java.io.InputStream):0:0 -> f
    29:33:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    29:33:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    34:43:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> f
    34:43:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    34:43:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    44:76:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    44:76:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    77:81:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> f
    77:81:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    77:81:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    82:82:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    82:82:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    83:87:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> f
    83:87:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    83:87:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    88:88:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    88:88:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    89:95:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> f
    89:95:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    96:105:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    106:110:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> f
    106:110:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    106:110:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    111:120:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> f
    111:120:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    111:120:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    121:153:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    121:153:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    154:158:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> f
    154:158:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    154:158:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    159:159:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    159:159:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    160:164:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> f
    160:164:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    165:165:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    22:31:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> g
    22:31:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayInputStream;I[Ll0/c;)[Ll0/c;"}
    32:33:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> g
    34:44:java.lang.String androidx.profileinstaller.Encoding.readString(java.io.InputStream,int):0:0 -> g
    34:44:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0 -> g
    45:76:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> g
    77:83:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> g
    77:83:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0 -> g
    84:85:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> g
    86:92:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> g
    86:92:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0 -> g
    93:93:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> g
    18:25:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> h
    18:25:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayInputStream;[BI[Ll0/c;)[Ll0/c;"}
    26:37:java.lang.String androidx.profileinstaller.Encoding.readString(java.io.InputStream,int):0:0 -> h
    26:37:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    38:41:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> h
    38:41:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    42:46:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> h
    42:46:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    47:53:androidx.profileinstaller.DexProfileData androidx.profileinstaller.ProfileTranscoder.findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String):0:0 -> h
    47:53:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    54:76:java.lang.String androidx.profileinstaller.ProfileTranscoder.extractKey(java.lang.String):0:0 -> h
    54:76:androidx.profileinstaller.DexProfileData androidx.profileinstaller.ProfileTranscoder.findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String):0 -> h
    54:76:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    77:97:androidx.profileinstaller.DexProfileData androidx.profileinstaller.ProfileTranscoder.findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String):0:0 -> h
    77:97:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    98:124:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0:0 -> h
    125:129:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> h
    125:129:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    130:131:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0:0 -> h
    132:138:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> h
    132:138:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    139:139:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0:0 -> h
    10:15:int androidx.profileinstaller.Encoding.readUInt8(java.io.InputStream):0:0 -> i
    10:15:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/FileInputStream;[BLjava/lang/String;)[Ll0/c;"}
    16:25:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> i
    16:25:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0 -> i
    26:58:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0:0 -> i
    59:65:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> i
    59:65:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0 -> i
    66:66:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0:0 -> i
    67:73:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> i
    67:73:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0 -> i
    74:74:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0:0 -> i
    22:31:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> j
    22:31:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayInputStream;Ljava/lang/String;I)[Ll0/c;"}
    32:43:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> j
    32:43:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    44:45:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0:0 -> j
    46:58:java.lang.String androidx.profileinstaller.Encoding.readString(java.io.InputStream,int):0:0 -> j
    46:58:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    59:85:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0:0 -> j
    86:102:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    86:102:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    103:108:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> j
    103:108:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    103:108:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    109:120:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    109:120:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    121:127:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> j
    121:127:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    121:127:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    128:130:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> j
    128:130:void androidx.profileinstaller.ProfileTranscoder.skipInlineCache(java.io.InputStream):0 -> j
    128:130:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    128:130:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    131:144:int androidx.profileinstaller.Encoding.readUInt8(java.io.InputStream):0:0 -> j
    131:144:void androidx.profileinstaller.ProfileTranscoder.skipInlineCache(java.io.InputStream):0 -> j
    131:144:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    131:144:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    145:147:int androidx.profileinstaller.Encoding.readUInt8(java.io.InputStream):0:0 -> j
    145:147:void androidx.profileinstaller.ProfileTranscoder.skipInlineCache(java.io.InputStream):0 -> j
    145:147:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    145:147:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    148:154:int androidx.profileinstaller.Encoding.readUInt8(java.io.InputStream):0:0 -> j
    148:154:void androidx.profileinstaller.ProfileTranscoder.skipInlineCache(java.io.InputStream):0 -> j
    148:154:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    148:154:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    155:166:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> j
    155:166:void androidx.profileinstaller.ProfileTranscoder.skipInlineCache(java.io.InputStream):0 -> j
    155:166:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    155:166:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    167:172:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    167:172:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    173:180:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0:0 -> j
    181:187:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    181:187:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    188:189:int androidx.profileinstaller.Encoding.bitsToBytes(int):0:0 -> j
    188:189:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    188:189:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    190:200:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    190:200:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    201:227:int androidx.profileinstaller.ProfileTranscoder.readFlagsFromBitmap(java.util.BitSet,int,int):0:0 -> j
    201:227:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    201:227:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    228:266:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    228:266:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    267:273:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> j
    267:273:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    267:273:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    274:275:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    274:275:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    18:28:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    18:28:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    18:28:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;[B[Ll0/c;)Z"}
    29:47:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    29:47:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    29:47:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    29:47:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    48:50:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    48:50:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    48:50:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    48:50:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    48:50:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    51:52:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    51:52:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    51:52:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    51:52:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    53:55:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    53:55:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    53:55:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    53:55:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    53:55:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    56:58:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    56:58:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    56:58:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    56:58:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    59:61:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    59:61:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    59:61:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    59:61:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    59:61:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    62:71:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    62:71:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    62:71:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    62:71:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    72:78:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> k
    72:78:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    72:78:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    72:78:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    72:78:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    79:82:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    79:82:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    79:82:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    79:82:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    83:97:void androidx.profileinstaller.Encoding.writeString(java.io.OutputStream,java.lang.String):0:0 -> k
    83:97:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    83:97:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    83:97:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    83:97:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    98:116:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    98:116:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    98:116:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    98:116:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    117:119:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    117:119:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    117:119:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    120:172:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    120:172:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    120:172:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    120:172:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    173:175:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    173:175:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    173:175:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    176:187:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    176:187:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    176:187:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    176:187:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    188:223:int androidx.profileinstaller.ProfileTranscoder.computeMethodFlags(androidx.profileinstaller.DexProfileData):0:0 -> k
    188:223:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    188:223:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    188:223:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    188:223:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    224:238:byte[] androidx.profileinstaller.ProfileTranscoder.createMethodBitmapRegion(androidx.profileinstaller.DexProfileData):0:0 -> k
    224:238:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    224:238:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    224:238:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    224:238:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    239:253:byte[] androidx.profileinstaller.ProfileTranscoder.createMethodsWithInlineCaches(androidx.profileinstaller.DexProfileData):0:0 -> k
    239:253:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    239:253:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    239:253:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    239:253:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    254:265:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    254:265:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    254:265:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    254:265:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    266:268:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    266:268:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    266:268:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    266:268:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    266:268:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    269:292:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    269:292:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    269:292:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    269:292:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    293:304:byte[] androidx.profileinstaller.ProfileTranscoder.createMethodsWithInlineCaches(androidx.profileinstaller.DexProfileData):0:0 -> k
    293:304:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    293:304:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    293:304:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    293:304:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    305:316:byte[] androidx.profileinstaller.ProfileTranscoder.createMethodBitmapRegion(androidx.profileinstaller.DexProfileData):0:0 -> k
    305:316:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    305:316:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    305:316:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    305:316:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    317:332:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    317:332:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    317:332:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    317:332:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    333:353:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    333:353:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    333:353:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    354:357:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    354:357:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    354:357:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    354:357:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    358:371:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    358:371:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    358:371:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    372:375:long androidx.profileinstaller.FileSectionType.getValue():0:0 -> k
    372:375:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    372:375:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    372:375:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    376:381:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    376:381:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    376:381:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    376:381:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    382:400:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    382:400:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    382:400:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    401:406:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    401:406:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    401:406:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    401:406:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    407:417:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    407:417:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    407:417:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    418:425:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    418:425:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    418:425:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    418:425:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    426:455:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    426:455:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    426:455:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    456:477:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    456:477:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    456:477:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    456:477:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    478:482:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> k
    478:482:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    478:482:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    478:482:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    478:482:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    483:493:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    483:493:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    483:493:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    483:493:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    494:515:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    494:515:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    494:515:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    494:515:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    516:520:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> k
    516:520:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    516:520:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    516:520:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    516:520:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    521:531:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    521:531:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    521:531:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    521:531:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    532:553:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    532:553:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    532:553:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    532:553:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    554:558:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> k
    554:558:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    554:558:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    554:558:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    554:558:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    559:571:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    559:571:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    559:571:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    559:571:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    572:577:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> k
    578:584:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    578:584:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    585:587:void androidx.profileinstaller.Encoding.writeUInt8(java.io.OutputStream,int):0:0 -> k
    585:587:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    585:587:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    588:589:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> k
    588:589:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    588:589:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    590:592:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    590:592:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0 -> k
    590:592:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    590:592:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    593:598:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> k
    593:598:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    593:598:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    599:601:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    599:601:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0 -> k
    599:601:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    599:601:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    602:609:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> k
    602:609:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    602:609:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    610:615:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> k
    616:617:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    616:617:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    618:620:void androidx.profileinstaller.Encoding.writeUInt8(java.io.OutputStream,int):0:0 -> k
    618:620:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    618:620:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    621:642:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    621:642:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    643:649:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> k
    643:649:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    643:649:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    650:659:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    650:659:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    660:667:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    660:667:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    660:667:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    668:674:void androidx.profileinstaller.Encoding.writeString(java.io.OutputStream,java.lang.String):0:0 -> k
    668:674:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    668:674:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    675:729:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    675:729:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    730:735:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> k
    736:741:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    736:741:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    742:744:void androidx.profileinstaller.Encoding.writeUInt8(java.io.OutputStream,int):0:0 -> k
    742:744:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    742:744:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    745:746:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> k
    745:746:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    745:746:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    747:749:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    747:749:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0 -> k
    747:749:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    747:749:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    750:755:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> k
    750:755:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    750:755:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    756:758:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    756:758:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0 -> k
    756:758:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    756:758:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    759:765:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> k
    759:765:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    759:765:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    766:771:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> k
    772:789:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    772:789:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    790:796:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> k
    790:796:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    790:796:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    797:814:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    797:814:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    815:819:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    815:819:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    815:819:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    820:826:void androidx.profileinstaller.Encoding.writeString(java.io.OutputStream,java.lang.String):0:0 -> k
    820:826:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    820:826:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    827:875:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    827:875:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    1:1:void androidx.profileinstaller.ProfileTranscoder.writeClasses(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;Ll0/c;)V"}
    1:7:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> m
    1:7:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;Ll0/c;Ljava/lang/String;)V"}
    8:19:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0:0 -> m
    20:27:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> m
    20:27:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0 -> m
    28:30:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0:0 -> m
    31:33:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> m
    31:33:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0 -> m
    34:41:void androidx.profileinstaller.Encoding.writeString(java.io.OutputStream,java.lang.String):0:0 -> m
    34:41:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0 -> m
    10:11:int androidx.profileinstaller.ProfileTranscoder.getMethodBitmapStorageSize(int):0:0 -> n
    10:11:void androidx.profileinstaller.ProfileTranscoder.writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;Ll0/c;)V"}
    12:62:void androidx.profileinstaller.ProfileTranscoder.writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> n
    63:100:void androidx.profileinstaller.ProfileTranscoder.setMethodBitmapBit(byte[],int,int,androidx.profileinstaller.DexProfileData):0:0 -> n
    63:100:void androidx.profileinstaller.ProfileTranscoder.writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0 -> n
    101:104:void androidx.profileinstaller.ProfileTranscoder.writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> n
    1:1:void androidx.profileinstaller.ProfileTranscoder.writeMethodsWithInlineCaches(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;Ll0/c;)V"}
    51:99:boolean androidx.profileinstaller.ProfileInstaller.hasAlreadyWrittenProfileForThisInstall(android.content.pm.PackageInfo,java.io.File,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> p
    51:99:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ln/a;Ll0/d;Z)V"}
    100:127:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0:0 -> p
    128:137:boolean androidx.profileinstaller.ProfileInstaller.hasAlreadyWrittenProfileForThisInstall(android.content.pm.PackageInfo,java.io.File,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> p
    128:137:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    138:160:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0:0 -> p
    161:195:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> p
    161:195:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    196:231:boolean androidx.profileinstaller.DeviceProfileWriter.deviceAllowsProfileInstallerAotWrites():0:0 -> p
    196:231:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    196:231:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    232:256:java.io.InputStream androidx.profileinstaller.DeviceProfileWriter.getProfileInputStream(android.content.res.AssetManager):0:0 -> p
    232:256:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    232:256:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    232:256:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    257:272:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0:0 -> p
    257:272:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0 -> p
    257:272:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    257:272:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    257:272:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    273:297:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0:0 -> p
    273:297:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    273:297:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    273:297:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    298:302:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> p
    298:302:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0 -> p
    298:302:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0 -> p
    298:302:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    298:302:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    298:302:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    303:303:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0:0 -> p
    303:303:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0 -> p
    303:303:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    303:303:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    303:303:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    304:373:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0:0 -> p
    304:373:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    304:373:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    304:373:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    374:381:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> p
    374:381:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    374:381:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    374:381:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    382:395:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0:0 -> p
    382:395:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0 -> p
    382:395:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    382:395:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    382:395:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    396:416:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> p
    396:416:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    396:416:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    396:416:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    417:421:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> p
    417:421:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0 -> p
    417:421:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0 -> p
    417:421:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    417:421:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    417:421:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    422:422:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0:0 -> p
    422:422:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0 -> p
    422:422:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    422:422:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    422:422:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    423:456:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> p
    423:456:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    423:456:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    423:456:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    457:469:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0:0 -> p
    457:469:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    457:469:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    470:473:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> p
    470:473:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0 -> p
    470:473:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    470:473:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    474:478:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0:0 -> p
    474:478:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    474:478:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    479:484:void androidx.profileinstaller.ProfileTranscoder.writeHeader(java.io.OutputStream,byte[]):0:0 -> p
    479:484:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0 -> p
    479:484:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    479:484:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    485:538:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0:0 -> p
    485:538:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    485:538:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    539:544:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> p
    539:544:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0 -> p
    539:544:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    539:544:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    545:552:boolean androidx.profileinstaller.DeviceProfileWriter.write():0:0 -> p
    545:552:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    545:552:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    553:556:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> p
    553:556:boolean androidx.profileinstaller.DeviceProfileWriter.write():0 -> p
    553:556:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    553:556:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    557:572:boolean androidx.profileinstaller.DeviceProfileWriter.write():0:0 -> p
    557:572:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    557:572:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    573:584:void androidx.profileinstaller.Encoding.writeAll(java.io.InputStream,java.io.OutputStream):0:0 -> p
    573:584:boolean androidx.profileinstaller.DeviceProfileWriter.write():0 -> p
    573:584:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    573:584:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    585:655:boolean androidx.profileinstaller.DeviceProfileWriter.write():0:0 -> p
    585:655:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    585:655:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    656:665:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> p
    656:665:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    666:670:boolean androidx.profileinstaller.DeviceProfileWriter.write():0:0 -> p
    666:670:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    666:670:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    671:683:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> p
    671:683:boolean androidx.profileinstaller.DeviceProfileWriter.write():0 -> p
    671:683:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    671:683:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    684:692:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0:0 -> p
androidx.profileinstaller.ProfileInstaller$1 -> R8$$REMOVED$$CLASS$$104:
# {"id":"sourceFile","fileName":"ProfileInstaller.java"}
androidx.profileinstaller.ProfileInstaller$2 -> R8$$REMOVED$$CLASS$$105:
# {"id":"sourceFile","fileName":"ProfileInstaller.java"}
androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback -> l0.d:
# {"id":"sourceFile","fileName":"ProfileInstaller.java"}
    void onDiagnosticReceived(int,java.lang.Object) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void onResultReceived(int,java.lang.Object) -> d
androidx.profileinstaller.ProfileInstallerInitializer -> androidx.profileinstaller.ProfileInstallerInitializer:
# {"id":"sourceFile","fileName":"ProfileInstallerInitializer.java"}
    1:1:java.util.List dependencies():0:0 -> a
    9:18:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context):0:0 -> b
    9:18:java.lang.Object create(android.content.Context):0 -> b
    19:27:void delayAfterFirstFrame(android.content.Context):0:0 -> b
    19:27:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context):0 -> b
    19:27:java.lang.Object create(android.content.Context):0 -> b
    28:33:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context):0:0 -> b
    28:33:java.lang.Object create(android.content.Context):0 -> b
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda0 -> l0.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.$r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.f$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
      # {"id":"com.android.tools.r8.synthesized"}
    1:8:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.<init>(android.content.Context):0:0 -> <init>
    1:8:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.$r8$init$synthetic(java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)V"}
    15:17:void androidx.lifecycle.ProcessLifecycleOwner.delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> run
    15:17:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    18:30:void androidx.lifecycle.ProcessLifecycleOwner.dispatchPauseIfNeeded$lifecycle_process_release():0:0 -> run
    18:30:void androidx.lifecycle.ProcessLifecycleOwner.delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner):0 -> run
    18:30:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
    31:48:void androidx.lifecycle.ProcessLifecycleOwner.dispatchStopIfNeeded$lifecycle_process_release():0:0 -> run
    31:48:void androidx.lifecycle.ProcessLifecycleOwner.delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner):0 -> run
    31:48:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
    49:57:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context):0:0 -> run
    49:57:void androidx.profileinstaller.ProfileInstallerInitializer.lambda$writeInBackground$2(android.content.Context):0 -> run
    49:57:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
    58:63:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> run
    58:63:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context):0 -> run
    58:63:void androidx.profileinstaller.ProfileInstallerInitializer.lambda$writeInBackground$2(android.content.Context):0 -> run
    58:63:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
    64:90:void androidx.profileinstaller.ProfileInstallerInitializer.writeInBackground(android.content.Context):0:0 -> run
    64:90:void androidx.profileinstaller.ProfileInstallerInitializer.lambda$installAfterDelay$1(android.content.Context):0 -> run
    64:90:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl -> l0.h:
# {"id":"sourceFile","fileName":"ProfileInstallerInitializer.java"}
    1:1:void postFrameCallback(java.lang.Runnable):0:0 -> a
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$ExternalSyntheticLambda0 -> l0.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.f$0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.<init>(java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    3:6:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl.lambda$postFrameCallback$0(java.lang.Runnable,long):0:0 -> doFrame
    3:6:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.doFrame(long):0 -> doFrame
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl -> l0.i:
# {"id":"sourceFile","fileName":"ProfileInstallerInitializer.java"}
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> a
androidx.profileinstaller.ProfileVerifier -> l0.m:
# {"id":"sourceFile","fileName":"ProfileVerifier.java"}
    androidx.concurrent.futures.ResolvableFuture sFuture -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq/h;"}
    java.lang.Object SYNC_OBJ -> b
    androidx.profileinstaller.ProfileVerifier$CompilationStatus sCompilationStatus -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll0/l;"}
    1:2:androidx.concurrent.futures.ResolvableFuture androidx.concurrent.futures.ResolvableFuture.create():0:0 -> <clinit>
    1:2:void <clinit>():0 -> <clinit>
    3:7:void androidx.concurrent.futures.AbstractResolvableFuture.<init>():0:0 -> <clinit>
    3:7:void androidx.concurrent.futures.ResolvableFuture.<init>():0 -> <clinit>
    3:7:androidx.concurrent.futures.ResolvableFuture androidx.concurrent.futures.ResolvableFuture.create():0 -> <clinit>
    3:7:void <clinit>():0 -> <clinit>
    8:18:void <clinit>():0:0 -> <clinit>
    1:1:long getPackageLastUpdateTime(android.content.Context):0:0 -> a
    3:9:void androidx.profileinstaller.ProfileVerifier$CompilationStatus.<init>(int,boolean,boolean):0:0 -> b
    3:9:androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll0/l;"}
    10:12:androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean):0:0 -> b
    13:27:boolean androidx.concurrent.futures.AbstractResolvableFuture.set(java.lang.Object):0:0 -> b
    13:27:boolean androidx.concurrent.futures.ResolvableFuture.set(java.lang.Object):0 -> b
    13:27:androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean):0 -> b
    1:1:androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Z)V"}
androidx.profileinstaller.ProfileVerifier$Api33Impl -> l0.j:
# {"id":"sourceFile","fileName":"ProfileVerifier.java"}
    1:1:android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context):0:0 -> a
androidx.profileinstaller.ProfileVerifier$Cache -> l0.k:
# {"id":"sourceFile","fileName":"ProfileVerifier.java"}
    int mSchema -> a
    int mResultCode -> b
    long mPackageLastUpdateTime -> c
    long mInstalledCurrentProfileSize -> d
    1:1:void <init>(int,int,long,long):0:0 -> <init>
    1:1:androidx.profileinstaller.ProfileVerifier$Cache readFromFile(java.io.File):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/File;)Ll0/k;"}
    1:1:void writeOnFile(java.io.File):0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.profileinstaller.ProfileVerifier$CompilationStatus -> l0.l:
# {"id":"sourceFile","fileName":"ProfileVerifier.java"}
    1:1:void androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo.<init>(androidx.recyclerview.widget.StaggeredGridLayoutManager):0:0 -> <init>
    1:1:void androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo.reset():0:0 -> a
androidx.profileinstaller.WritableFileSection -> l0.n:
# {"id":"sourceFile","fileName":"WritableFileSection.java"}
    androidx.profileinstaller.FileSectionType mType -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"I"}
    byte[] mContents -> b
    boolean mNeedsCompression -> c
    1:1:void <init>(androidx.profileinstaller.FileSectionType,int,byte[],boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[BZ)V"}
androidx.recyclerview.R$styleable -> m0.a:
    int[] RecyclerView -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.recyclerview.widget.AdapterHelper -> n0.b:
# {"id":"sourceFile","fileName":"AdapterHelper.java"}
    androidx.core.util.Pools$Pool mUpdateOpPool -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"La0/i;"}
    java.util.ArrayList mPendingUpdates -> b
    java.util.ArrayList mPostponedList -> c
    1:27:void androidx.recyclerview.widget.AdapterHelper.<init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean):0:0 -> <init>
    1:27:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/y;)V"}
    1:1:int findPositionOffset(int,int):0:0 -> a
    15:24:void androidx.recyclerview.widget.AdapterHelper.recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> b
    15:24:void recycleUpdateOpsAndClearList(java.util.List):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;)V"}
    25:28:void recycleUpdateOpsAndClearList(java.util.List):0:0 -> b
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> n0.a:
# {"id":"sourceFile","fileName":"AdapterHelper.java"}
    java.lang.Object payload -> a
androidx.recyclerview.widget.ChildHelper -> n0.d:
# {"id":"sourceFile","fileName":"ChildHelper.java"}
    androidx.recyclerview.widget.ChildHelper$Callback mCallback -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/y;"}
    androidx.recyclerview.widget.ChildHelper$Bucket mBucket -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/c;"}
    java.util.List mHiddenViews -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    1:1:void <init>(androidx.recyclerview.widget.ChildHelper$Callback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/y;)V"}
    7:8:android.view.View androidx.recyclerview.widget.RecyclerView$5.getChildAt(int):0:0 -> a
    7:8:android.view.View getChildAt(int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:13:android.view.View androidx.recyclerview.widget.RecyclerView$5.getChildAt(int):0:0 -> a
    9:13:android.view.View getChildAt(int):0 -> a
    3:4:int androidx.recyclerview.widget.RecyclerView$5.getChildCount():0:0 -> b
    3:4:int getChildCount():0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:10:int androidx.recyclerview.widget.RecyclerView$5.getChildCount():0:0 -> b
    5:10:int getChildCount():0 -> b
    11:16:int getChildCount():0:0 -> b
    7:8:int androidx.recyclerview.widget.RecyclerView$5.getChildCount():0:0 -> c
    7:8:int getOffset(int):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:17:int androidx.recyclerview.widget.RecyclerView$5.getChildCount():0:0 -> c
    9:17:int getOffset(int):0 -> c
    18:40:int getOffset(int):0:0 -> c
    3:4:android.view.View androidx.recyclerview.widget.RecyclerView$5.getChildAt(int):0:0 -> d
    3:4:android.view.View getUnfilteredChildAt(int):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:9:android.view.View androidx.recyclerview.widget.RecyclerView$5.getChildAt(int):0:0 -> d
    5:9:android.view.View getUnfilteredChildAt(int):0 -> d
    3:4:int androidx.recyclerview.widget.RecyclerView$5.getChildCount():0:0 -> e
    3:4:int getUnfilteredChildCount():0 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:9:int androidx.recyclerview.widget.RecyclerView$5.getChildCount():0:0 -> e
    5:9:int getUnfilteredChildCount():0 -> e
    1:1:java.lang.String toString():0:0 -> toString
androidx.recyclerview.widget.ChildHelper$Bucket -> n0.c:
# {"id":"sourceFile","fileName":"ChildHelper.java"}
    long mData -> a
    androidx.recyclerview.widget.ChildHelper$Bucket mNext -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/c;"}
    1:1:void <init>():0:0 -> <init>
    1:1:int countOnesBefore(int):0:0 -> a
    1:1:void ensureNext():0:0 -> b
    1:1:boolean get(int):0:0 -> c
    1:1:void reset():0:0 -> d
    1:1:java.lang.String toString():0:0 -> toString
androidx.recyclerview.widget.DefaultItemAnimator -> n0.f:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    java.util.ArrayList mPendingRemovals -> e
    java.util.ArrayList mPendingAdditions -> f
    java.util.ArrayList mPendingMoves -> g
    java.util.ArrayList mPendingChanges -> h
    java.util.ArrayList mAdditionsList -> i
    java.util.ArrayList mMovesList -> j
    java.util.ArrayList mChangesList -> k
    java.util.ArrayList mAddAnimations -> l
    java.util.ArrayList mMoveAnimations -> m
    java.util.ArrayList mRemoveAnimations -> n
    java.util.ArrayList mChangeAnimations -> o
    33:38:void endAnimations():0:0 -> a
    39:41:void androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> a
    39:41:void androidx.recyclerview.widget.RecyclerView$ItemAnimator.dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> a
    39:41:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> a
    39:41:void endAnimations():0 -> a
    42:173:void endAnimations():0:0 -> a
    174:176:void androidx.recyclerview.widget.DefaultItemAnimator.endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo):0:0 -> a
    174:176:void endAnimations():0 -> a
    177:196:void endAnimations():0:0 -> a
    197:215:void androidx.recyclerview.widget.RecyclerView$ItemAnimator.dispatchAnimationsFinished():0:0 -> a
    197:215:void endAnimations():0 -> a
    216:222:void endAnimations():0:0 -> a
    223:223:void androidx.recyclerview.widget.DefaultItemAnimator.endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo):0:0 -> a
    223:223:void endAnimations():0 -> a
    224:239:void endAnimations():0:0 -> a
    1:1:boolean isRunning():0:0 -> b
    1:1:void cancelAll(java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;)V"}
androidx.recyclerview.widget.DefaultItemAnimator$1 -> n0.e:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.ArrayList val$moves -> b
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/f;"}
    1:10:void androidx.recyclerview.widget.DefaultItemAnimator$1.<init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList):0:0 -> <init>
    1:10:void $r8$init$synthetic(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/f;Ljava/util/ArrayList;I)V"}
    11:39:void androidx.recyclerview.widget.DefaultItemAnimator$3.run():0:0 -> run
    11:39:void run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    40:40:void androidx.recyclerview.widget.DefaultItemAnimator.animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> run
    40:40:void androidx.recyclerview.widget.DefaultItemAnimator$3.run():0 -> run
    40:40:void run$bridge():0 -> run
    41:69:void androidx.recyclerview.widget.DefaultItemAnimator$2.run():0:0 -> run
    41:69:void run$bridge():0 -> run
    70:70:void androidx.recyclerview.widget.DefaultItemAnimator.animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo):0:0 -> run
    70:70:void androidx.recyclerview.widget.DefaultItemAnimator$2.run():0 -> run
    70:70:void run$bridge():0 -> run
    71:98:void androidx.recyclerview.widget.DefaultItemAnimator$1.run():0:0 -> run
    71:98:void run$bridge():0 -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> R8$$REMOVED$$CLASS$$106:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
androidx.recyclerview.widget.DefaultItemAnimator$3 -> R8$$REMOVED$$CLASS$$107:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
androidx.recyclerview.widget.FastScroller -> n0.k:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    int mMargin -> a
    android.graphics.drawable.StateListDrawable mVerticalThumbDrawable -> b
    android.graphics.drawable.Drawable mVerticalTrackDrawable -> c
    int mVerticalThumbWidth -> d
    int mVerticalTrackWidth -> e
    android.graphics.drawable.StateListDrawable mHorizontalThumbDrawable -> f
    android.graphics.drawable.Drawable mHorizontalTrackDrawable -> g
    int mHorizontalThumbHeight -> h
    int mHorizontalTrackHeight -> i
    float mVerticalDragY -> j
    float mHorizontalDragX -> k
    int mRecyclerViewWidth -> l
    int mRecyclerViewHeight -> m
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> n
    boolean mNeedVerticalScrollbar -> o
    boolean mNeedHorizontalScrollbar -> p
    int mState -> q
    int mDragState -> r
    int[] mVerticalRange -> s
    int[] mHorizontalRange -> t
    android.animation.ValueAnimator mShowHideAnimator -> u
    int mAnimationState -> v
    java.lang.Runnable mHideRunnable -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/g;"}
    int[] PRESSED_STATE_SET -> x
    int[] EMPTY_STATE_SET -> y
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void androidx.recyclerview.widget.RecyclerView$ItemDecoration.<init>():0:0 -> <init>
    1:1:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    2:2:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0:0 -> <init>
    3:3:void androidx.recyclerview.widget.RecyclerView.removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration):0:0 -> <init>
    3:3:void androidx.recyclerview.widget.FastScroller.destroyCallbacks():0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:void androidx.recyclerview.widget.FastScroller.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    3:3:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    4:4:void androidx.recyclerview.widget.RecyclerView.removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration):0:0 -> <init>
    4:4:void androidx.recyclerview.widget.FastScroller.destroyCallbacks():0 -> <init>
    4:4:void androidx.recyclerview.widget.FastScroller.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    4:4:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    5:5:void androidx.recyclerview.widget.RecyclerView.removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener):0:0 -> <init>
    5:5:void androidx.recyclerview.widget.FastScroller.destroyCallbacks():0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:void androidx.recyclerview.widget.FastScroller.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    5:5:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    6:6:void androidx.recyclerview.widget.RecyclerView.removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener):0:0 -> <init>
    6:6:void androidx.recyclerview.widget.FastScroller.destroyCallbacks():0 -> <init>
    6:6:void androidx.recyclerview.widget.FastScroller.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    6:6:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    7:7:void androidx.recyclerview.widget.RecyclerView.removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener):0:0 -> <init>
    7:7:void androidx.recyclerview.widget.FastScroller.destroyCallbacks():0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:void androidx.recyclerview.widget.FastScroller.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    7:7:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    8:8:void androidx.recyclerview.widget.RecyclerView.removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener):0:0 -> <init>
    8:8:void androidx.recyclerview.widget.FastScroller.destroyCallbacks():0 -> <init>
    8:8:void androidx.recyclerview.widget.FastScroller.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    8:8:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    9:9:void androidx.recyclerview.widget.FastScroller.cancelHide():0:0 -> <init>
    9:9:void androidx.recyclerview.widget.FastScroller.destroyCallbacks():0 -> <init>
    9:9:void androidx.recyclerview.widget.FastScroller.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    9:9:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    10:10:void androidx.recyclerview.widget.RecyclerView.addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int):0:0 -> <init>
    10:10:void androidx.recyclerview.widget.RecyclerView.addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration):0 -> <init>
    10:10:void androidx.recyclerview.widget.FastScroller.setupCallbacks():0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    10:10:void androidx.recyclerview.widget.FastScroller.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    10:10:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    11:11:void androidx.recyclerview.widget.RecyclerView.addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int):0:0 -> <init>
    11:11:void androidx.recyclerview.widget.RecyclerView.addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration):0 -> <init>
    11:11:void androidx.recyclerview.widget.FastScroller.setupCallbacks():0 -> <init>
    11:11:void androidx.recyclerview.widget.FastScroller.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    11:11:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    12:12:void androidx.recyclerview.widget.RecyclerView.addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener):0:0 -> <init>
    12:12:void androidx.recyclerview.widget.FastScroller.setupCallbacks():0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:12:void androidx.recyclerview.widget.FastScroller.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    12:12:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    13:13:void androidx.recyclerview.widget.RecyclerView.addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener):0:0 -> <init>
    13:13:void androidx.recyclerview.widget.FastScroller.setupCallbacks():0 -> <init>
    13:13:void androidx.recyclerview.widget.FastScroller.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    13:13:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    14:14:void androidx.recyclerview.widget.RecyclerView.addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener):0:0 -> <init>
    14:14:void androidx.recyclerview.widget.FastScroller.setupCallbacks():0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:14:void androidx.recyclerview.widget.FastScroller.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    14:14:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    15:15:void androidx.recyclerview.widget.RecyclerView.addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener):0:0 -> <init>
    15:15:void androidx.recyclerview.widget.FastScroller.setupCallbacks():0 -> <init>
    15:15:void androidx.recyclerview.widget.FastScroller.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    15:15:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    1:1:boolean isPointInsideHorizontalThumb(float,float):0:0 -> a
    3:4:boolean androidx.recyclerview.widget.FastScroller.isLayoutRTL():0:0 -> b
    3:4:boolean isPointInsideVerticalThumb(float,float):0 -> b
    5:19:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> b
    5:19:boolean androidx.recyclerview.widget.FastScroller.isLayoutRTL():0 -> b
    5:19:boolean isPointInsideVerticalThumb(float,float):0 -> b
    20:54:boolean isPointInsideVerticalThumb(float,float):0:0 -> b
    1:1:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/MotionEvent;)Z"}
    1:1:int scrollTo(float,float,int[],int,int,int):0:0 -> d
    19:25:void androidx.recyclerview.widget.FastScroller.cancelHide():0:0 -> e
    19:25:void setState(int):0 -> e
    26:29:void androidx.recyclerview.widget.FastScroller.requestRedraw():0:0 -> e
    26:29:void setState(int):0 -> e
    30:45:void setState(int):0:0 -> e
    46:53:void androidx.recyclerview.widget.FastScroller.cancelHide():0:0 -> e
    46:53:void androidx.recyclerview.widget.FastScroller.resetHideDelay(int):0 -> e
    46:53:void setState(int):0 -> e
    54:62:void androidx.recyclerview.widget.FastScroller.resetHideDelay(int):0:0 -> e
    54:62:void setState(int):0 -> e
    63:73:void androidx.recyclerview.widget.FastScroller.cancelHide():0:0 -> e
    63:73:void androidx.recyclerview.widget.FastScroller.resetHideDelay(int):0 -> e
    63:73:void setState(int):0 -> e
    1:1:void show():0:0 -> f
androidx.recyclerview.widget.FastScroller$1 -> n0.g:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.recyclerview.widget.FastScroller this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:8:void androidx.recyclerview.widget.FastScroller$1.<init>(androidx.recyclerview.widget.FastScroller):0:0 -> <init>
    1:8:void $r8$init$synthetic(java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)V"}
    10:15:void androidx.recyclerview.widget.StaggeredGridLayoutManager$1.run():0:0 -> run
    10:15:void run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    16:19:void androidx.recyclerview.widget.FastScroller.hide(int):0:0 -> run
    16:19:void androidx.recyclerview.widget.FastScroller$1.run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:19:void run$bridge():0 -> run
    20:64:void androidx.recyclerview.widget.FastScroller.hide(int):0:0 -> run
    20:64:void androidx.recyclerview.widget.FastScroller$1.run():0 -> run
    20:64:void run$bridge():0 -> run
androidx.recyclerview.widget.FastScroller$2 -> n0.h:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    1:4:void androidx.recyclerview.widget.RecyclerView$OnScrollListener.<init>():0:0 -> <init>
    1:4:void <init>(androidx.recyclerview.widget.FastScroller):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/k;)V"}
androidx.recyclerview.widget.FastScroller$AnimatorListener -> n0.i:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    boolean mCanceled -> a
    androidx.recyclerview.widget.FastScroller this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/k;"}
    1:1:void <init>(androidx.recyclerview.widget.FastScroller):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/k;)V"}
    1:1:void onAnimationCancel(android.animation.Animator):0:0 -> onAnimationCancel
    37:42:void androidx.recyclerview.widget.FastScroller.requestRedraw():0:0 -> onAnimationEnd
    37:42:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> n0.j:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    androidx.recyclerview.widget.FastScroller this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/k;"}
    1:1:void <init>(androidx.recyclerview.widget.FastScroller):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/k;)V"}
    28:33:void androidx.recyclerview.widget.FastScroller.requestRedraw():0:0 -> onAnimationUpdate
    28:33:void onAnimationUpdate(android.animation.ValueAnimator):0 -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> n0.o:
# {"id":"sourceFile","fileName":"GapWorker.java"}
    java.util.ArrayList mRecyclerViews -> a
    long mPostTimeNs -> b
    long mFrameIntervalNs -> c
    java.util.ArrayList mTasks -> d
    java.lang.ThreadLocal sGapWorker -> e
    java.util.Comparator sTaskComparator -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/l;"}
    10:15:void androidx.recyclerview.widget.GapWorker$1.<init>():0:0 -> <clinit>
    10:15:void <clinit>():0 -> <clinit>
    24:27:void androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl.setPrefetchVector(int,int):0:0 -> a
    24:27:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    28:30:void androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl.setPrefetchVector(int,int):0:0 -> a
    28:30:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int):0 -> a
    3:25:void androidx.recyclerview.widget.GapWorker.buildTaskList():0:0 -> b
    3:25:void prefetch(long):0 -> b
    26:27:void androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl.collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean):0:0 -> b
    26:27:void androidx.recyclerview.widget.GapWorker.buildTaskList():0 -> b
    26:27:void prefetch(long):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    28:30:void androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl.collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean):0:0 -> b
    28:30:void androidx.recyclerview.widget.GapWorker.buildTaskList():0 -> b
    28:30:void prefetch(long):0 -> b
    31:83:void androidx.recyclerview.widget.GapWorker.buildTaskList():0:0 -> b
    31:83:void prefetch(long):0 -> b
    84:86:void androidx.recyclerview.widget.GapWorker$Task.<init>():0:0 -> b
    84:86:void androidx.recyclerview.widget.GapWorker.buildTaskList():0 -> b
    84:86:void prefetch(long):0 -> b
    87:109:void androidx.recyclerview.widget.GapWorker.buildTaskList():0:0 -> b
    87:109:void prefetch(long):0 -> b
    110:126:void androidx.recyclerview.widget.GapWorker.flushTasksWithDeadline(long):0:0 -> b
    110:126:void prefetch(long):0 -> b
    127:128:void androidx.recyclerview.widget.GapWorker.flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long):0:0 -> b
    127:128:void androidx.recyclerview.widget.GapWorker.flushTasksWithDeadline(long):0 -> b
    127:128:void prefetch(long):0 -> b
    129:137:boolean androidx.recyclerview.widget.GapWorker.isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int):0:0 -> b
    129:137:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.GapWorker.prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long):0 -> b
    129:137:void androidx.recyclerview.widget.GapWorker.flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long):0 -> b
    129:137:void androidx.recyclerview.widget.GapWorker.flushTasksWithDeadline(long):0 -> b
    129:137:void prefetch(long):0 -> b
    138:151:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.GapWorker.prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long):0:0 -> b
    138:151:void androidx.recyclerview.widget.GapWorker.flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long):0 -> b
    138:151:void androidx.recyclerview.widget.GapWorker.flushTasksWithDeadline(long):0 -> b
    138:151:void prefetch(long):0 -> b
    152:162:boolean androidx.recyclerview.widget.GapWorker.isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int):0:0 -> b
    152:162:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.GapWorker.prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long):0 -> b
    152:162:void androidx.recyclerview.widget.GapWorker.flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long):0 -> b
    152:162:void androidx.recyclerview.widget.GapWorker.flushTasksWithDeadline(long):0 -> b
    152:162:void prefetch(long):0 -> b
    7:11:void androidx.core.os.TraceCompat.beginSection(java.lang.String):0:0 -> run
    7:11:void run():0 -> run
    12:19:void run():0:0 -> run
    20:23:void androidx.core.os.TraceCompat.endSection():0:0 -> run
    20:23:void run():0 -> run
    24:63:void run():0:0 -> run
    64:67:void androidx.core.os.TraceCompat.endSection():0:0 -> run
    64:67:void run():0 -> run
    68:81:void run():0:0 -> run
    82:87:void androidx.core.os.TraceCompat.endSection():0:0 -> run
    82:87:void run():0 -> run
    88:89:void run():0:0 -> run
    90:92:void androidx.core.os.TraceCompat.endSection():0:0 -> run
    90:92:void run():0 -> run
    93:93:void run():0:0 -> run
androidx.recyclerview.widget.GapWorker$1 -> n0.l:
# {"id":"sourceFile","fileName":"GapWorker.java"}
    5:56:int androidx.recyclerview.widget.GapWorker$1.compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task):0:0 -> compare
    5:56:int compare(java.lang.Object,java.lang.Object):0 -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> n0.m:
# {"id":"sourceFile","fileName":"GapWorker.java"}
    int mPrefetchDx -> a
    int mPrefetchDy -> b
    int mCount -> c
androidx.recyclerview.widget.GapWorker$Task -> n0.n:
# {"id":"sourceFile","fileName":"GapWorker.java"}
    boolean immediate -> a
    int viewVelocity -> b
    int distanceToItem -> c
    androidx.recyclerview.widget.RecyclerView view -> d
    int position -> e
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
# {"id":"sourceFile","fileName":"GridLayoutManager.java"}
    int mSpanCount -> p
    androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/p;"}
    45:71:void setSpanCount(int):0:0 -> <init>
    45:71:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    1:1:void setStackFromEnd(boolean):0:0 -> R
    1:8:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> S
    1:8:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0 -> S
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILn0/n0;Ln0/q0;)I"}
    9:54:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0:0 -> S
    1:1:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/h0;)Z"}
    1:1:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln0/h0;"}
    3:6:void androidx.recyclerview.widget.GridLayoutManager$LayoutParams.<init>(android.content.Context,android.util.AttributeSet):0:0 -> m
    3:6:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet):0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Ln0/h0;"}
    9:12:void androidx.recyclerview.widget.GridLayoutManager$LayoutParams.<init>(android.view.ViewGroup$MarginLayoutParams):0:0 -> n
    9:12:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup$LayoutParams;)Ln0/h0;"}
    13:14:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> n
    15:18:void androidx.recyclerview.widget.GridLayoutManager$LayoutParams.<init>(android.view.ViewGroup$LayoutParams):0:0 -> n
    15:18:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0 -> n
    1:1:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/n0;Ln0/q0;)I"}
    1:1:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/n0;Ln0/q0;)I"}
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> n0.p:
# {"id":"sourceFile","fileName":"GridLayoutManager.java"}
    android.util.SparseIntArray androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.mSpanIndexCache -> a
    1:11:void androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.<init>():0:0 -> <init>
    1:11:void <init>():0 -> <init>
    1:1:int getSpanGroupIndex(int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    3:6:void androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanIndexCache():0:0 -> b
    3:6:void invalidateSpanIndexCache():0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> n0.q:
# {"id":"sourceFile","fileName":"GridLayoutManager.java"}
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> R8$$REMOVED$$CLASS$$108:
# {"id":"sourceFile","fileName":"GridLayoutManager.java"}
androidx.recyclerview.widget.LayoutState -> n0.r:
# {"id":"sourceFile","fileName":"LayoutState.java"}
    int mStartLine -> a
    int mEndLine -> b
    1:1:java.lang.String toString():0:0 -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    int mOrientation -> h
    androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll0/l;"}
    androidx.recyclerview.widget.OrientationHelper mOrientationHelper -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/u;"}
    boolean mReverseLayout -> k
    boolean mShouldReverseLayout -> l
    boolean mStackFromEnd -> m
    boolean mSmoothScrollbarEnabled -> n
    androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/t;"}
    21:26:void androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo.<init>():0:0 -> <init>
    21:26:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    27:37:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    38:79:void setOrientation(int):0:0 -> <init>
    38:79:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    80:81:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    82:94:void setReverseLayout(boolean):0:0 -> <init>
    82:94:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    95:100:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/recyclerview/widget/RecyclerView;)V"}
    10:22:int findFirstVisibleItemPosition():0:0 -> B
    10:22:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> B
    23:25:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0:0 -> B
    26:37:int findLastVisibleItemPosition():0:0 -> B
    26:37:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> B
    38:41:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0:0 -> B
    42:50:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0:0 -> B
    42:50:int findLastVisibleItemPosition():0 -> B
    42:50:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> B
    51:51:int androidx.recyclerview.widget.RecyclerView$LayoutParams.getViewLayoutPosition():0:0 -> B
    51:51:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0 -> B
    51:51:int findLastVisibleItemPosition():0 -> B
    51:51:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> B
    52:60:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0:0 -> B
    52:60:int findFirstVisibleItemPosition():0 -> B
    52:60:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> B
    61:62:int androidx.recyclerview.widget.RecyclerView$LayoutParams.getViewLayoutPosition():0:0 -> B
    61:62:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0 -> B
    61:62:int findFirstVisibleItemPosition():0 -> B
    61:62:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> B
    1:1:void onRestoreInstanceState(android.os.Parcelable):0:0 -> C
    7:22:void androidx.recyclerview.widget.LinearLayoutManager$SavedState.<init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState):0:0 -> D
    7:22:android.os.Parcelable onSaveInstanceState():0 -> D
    23:24:android.os.Parcelable onSaveInstanceState():0:0 -> D
    25:27:void androidx.recyclerview.widget.LinearLayoutManager$SavedState.<init>():0:0 -> D
    25:27:android.os.Parcelable onSaveInstanceState():0 -> D
    28:47:android.os.Parcelable onSaveInstanceState():0:0 -> D
    48:59:android.view.View getChildClosestToEnd():0:0 -> D
    48:59:android.os.Parcelable onSaveInstanceState():0 -> D
    60:72:android.os.Parcelable onSaveInstanceState():0:0 -> D
    73:81:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0:0 -> D
    73:81:android.os.Parcelable onSaveInstanceState():0 -> D
    82:84:int androidx.recyclerview.widget.RecyclerView$LayoutParams.getViewLayoutPosition():0:0 -> D
    82:84:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0 -> D
    82:84:android.os.Parcelable onSaveInstanceState():0 -> D
    85:94:android.view.View getChildClosestToStart():0:0 -> D
    85:94:android.os.Parcelable onSaveInstanceState():0 -> D
    95:102:android.os.Parcelable onSaveInstanceState():0:0 -> D
    1:1:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    23:39:int androidx.recyclerview.widget.ScrollbarHelper.computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean):0:0 -> L
    23:39:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State):0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)V"}
    40:49:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0:0 -> L
    40:49:int androidx.recyclerview.widget.ScrollbarHelper.computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean):0 -> L
    40:49:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State):0 -> L
    50:51:int androidx.recyclerview.widget.RecyclerView$LayoutParams.getViewLayoutPosition():0:0 -> L
    50:51:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0 -> L
    50:51:int androidx.recyclerview.widget.ScrollbarHelper.computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean):0 -> L
    50:51:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State):0 -> L
    1:1:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    5:6:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState():0:0 -> N
    5:6:void ensureLayoutState():0 -> N
    7:12:void androidx.recyclerview.widget.LinearLayoutManager$LayoutState.<init>():0:0 -> N
    7:12:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState():0 -> N
    7:12:void ensureLayoutState():0 -> N
    1:1:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Landroid/view/View;"}
    1:1:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Landroid/view/View;"}
    1:1:android.view.View findOneVisibleChild(int,int,boolean,boolean):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIZ)Landroid/view/View;"}
    1:1:void setStackFromEnd(boolean):0:0 -> R
    9:12:void androidx.recyclerview.widget.RecyclerView$LayoutManager.assertNotInLayoutOrScroll(java.lang.String):0:0 -> a
    9:12:void assertNotInLayoutOrScroll(java.lang.String):0 -> a
    1:1:boolean canScrollHorizontally():0:0 -> b
    1:1:boolean canScrollVertically():0:0 -> c
    1:1:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    1:1:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)V"}
    1:1:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    1:1:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    1:1:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)V"}
    1:1:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    1:1:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln0/h0;"}
    1:1:boolean isAutoMeasureEnabled():0:0 -> z
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> n0.s:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    int mPosition -> a
    int mCoordinate -> b
    boolean mLayoutFromEnd -> c
    boolean mValid -> d
    1:1:void reset():0:0 -> a
    1:1:java.lang.String toString():0:0 -> toString
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> n0.t:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    int mAnchorPosition -> a
    int mAnchorOffset -> b
    boolean mAnchorLayoutFromEnd -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int describeContents():0:0 -> describeContents
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> R8$$REMOVED$$CLASS$$109:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
androidx.recyclerview.widget.OrientationHelper -> n0.v:
# {"id":"sourceFile","fileName":"OrientationHelper.java"}
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/g0;"}
    1:11:void androidx.recyclerview.widget.OrientationHelper.<init>(androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> <init>
    1:11:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/g0;)V"}
    6:11:androidx.recyclerview.widget.OrientationHelper androidx.recyclerview.widget.OrientationHelper.createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> a
    6:11:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/g0;I)Ln0/u;"}
    12:19:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int):0:0 -> a
    20:26:androidx.recyclerview.widget.OrientationHelper androidx.recyclerview.widget.OrientationHelper.createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> a
    20:26:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int):0 -> a
    int getDecoratedEnd(android.view.View) -> b
    int getDecoratedStart(android.view.View) -> c
    int getEndAfterPadding() -> d
    int getStartAfterPadding() -> e
    int getTotalSpace() -> f
androidx.recyclerview.widget.OrientationHelper$1 -> n0.u:
# {"id":"sourceFile","fileName":"OrientationHelper.java"}
    int $r8$classId -> b
      # {"id":"com.android.tools.r8.synthesized"}
    3:6:void androidx.recyclerview.widget.OrientationHelper$1.<init>(androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> <init>
    3:6:void $r8$init$synthetic(androidx.recyclerview.widget.RecyclerView$LayoutManager,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/g0;I)V"}
    8:16:int androidx.recyclerview.widget.OrientationHelper$2.getDecoratedEnd(android.view.View):0:0 -> b
    8:16:int getDecoratedEnd$bridge(android.view.View):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    17:20:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedBottom(android.view.View):0:0 -> b
    17:20:int androidx.recyclerview.widget.OrientationHelper$2.getDecoratedEnd(android.view.View):0 -> b
    17:20:int getDecoratedEnd$bridge(android.view.View):0 -> b
    21:31:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getBottomDecorationHeight(android.view.View):0:0 -> b
    21:31:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedBottom(android.view.View):0 -> b
    21:31:int androidx.recyclerview.widget.OrientationHelper$2.getDecoratedEnd(android.view.View):0 -> b
    21:31:int getDecoratedEnd$bridge(android.view.View):0 -> b
    32:35:int androidx.recyclerview.widget.OrientationHelper$2.getDecoratedEnd(android.view.View):0:0 -> b
    32:35:int getDecoratedEnd$bridge(android.view.View):0 -> b
    36:44:int androidx.recyclerview.widget.OrientationHelper$1.getDecoratedEnd(android.view.View):0:0 -> b
    36:44:int getDecoratedEnd$bridge(android.view.View):0 -> b
    45:48:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedRight(android.view.View):0:0 -> b
    45:48:int androidx.recyclerview.widget.OrientationHelper$1.getDecoratedEnd(android.view.View):0 -> b
    45:48:int getDecoratedEnd$bridge(android.view.View):0 -> b
    49:59:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getRightDecorationWidth(android.view.View):0:0 -> b
    49:59:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedRight(android.view.View):0 -> b
    49:59:int androidx.recyclerview.widget.OrientationHelper$1.getDecoratedEnd(android.view.View):0 -> b
    49:59:int getDecoratedEnd$bridge(android.view.View):0 -> b
    60:64:int androidx.recyclerview.widget.OrientationHelper$1.getDecoratedEnd(android.view.View):0:0 -> b
    60:64:int getDecoratedEnd$bridge(android.view.View):0 -> b
    8:16:int androidx.recyclerview.widget.OrientationHelper$2.getDecoratedStart(android.view.View):0:0 -> c
    8:16:int getDecoratedStart$bridge(android.view.View):0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    17:20:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedTop(android.view.View):0:0 -> c
    17:20:int androidx.recyclerview.widget.OrientationHelper$2.getDecoratedStart(android.view.View):0 -> c
    17:20:int getDecoratedStart$bridge(android.view.View):0 -> c
    21:31:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getTopDecorationHeight(android.view.View):0:0 -> c
    21:31:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedTop(android.view.View):0 -> c
    21:31:int androidx.recyclerview.widget.OrientationHelper$2.getDecoratedStart(android.view.View):0 -> c
    21:31:int getDecoratedStart$bridge(android.view.View):0 -> c
    32:35:int androidx.recyclerview.widget.OrientationHelper$2.getDecoratedStart(android.view.View):0:0 -> c
    32:35:int getDecoratedStart$bridge(android.view.View):0 -> c
    36:44:int androidx.recyclerview.widget.OrientationHelper$1.getDecoratedStart(android.view.View):0:0 -> c
    36:44:int getDecoratedStart$bridge(android.view.View):0 -> c
    45:48:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedLeft(android.view.View):0:0 -> c
    45:48:int androidx.recyclerview.widget.OrientationHelper$1.getDecoratedStart(android.view.View):0 -> c
    45:48:int getDecoratedStart$bridge(android.view.View):0 -> c
    49:59:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getLeftDecorationWidth(android.view.View):0:0 -> c
    49:59:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedLeft(android.view.View):0 -> c
    49:59:int androidx.recyclerview.widget.OrientationHelper$1.getDecoratedStart(android.view.View):0 -> c
    49:59:int getDecoratedStart$bridge(android.view.View):0 -> c
    60:64:int androidx.recyclerview.widget.OrientationHelper$1.getDecoratedStart(android.view.View):0:0 -> c
    60:64:int getDecoratedStart$bridge(android.view.View):0 -> c
    8:9:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getHeight():0:0 -> d
    8:9:int androidx.recyclerview.widget.OrientationHelper$2.getEndAfterPadding():0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:9:int getEndAfterPadding$bridge():0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    10:15:int androidx.recyclerview.widget.OrientationHelper$2.getEndAfterPadding():0:0 -> d
    10:15:int getEndAfterPadding$bridge():0 -> d
    16:17:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getWidth():0:0 -> d
    16:17:int androidx.recyclerview.widget.OrientationHelper$1.getEndAfterPadding():0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:17:int getEndAfterPadding$bridge():0 -> d
    18:24:int androidx.recyclerview.widget.OrientationHelper$1.getEndAfterPadding():0:0 -> d
    18:24:int getEndAfterPadding$bridge():0 -> d
    8:12:int androidx.recyclerview.widget.OrientationHelper$2.getStartAfterPadding():0:0 -> e
    8:12:int getStartAfterPadding$bridge():0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    13:18:int androidx.recyclerview.widget.OrientationHelper$1.getStartAfterPadding():0:0 -> e
    13:18:int getStartAfterPadding$bridge():0 -> e
    8:9:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getHeight():0:0 -> f
    8:9:int androidx.recyclerview.widget.OrientationHelper$2.getTotalSpace():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:9:int getTotalSpace$bridge():0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    10:20:int androidx.recyclerview.widget.OrientationHelper$2.getTotalSpace():0:0 -> f
    10:20:int getTotalSpace$bridge():0 -> f
    21:22:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getWidth():0:0 -> f
    21:22:int androidx.recyclerview.widget.OrientationHelper$1.getTotalSpace():0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    21:22:int getTotalSpace$bridge():0 -> f
    23:34:int androidx.recyclerview.widget.OrientationHelper$1.getTotalSpace():0:0 -> f
    23:34:int getTotalSpace$bridge():0 -> f
androidx.recyclerview.widget.OrientationHelper$2 -> R8$$REMOVED$$CLASS$$110:
# {"id":"sourceFile","fileName":"OrientationHelper.java"}
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/b0;"}
    android.widget.EdgeEffect mLeftGlow -> B
    android.widget.EdgeEffect mTopGlow -> C
    android.widget.EdgeEffect mRightGlow -> D
    android.widget.EdgeEffect mBottomGlow -> E
    androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/c0;"}
    int mScrollState -> G
    int mScrollPointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mInitialTouchX -> J
    int mInitialTouchY -> K
    int mLastTouchX -> L
    int mLastTouchY -> M
    int mTouchSlop -> N
    int mMinFlingVelocity -> O
    int mMaxFlingVelocity -> P
    float mScaledHorizontalScrollFactor -> Q
    float mScaledVerticalScrollFactor -> R
    boolean mPreserveFocusAfterLayout -> S
    androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/s0;"}
    androidx.recyclerview.widget.GapWorker mGapWorker -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/o;"}
    androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/m;"}
    androidx.recyclerview.widget.RecyclerView$State mState -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/q0;"}
    java.util.List mScrollListeners -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    androidx.recyclerview.widget.RecyclerView$Recycler mRecycler -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/n0;"}
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/y;"}
    androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/p0;"}
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/u0;"}
    androidx.recyclerview.widget.AdapterHelper mAdapterHelper -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/b;"}
    androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld0/g;"}
    androidx.recyclerview.widget.ChildHelper mChildHelper -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/d;"}
    int[] mScrollOffset -> e0
    androidx.recyclerview.widget.ViewInfoStore mViewInfoStore -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/c1;"}
    int[] mScrollConsumed -> f0
    boolean mClipToPadding -> g
    int[] mNestedOffsets -> g0
    android.graphics.Rect mTempRect -> h
    java.util.List mPendingAccessibilityImportanceChange -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    android.graphics.Rect mTempRect2 -> i
    java.lang.Runnable mItemAnimatorRunner -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/w;"}
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/g0;"}
    int[] NESTED_SCROLLING_ATTRS -> j0
    java.util.ArrayList mItemDecorations -> k
    int[] CLIP_TO_PADDING_ATTR -> k0
    java.util.ArrayList mOnItemTouchListeners -> l
    boolean ALLOW_THREAD_GAP_WORK -> l0
    androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/k;"}
    java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE -> m0
    boolean mIsAttached -> n
    android.view.animation.Interpolator sQuinticInterpolator -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/x;"}
    boolean mHasFixedSize -> o
    boolean mFirstLayoutComplete -> p
    int mInterceptRequestLayoutDepth -> q
    boolean mLayoutWasDefered -> r
    boolean mLayoutFrozen -> s
    boolean mIgnoreMotionEventTillDown -> t
    int mEatenAccessibilityChangeFlags -> u
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> v
    boolean mDataSetHasChangedAfterLayout -> w
    boolean mDispatchItemsChangedEvent -> x
    int mLayoutOrScrollCounter -> y
    int mDispatchScrollCounter -> z
    46:51:void androidx.recyclerview.widget.RecyclerView$3.<init>():0:0 -> <clinit>
    46:51:void <clinit>():0 -> <clinit>
    8:69:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    8:69:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    70:74:void androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory.<init>():0:0 -> <init>
    70:74:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    70:74:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    75:76:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    75:76:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    77:95:void androidx.recyclerview.widget.RecyclerView$ItemAnimator.<init>():0:0 -> <init>
    77:95:void androidx.recyclerview.widget.SimpleItemAnimator.<init>():0 -> <init>
    77:95:void androidx.recyclerview.widget.DefaultItemAnimator.<init>():0 -> <init>
    77:95:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    77:95:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    96:187:void androidx.recyclerview.widget.DefaultItemAnimator.<init>():0:0 -> <init>
    96:187:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    96:187:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    188:200:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    188:200:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    201:207:void androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl.<init>():0:0 -> <init>
    201:207:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    201:207:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    208:209:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    208:209:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    210:226:void androidx.recyclerview.widget.RecyclerView$State.<init>():0:0 -> <init>
    210:226:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    210:226:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    227:304:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    227:304:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    305:317:float androidx.core.view.ViewConfigurationCompat.getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context):0:0 -> <init>
    305:317:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    305:317:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    318:328:float androidx.core.view.ViewConfigurationCompat.getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context):0:0 -> <init>
    318:328:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    318:328:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    329:354:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    329:354:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    355:356:void androidx.recyclerview.widget.RecyclerView$ItemAnimator.setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener):0:0 -> <init>
    355:356:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    355:356:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    357:368:void initAdapterManager():0:0 -> <init>
    357:368:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    357:368:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    369:380:void initChildrenHelper():0:0 -> <init>
    369:380:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    369:380:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    381:384:void initAutofill():0:0 -> <init>
    381:384:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    381:384:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    385:394:int androidx.core.view.ViewCompat.getImportantForAutofill(android.view.View):0:0 -> <init>
    385:394:void initAutofill():0 -> <init>
    385:394:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    385:394:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    395:397:void androidx.core.view.ViewCompat.setImportantForAutofill(android.view.View,int):0:0 -> <init>
    395:397:void initAutofill():0 -> <init>
    395:397:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    395:397:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    398:403:int androidx.core.view.ViewCompat.getImportantForAccessibility(android.view.View):0:0 -> <init>
    398:403:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    398:403:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    404:406:void androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View,int):0:0 -> <init>
    404:406:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    404:406:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    407:492:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    407:492:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    493:573:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable):0:0 -> <init>
    493:573:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    493:573:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    574:580:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    574:580:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    581:590:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int):0:0 -> <init>
    581:590:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    581:590:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    591:649:java.lang.String getFullClassName(android.content.Context,java.lang.String):0:0 -> <init>
    591:649:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int):0 -> <init>
    591:649:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    591:649:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    650:923:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int):0:0 -> <init>
    650:923:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    650:923:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    924:942:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    924:942:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:boolean access$200(androidx.recyclerview.widget.RecyclerView):0:0 -> a
    7:71:void assertNotInLayoutOrScroll(java.lang.String):0:0 -> b
    102:105:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> c
    102:105:void considerReleasingGlowsOnScroll(int,int):0 -> c
    18:19:boolean androidx.recyclerview.widget.AdapterHelper.hasPendingUpdates():0:0 -> d
    18:19:void consumePendingUpdateOperations():0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    20:27:boolean androidx.recyclerview.widget.AdapterHelper.hasPendingUpdates():0:0 -> d
    20:27:void consumePendingUpdateOperations():0 -> d
    28:32:void consumePendingUpdateOperations():0:0 -> d
    33:34:boolean androidx.recyclerview.widget.AdapterHelper.hasPendingUpdates():0:0 -> d
    33:34:void consumePendingUpdateOperations():0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    35:40:boolean androidx.recyclerview.widget.AdapterHelper.hasPendingUpdates():0:0 -> d
    35:40:void consumePendingUpdateOperations():0 -> d
    41:42:void consumePendingUpdateOperations():0:0 -> d
    43:45:void androidx.core.os.TraceCompat.beginSection(java.lang.String):0:0 -> d
    43:45:void consumePendingUpdateOperations():0 -> d
    46:48:void dispatchLayout():0:0 -> d
    46:48:void consumePendingUpdateOperations():0 -> d
    49:52:void androidx.core.os.TraceCompat.endSection():0:0 -> d
    49:52:void consumePendingUpdateOperations():0 -> d
    53:54:void consumePendingUpdateOperations():0:0 -> d
    55:57:void androidx.core.os.TraceCompat.beginSection(java.lang.String):0:0 -> d
    55:57:void consumePendingUpdateOperations():0 -> d
    58:60:void dispatchLayout():0:0 -> d
    58:60:void consumePendingUpdateOperations():0 -> d
    61:64:void androidx.core.os.TraceCompat.endSection():0:0 -> d
    61:64:void consumePendingUpdateOperations():0 -> d
    10:14:boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedPreScroll(int,int,int[],int[]):0:0 -> dispatchNestedPreScroll
    10:14:boolean dispatchNestedPreScroll(int,int,int[],int[]):0 -> dispatchNestedPreScroll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:16:boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[]):0:0 -> dispatchNestedScroll
    12:16:boolean dispatchNestedScroll(int,int,int,int,int[]):0 -> dispatchNestedScroll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    24:25:void androidx.recyclerview.widget.FastScroller.onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0:0 -> draw
    24:25:void draw(android.graphics.Canvas):0 -> draw
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    26:53:void androidx.recyclerview.widget.FastScroller.onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0:0 -> draw
    26:53:void draw(android.graphics.Canvas):0 -> draw
    54:83:void androidx.recyclerview.widget.FastScroller.drawVerticalScrollbar(android.graphics.Canvas):0:0 -> draw
    54:83:void androidx.recyclerview.widget.FastScroller.onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0 -> draw
    54:83:void draw(android.graphics.Canvas):0 -> draw
    84:87:boolean androidx.recyclerview.widget.FastScroller.isLayoutRTL():0:0 -> draw
    84:87:void androidx.recyclerview.widget.FastScroller.drawVerticalScrollbar(android.graphics.Canvas):0 -> draw
    84:87:void androidx.recyclerview.widget.FastScroller.onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0 -> draw
    84:87:void draw(android.graphics.Canvas):0 -> draw
    88:93:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> draw
    88:93:boolean androidx.recyclerview.widget.FastScroller.isLayoutRTL():0 -> draw
    88:93:void androidx.recyclerview.widget.FastScroller.drawVerticalScrollbar(android.graphics.Canvas):0 -> draw
    88:93:void androidx.recyclerview.widget.FastScroller.onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0 -> draw
    88:93:void draw(android.graphics.Canvas):0 -> draw
    94:138:void androidx.recyclerview.widget.FastScroller.drawVerticalScrollbar(android.graphics.Canvas):0:0 -> draw
    94:138:void androidx.recyclerview.widget.FastScroller.onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0 -> draw
    94:138:void draw(android.graphics.Canvas):0 -> draw
    139:142:void androidx.recyclerview.widget.FastScroller.onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0:0 -> draw
    139:142:void draw(android.graphics.Canvas):0 -> draw
    143:194:void androidx.recyclerview.widget.FastScroller.drawHorizontalScrollbar(android.graphics.Canvas):0:0 -> draw
    143:194:void androidx.recyclerview.widget.FastScroller.onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0 -> draw
    143:194:void draw(android.graphics.Canvas):0 -> draw
    195:221:void androidx.recyclerview.widget.FastScroller.onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0:0 -> draw
    195:221:void draw(android.graphics.Canvas):0 -> draw
    222:481:void draw(android.graphics.Canvas):0:0 -> draw
    482:485:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> draw
    482:485:void draw(android.graphics.Canvas):0 -> draw
    12:15:int androidx.core.view.ViewCompat.getMinimumWidth(android.view.View):0:0 -> e
    12:15:void defaultOnMeasure(int,int):0 -> e
    16:28:void defaultOnMeasure(int,int):0:0 -> e
    29:32:int androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> e
    29:32:void defaultOnMeasure(int,int):0 -> e
    33:40:void defaultOnMeasure(int,int):0:0 -> e
    1:1:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> f
    44:98:boolean isPreferredNextFocus(android.view.View,android.view.View,int):0:0 -> focusSearch
    44:98:android.view.View focusSearch(android.view.View,int):0 -> focusSearch
    99:100:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getLayoutDirection():0:0 -> focusSearch
    99:100:boolean isPreferredNextFocus(android.view.View,android.view.View,int):0 -> focusSearch
    99:100:android.view.View focusSearch(android.view.View,int):0 -> focusSearch
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    101:102:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getLayoutDirection():0:0 -> focusSearch
    101:102:boolean isPreferredNextFocus(android.view.View,android.view.View,int):0 -> focusSearch
    101:102:android.view.View focusSearch(android.view.View,int):0 -> focusSearch
    103:113:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> focusSearch
    103:113:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getLayoutDirection():0 -> focusSearch
    103:113:boolean isPreferredNextFocus(android.view.View,android.view.View,int):0 -> focusSearch
    103:113:android.view.View focusSearch(android.view.View,int):0 -> focusSearch
    114:251:boolean isPreferredNextFocus(android.view.View,android.view.View,int):0:0 -> focusSearch
    114:251:android.view.View focusSearch(android.view.View,int):0 -> focusSearch
    252:256:android.view.View focusSearch(android.view.View,int):0:0 -> focusSearch
    12:16:boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[],int):0:0 -> g
    12:16:boolean dispatchNestedScroll(int,int,int,int,int[],int):0 -> g
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([II)Z"}
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    2:2:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> generateLayoutParams
    1:1:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter():0:0 -> getAdapter
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln0/z;"}
    1:1:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate():0:0 -> getCompatAccessibilityDelegate
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln0/u0;"}
    1:1:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory():0:0 -> getEdgeEffectFactory
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln0/b0;"}
    1:1:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator():0:0 -> getItemAnimator
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln0/c0;"}
    1:1:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager():0:0 -> getLayoutManager
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln0/g0;"}
    1:1:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener():0:0 -> getOnFlingListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln0/i0;"}
    3:6:androidx.recyclerview.widget.RecyclerView$RecycledViewPool androidx.recyclerview.widget.RecyclerView$Recycler.getRecycledViewPool():0:0 -> getRecycledViewPool
    3:6:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool():0 -> getRecycledViewPool
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln0/m0;"}
    7:8:androidx.recyclerview.widget.RecyclerView$RecycledViewPool androidx.recyclerview.widget.RecyclerView$Recycler.getRecycledViewPool():0:0 -> getRecycledViewPool
    7:8:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool():0 -> getRecycledViewPool
    9:21:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.<init>():0:0 -> getRecycledViewPool
    9:21:androidx.recyclerview.widget.RecyclerView$RecycledViewPool androidx.recyclerview.widget.RecyclerView$Recycler.getRecycledViewPool():0 -> getRecycledViewPool
    9:21:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool():0 -> getRecycledViewPool
    22:26:androidx.recyclerview.widget.RecyclerView$RecycledViewPool androidx.recyclerview.widget.RecyclerView$Recycler.getRecycledViewPool():0:0 -> getRecycledViewPool
    22:26:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool():0 -> getRecycledViewPool
    1:1:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper():0:0 -> getScrollingChildHelper
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld0/g;"}
    1:1:java.lang.String exceptionLabel():0:0 -> h
    6:10:boolean androidx.core.view.NestedScrollingChildHelper.hasNestedScrollingParent():0:0 -> hasNestedScrollingParent
    6:10:boolean hasNestedScrollingParent():0 -> hasNestedScrollingParent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:android.view.View findContainingItemView(android.view.View):0:0 -> i
    5:7:boolean androidx.core.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> isNestedScrollingEnabled
    5:7:boolean isNestedScrollingEnabled():0 -> isNestedScrollingEnabled
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)V"}
    1:1:boolean hasNestedScrollingParent(int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Z"}
    11:12:boolean androidx.recyclerview.widget.AdapterHelper.hasPendingUpdates():0:0 -> l
    11:12:boolean hasPendingAdapterUpdates():0 -> l
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:23:boolean androidx.recyclerview.widget.AdapterHelper.hasPendingUpdates():0:0 -> l
    13:23:boolean hasPendingAdapterUpdates():0 -> l
    31:32:void androidx.recyclerview.widget.RecyclerView$Recycler.markItemDecorInsetsDirty():0:0 -> m
    31:32:void markItemDecorInsetsDirty():0 -> m
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    33:48:void androidx.recyclerview.widget.RecyclerView$Recycler.markItemDecorInsetsDirty():0:0 -> m
    33:48:void markItemDecorInsetsDirty():0 -> m
    1:1:void onEnterLayoutOrScroll():0:0 -> n
    24:29:boolean isAccessibilityEnabled():0:0 -> o
    24:29:void dispatchContentChangedIfNecessary():0 -> o
    24:29:void onExitLayoutOrScroll(boolean):0 -> o
    30:38:void dispatchContentChangedIfNecessary():0:0 -> o
    30:38:void onExitLayoutOrScroll(boolean):0 -> o
    39:41:void androidx.core.view.accessibility.AccessibilityEventCompat.setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int):0:0 -> o
    39:41:void dispatchContentChangedIfNecessary():0 -> o
    39:41:void onExitLayoutOrScroll(boolean):0 -> o
    42:46:void dispatchContentChangedIfNecessary():0:0 -> o
    42:46:void onExitLayoutOrScroll(boolean):0 -> o
    47:67:void dispatchPendingImportantForAccessibilityChanges():0:0 -> o
    47:67:void onExitLayoutOrScroll(boolean):0 -> o
    27:32:void androidx.recyclerview.widget.RecyclerView$LayoutManager.dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView):0:0 -> onAttachedToWindow
    27:32:void onAttachedToWindow():0 -> onAttachedToWindow
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    33:46:void onAttachedToWindow():0:0 -> onAttachedToWindow
    47:65:void androidx.recyclerview.widget.GapWorker.<init>():0:0 -> onAttachedToWindow
    47:65:void onAttachedToWindow():0 -> onAttachedToWindow
    66:67:void onAttachedToWindow():0:0 -> onAttachedToWindow
    68:71:android.view.Display androidx.core.view.ViewCompat.getDisplay(android.view.View):0:0 -> onAttachedToWindow
    68:71:void onAttachedToWindow():0 -> onAttachedToWindow
    72:106:void onAttachedToWindow():0:0 -> onAttachedToWindow
    107:108:void androidx.recyclerview.widget.GapWorker.add(androidx.recyclerview.widget.RecyclerView):0:0 -> onAttachedToWindow
    107:108:void onAttachedToWindow():0 -> onAttachedToWindow
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    109:112:void androidx.recyclerview.widget.GapWorker.add(androidx.recyclerview.widget.RecyclerView):0:0 -> onAttachedToWindow
    109:112:void onAttachedToWindow():0 -> onAttachedToWindow
    12:16:void stopScroll():0:0 -> onDetachedFromWindow
    12:16:void onDetachedFromWindow():0 -> onDetachedFromWindow
    17:18:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.stop():0:0 -> onDetachedFromWindow
    17:18:void stopScrollersInternal():0 -> onDetachedFromWindow
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    17:18:void stopScroll():0 -> onDetachedFromWindow
    17:18:void onDetachedFromWindow():0 -> onDetachedFromWindow
    19:32:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.stop():0:0 -> onDetachedFromWindow
    19:32:void stopScrollersInternal():0 -> onDetachedFromWindow
    19:32:void stopScroll():0 -> onDetachedFromWindow
    19:32:void onDetachedFromWindow():0 -> onDetachedFromWindow
    33:39:void androidx.recyclerview.widget.RecyclerView$LayoutManager.dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> onDetachedFromWindow
    33:39:void onDetachedFromWindow():0 -> onDetachedFromWindow
    40:52:void onDetachedFromWindow():0:0 -> onDetachedFromWindow
    53:69:void androidx.recyclerview.widget.ViewInfoStore$InfoRecord.drainCache():0:0 -> onDetachedFromWindow
    53:69:void androidx.recyclerview.widget.ViewInfoStore.onDetach():0 -> onDetachedFromWindow
    53:69:void onDetachedFromWindow():0 -> onDetachedFromWindow
    70:71:void androidx.recyclerview.widget.GapWorker.remove(androidx.recyclerview.widget.RecyclerView):0:0 -> onDetachedFromWindow
    70:71:void onDetachedFromWindow():0 -> onDetachedFromWindow
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    72:78:void androidx.recyclerview.widget.GapWorker.remove(androidx.recyclerview.widget.RecyclerView):0:0 -> onDetachedFromWindow
    72:78:void onDetachedFromWindow():0 -> onDetachedFromWindow
    7:46:boolean dispatchOnItemTouchIntercept(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    7:46:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    47:61:void cancelTouch():0:0 -> onInterceptTouchEvent
    47:61:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    62:146:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    147:156:void cancelTouch():0:0 -> onInterceptTouchEvent
    147:156:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    157:312:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    313:325:boolean startNestedScroll(int,int):0:0 -> onInterceptTouchEvent
    313:325:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    5:11:void androidx.core.os.TraceCompat.beginSection(java.lang.String):0:0 -> onLayout
    5:11:void onLayout(boolean,int,int,int,int):0 -> onLayout
    12:14:void dispatchLayout():0:0 -> onLayout
    12:14:void onLayout(boolean,int,int,int,int):0 -> onLayout
    15:21:void androidx.core.os.TraceCompat.endSection():0:0 -> onLayout
    15:21:void onLayout(boolean,int,int,int,int):0 -> onLayout
    23:24:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0:0 -> onMeasure
    23:24:void onMeasure(int,int):0 -> onMeasure
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    25:34:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0:0 -> onMeasure
    25:34:void onMeasure(int,int):0 -> onMeasure
    35:36:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0:0 -> onMeasure
    35:36:void onMeasure(int,int):0 -> onMeasure
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    37:42:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0:0 -> onMeasure
    37:42:void onMeasure(int,int):0 -> onMeasure
    43:66:void onMeasure(int,int):0:0 -> onMeasure
    67:68:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0:0 -> onMeasure
    67:68:void onMeasure(int,int):0 -> onMeasure
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    69:72:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0:0 -> onMeasure
    69:72:void onMeasure(int,int):0 -> onMeasure
    73:78:void onMeasure(int,int):0:0 -> onMeasure
    7:11:boolean onRequestFocusInDescendants(int,android.graphics.Rect):0:0 -> onRequestFocusInDescendants
    13:14:android.os.Parcelable androidx.customview.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    13:14:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:31:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    7:13:void androidx.recyclerview.widget.RecyclerView$SavedState.<init>(android.os.Parcelable):0:0 -> onSaveInstanceState
    7:13:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    14:22:void androidx.recyclerview.widget.RecyclerView$SavedState.copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState):0:0 -> onSaveInstanceState
    14:22:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    23:32:android.os.Parcelable onSaveInstanceState():0:0 -> onSaveInstanceState
    1:1:boolean dispatchOnItemTouch(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    2:2:void androidx.recyclerview.widget.FastScroller.onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0:0 -> onTouchEvent
    2:2:boolean dispatchOnItemTouch(android.view.MotionEvent):0 -> onTouchEvent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    3:3:void androidx.recyclerview.widget.FastScroller.onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0:0 -> onTouchEvent
    3:3:boolean dispatchOnItemTouch(android.view.MotionEvent):0 -> onTouchEvent
    3:3:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    4:4:int[] androidx.recyclerview.widget.FastScroller.getHorizontalRange():0:0 -> onTouchEvent
    4:4:void androidx.recyclerview.widget.FastScroller.horizontalScrollTo(float):0 -> onTouchEvent
    4:4:void androidx.recyclerview.widget.FastScroller.onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> onTouchEvent
    4:4:boolean dispatchOnItemTouch(android.view.MotionEvent):0 -> onTouchEvent
    4:4:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    5:5:void androidx.recyclerview.widget.FastScroller.horizontalScrollTo(float):0:0 -> onTouchEvent
    5:5:void androidx.recyclerview.widget.FastScroller.onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> onTouchEvent
    5:5:boolean dispatchOnItemTouch(android.view.MotionEvent):0 -> onTouchEvent
    5:5:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    6:6:void androidx.recyclerview.widget.FastScroller.onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0:0 -> onTouchEvent
    6:6:boolean dispatchOnItemTouch(android.view.MotionEvent):0 -> onTouchEvent
    6:6:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    7:7:int[] androidx.recyclerview.widget.FastScroller.getVerticalRange():0:0 -> onTouchEvent
    7:7:void androidx.recyclerview.widget.FastScroller.verticalScrollTo(float):0 -> onTouchEvent
    7:7:void androidx.recyclerview.widget.FastScroller.onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> onTouchEvent
    7:7:boolean dispatchOnItemTouch(android.view.MotionEvent):0 -> onTouchEvent
    7:7:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    8:8:void androidx.recyclerview.widget.FastScroller.verticalScrollTo(float):0:0 -> onTouchEvent
    8:8:void androidx.recyclerview.widget.FastScroller.onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> onTouchEvent
    8:8:boolean dispatchOnItemTouch(android.view.MotionEvent):0 -> onTouchEvent
    8:8:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    9:9:boolean dispatchOnItemTouch(android.view.MotionEvent):0:0 -> onTouchEvent
    9:9:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    10:10:void cancelTouch():0:0 -> onTouchEvent
    10:10:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    11:11:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    12:12:void cancelTouch():0:0 -> onTouchEvent
    12:12:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    13:13:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    14:14:boolean fling(int,int):0:0 -> onTouchEvent
    14:14:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    15:15:boolean startNestedScroll(int,int):0:0 -> onTouchEvent
    15:15:boolean fling(int,int):0 -> onTouchEvent
    15:15:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    16:16:boolean fling(int,int):0:0 -> onTouchEvent
    16:16:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    17:17:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.fling(int,int):0:0 -> onTouchEvent
    17:17:boolean fling(int,int):0 -> onTouchEvent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    17:17:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    18:18:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.fling(int,int):0:0 -> onTouchEvent
    18:18:boolean fling(int,int):0 -> onTouchEvent
    18:18:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    19:19:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    20:20:boolean startNestedScroll(int,int):0:0 -> onTouchEvent
    20:20:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    21:21:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:void onPointerUp(android.view.MotionEvent):0:0 -> p
    1:1:void requestChildOnScreen(android.view.View,android.view.View):0:0 -> q
    16:70:void releaseGlows():0:0 -> r
    16:70:void resetTouch():0 -> r
    71:74:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> r
    71:74:void releaseGlows():0 -> r
    71:74:void resetTouch():0 -> r
    7:9:void dispatchChildDetached(android.view.View):0:0 -> removeDetachedView
    7:9:void removeDetachedView(android.view.View,boolean):0 -> removeDetachedView
    10:13:void removeDetachedView(android.view.View,boolean):0:0 -> removeDetachedView
    13:19:void requestChildFocus(android.view.View,android.view.View):0:0 -> requestChildFocus
    8:12:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean):0:0 -> requestChildRectangleOnScreen
    8:12:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean):0 -> requestChildRectangleOnScreen
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    73:83:boolean androidx.core.view.MotionEventCompat.isFromSource(android.view.MotionEvent,int):0:0 -> s
    73:83:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILandroid/view/MotionEvent;)V"}
    84:106:boolean scrollByInternal(int,int,android.view.MotionEvent):0:0 -> s
    107:109:void ensureLeftGlow():0:0 -> s
    107:109:void pullGlows(float,float,float,float):0 -> s
    107:109:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    110:124:android.widget.EdgeEffect androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory.createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int):0:0 -> s
    110:124:void ensureLeftGlow():0 -> s
    110:124:void pullGlows(float,float,float,float):0 -> s
    110:124:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    125:168:void ensureLeftGlow():0:0 -> s
    125:168:void pullGlows(float,float,float,float):0 -> s
    125:168:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    169:182:void pullGlows(float,float,float,float):0:0 -> s
    169:182:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    183:198:void androidx.core.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> s
    183:198:void pullGlows(float,float,float,float):0 -> s
    183:198:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    199:201:void ensureRightGlow():0:0 -> s
    199:201:void pullGlows(float,float,float,float):0 -> s
    199:201:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    202:216:android.widget.EdgeEffect androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory.createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int):0:0 -> s
    202:216:void ensureRightGlow():0 -> s
    202:216:void pullGlows(float,float,float,float):0 -> s
    202:216:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    217:259:void ensureRightGlow():0:0 -> s
    217:259:void pullGlows(float,float,float,float):0 -> s
    217:259:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    260:282:void pullGlows(float,float,float,float):0:0 -> s
    260:282:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    283:285:void ensureTopGlow():0:0 -> s
    283:285:void pullGlows(float,float,float,float):0 -> s
    283:285:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    286:300:android.widget.EdgeEffect androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory.createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int):0:0 -> s
    286:300:void ensureTopGlow():0 -> s
    286:300:void pullGlows(float,float,float,float):0 -> s
    286:300:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    301:344:void ensureTopGlow():0:0 -> s
    301:344:void pullGlows(float,float,float,float):0 -> s
    301:344:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    345:356:void pullGlows(float,float,float,float):0:0 -> s
    345:356:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    357:371:void androidx.core.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> s
    357:371:void pullGlows(float,float,float,float):0 -> s
    357:371:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    372:374:void ensureBottomGlow():0:0 -> s
    372:374:void pullGlows(float,float,float,float):0 -> s
    372:374:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    375:389:android.widget.EdgeEffect androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory.createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int):0:0 -> s
    375:389:void ensureBottomGlow():0 -> s
    375:389:void pullGlows(float,float,float,float):0 -> s
    375:389:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    390:432:void ensureBottomGlow():0:0 -> s
    390:432:void pullGlows(float,float,float,float):0 -> s
    390:432:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    433:445:void pullGlows(float,float,float,float):0:0 -> s
    433:445:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    446:455:void androidx.core.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> s
    446:455:void pullGlows(float,float,float,float):0 -> s
    446:455:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    456:457:void pullGlows(float,float,float,float):0:0 -> s
    456:457:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    458:460:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> s
    458:460:void pullGlows(float,float,float,float):0 -> s
    458:460:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> s
    461:473:boolean scrollByInternal(int,int,android.view.MotionEvent):0:0 -> s
    8:23:int androidx.core.view.accessibility.AccessibilityEventCompat.getContentChangeTypes(android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    8:23:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
    8:23:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
    24:27:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    1:1:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate):0:0 -> setAccessibilityDelegateCompat
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/u0;)V"}
    9:25:void removeAndRecycleViews():0:0 -> setAdapter
    9:25:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    9:25:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/z;)V"}
    26:27:void androidx.recyclerview.widget.RecyclerView$Recycler.clear():0:0 -> setAdapter
    26:27:void removeAndRecycleViews():0 -> setAdapter
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    26:27:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    26:27:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    28:35:void androidx.recyclerview.widget.RecyclerView$Recycler.clear():0:0 -> setAdapter
    28:35:void removeAndRecycleViews():0 -> setAdapter
    28:35:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    28:35:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    36:37:void androidx.recyclerview.widget.AdapterHelper.reset():0:0 -> setAdapter
    36:37:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    36:37:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    38:45:void androidx.recyclerview.widget.AdapterHelper.reset():0:0 -> setAdapter
    38:45:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    38:45:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    46:47:void androidx.recyclerview.widget.RecyclerView$Recycler.clear():0:0 -> setAdapter
    46:47:void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    46:47:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    46:47:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    48:53:void androidx.recyclerview.widget.RecyclerView$Recycler.clear():0:0 -> setAdapter
    48:53:void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    48:53:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    48:53:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    54:59:androidx.recyclerview.widget.RecyclerView$RecycledViewPool androidx.recyclerview.widget.RecyclerView$Recycler.getRecycledViewPool():0:0 -> setAdapter
    54:59:void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    54:59:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    54:59:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    60:71:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.<init>():0:0 -> setAdapter
    60:71:androidx.recyclerview.widget.RecyclerView$RecycledViewPool androidx.recyclerview.widget.RecyclerView$Recycler.getRecycledViewPool():0 -> setAdapter
    60:71:void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    60:71:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    60:71:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    72:75:androidx.recyclerview.widget.RecyclerView$RecycledViewPool androidx.recyclerview.widget.RecyclerView$Recycler.getRecycledViewPool():0:0 -> setAdapter
    72:75:void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    72:75:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    72:75:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    76:79:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0:0 -> setAdapter
    76:79:void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    76:79:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    76:79:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    80:102:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.clear():0:0 -> setAdapter
    80:102:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    80:102:void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    80:102:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    80:102:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    103:112:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0:0 -> setAdapter
    103:112:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    113:134:void markKnownViewsInvalid():0:0 -> setAdapter
    113:134:void processDataSetCompletelyChanged(boolean):0 -> setAdapter
    113:134:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    135:136:void androidx.recyclerview.widget.RecyclerView$Recycler.markKnownViewsInvalid():0:0 -> setAdapter
    135:136:void markKnownViewsInvalid():0 -> setAdapter
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    135:136:void processDataSetCompletelyChanged(boolean):0 -> setAdapter
    135:136:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    137:160:void androidx.recyclerview.widget.RecyclerView$Recycler.markKnownViewsInvalid():0:0 -> setAdapter
    137:160:void markKnownViewsInvalid():0 -> setAdapter
    137:160:void processDataSetCompletelyChanged(boolean):0 -> setAdapter
    137:160:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    161:164:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0:0 -> setAdapter
    1:1:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback):0:0 -> setChildDrawingOrderCallback
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/a0;)V"}
    16:26:void setClipToPadding(boolean):0:0 -> setClipToPadding
    1:15:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> setEdgeEffectFactory
    1:15:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory):0 -> setEdgeEffectFactory
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/b0;)V"}
    11:21:void androidx.recyclerview.widget.RecyclerView$ItemAnimator.setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener):0:0 -> setItemAnimator
    11:21:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator):0 -> setItemAnimator
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/c0;)V"}
    3:4:void androidx.recyclerview.widget.RecyclerView$Recycler.setViewCacheSize(int):0:0 -> setItemViewCacheSize
    3:4:void setItemViewCacheSize(int):0 -> setItemViewCacheSize
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:8:void androidx.recyclerview.widget.RecyclerView$Recycler.setViewCacheSize(int):0:0 -> setItemViewCacheSize
    5:8:void setItemViewCacheSize(int):0 -> setItemViewCacheSize
    39:43:void stopScroll():0:0 -> setLayoutFrozen
    39:43:void setLayoutFrozen(boolean):0 -> setLayoutFrozen
    44:45:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.stop():0:0 -> setLayoutFrozen
    44:45:void stopScrollersInternal():0 -> setLayoutFrozen
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    44:45:void stopScroll():0 -> setLayoutFrozen
    44:45:void setLayoutFrozen(boolean):0 -> setLayoutFrozen
    46:54:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.stop():0:0 -> setLayoutFrozen
    46:54:void stopScrollersInternal():0 -> setLayoutFrozen
    46:54:void stopScroll():0 -> setLayoutFrozen
    46:54:void setLayoutFrozen(boolean):0 -> setLayoutFrozen
    7:11:void stopScroll():0:0 -> setLayoutManager
    7:11:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/g0;)V"}
    12:13:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.stop():0:0 -> setLayoutManager
    12:13:void stopScrollersInternal():0 -> setLayoutManager
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:13:void stopScroll():0 -> setLayoutManager
    12:13:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    14:31:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.stop():0:0 -> setLayoutManager
    14:31:void stopScrollersInternal():0 -> setLayoutManager
    14:31:void stopScroll():0 -> setLayoutManager
    14:31:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    32:44:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> setLayoutManager
    45:58:void androidx.recyclerview.widget.RecyclerView$Recycler.clear():0:0 -> setLayoutManager
    45:58:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    59:60:void androidx.recyclerview.widget.RecyclerView$LayoutManager.dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> setLayoutManager
    59:60:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    61:66:void androidx.recyclerview.widget.RecyclerView$LayoutManager.dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> setLayoutManager
    61:66:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    67:72:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> setLayoutManager
    73:74:void androidx.recyclerview.widget.RecyclerView$Recycler.clear():0:0 -> setLayoutManager
    73:74:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    75:82:void androidx.recyclerview.widget.RecyclerView$Recycler.clear():0:0 -> setLayoutManager
    75:82:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    83:84:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0:0 -> setLayoutManager
    83:84:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    85:108:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0:0 -> setLayoutManager
    85:108:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    109:111:void androidx.recyclerview.widget.RecyclerView$5.onLeftHiddenState(android.view.View):0:0 -> setLayoutManager
    109:111:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0 -> setLayoutManager
    109:111:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    112:117:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0:0 -> setLayoutManager
    112:117:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    118:119:int androidx.recyclerview.widget.RecyclerView$5.getChildCount():0:0 -> setLayoutManager
    118:119:void androidx.recyclerview.widget.RecyclerView$5.removeAllViews():0 -> setLayoutManager
    118:119:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0 -> setLayoutManager
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    118:119:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    120:125:int androidx.recyclerview.widget.RecyclerView$5.getChildCount():0:0 -> setLayoutManager
    120:125:void androidx.recyclerview.widget.RecyclerView$5.removeAllViews():0 -> setLayoutManager
    120:125:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0 -> setLayoutManager
    120:125:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    126:129:android.view.View androidx.recyclerview.widget.RecyclerView$5.getChildAt(int):0:0 -> setLayoutManager
    126:129:void androidx.recyclerview.widget.RecyclerView$5.removeAllViews():0 -> setLayoutManager
    126:129:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0 -> setLayoutManager
    126:129:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    130:132:void dispatchChildDetached(android.view.View):0:0 -> setLayoutManager
    130:132:void androidx.recyclerview.widget.RecyclerView$5.removeAllViews():0 -> setLayoutManager
    130:132:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0 -> setLayoutManager
    130:132:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    133:145:void androidx.recyclerview.widget.RecyclerView$5.removeAllViews():0:0 -> setLayoutManager
    133:145:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0 -> setLayoutManager
    133:145:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    146:158:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> setLayoutManager
    159:161:void androidx.recyclerview.widget.RecyclerView$LayoutManager.dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView):0:0 -> setLayoutManager
    159:161:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    162:202:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> setLayoutManager
    5:8:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    5:8:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:10:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    9:10:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    11:15:void androidx.core.view.ViewCompat.stopNestedScroll(android.view.View):0:0 -> setNestedScrollingEnabled
    11:15:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    11:15:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    16:18:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    16:18:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    1:1:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener):0:0 -> setOnFlingListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/i0;)V"}
    1:1:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener):0:0 -> setOnScrollListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/k0;)V"}
    3:6:void androidx.recyclerview.widget.RecyclerView$Recycler.setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0:0 -> setRecycledViewPool
    3:6:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/m0;)V"}
    7:12:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.detach():0:0 -> setRecycledViewPool
    7:12:void androidx.recyclerview.widget.RecyclerView$Recycler.setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    7:12:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    13:22:void androidx.recyclerview.widget.RecyclerView$Recycler.setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0:0 -> setRecycledViewPool
    13:22:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    1:1:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener):0:0 -> setRecyclerListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/o0;)V"}
    13:14:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.stop():0:0 -> setScrollState
    13:14:void stopScrollersInternal():0 -> setScrollState
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:14:void setScrollState(int):0 -> setScrollState
    15:26:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.stop():0:0 -> setScrollState
    15:26:void stopScrollersInternal():0 -> setScrollState
    15:26:void setScrollState(int):0 -> setScrollState
    27:56:void dispatchOnScrollStateChanged(int):0:0 -> setScrollState
    27:56:void setScrollState(int):0 -> setScrollState
    1:1:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension):0:0 -> setViewCacheExtension
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/r0;)V"}
    6:10:boolean androidx.core.view.NestedScrollingChildHelper.startNestedScroll(int):0:0 -> startNestedScroll
    6:10:boolean startNestedScroll(int):0 -> startNestedScroll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:9:void androidx.core.view.NestedScrollingChildHelper.stopNestedScroll():0:0 -> stopNestedScroll
    6:9:void stopNestedScroll():0 -> stopNestedScroll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:49:void smoothScrollBy(int,int,android.view.animation.Interpolator):0:0 -> t
    9:49:void smoothScrollBy(int,int):0 -> t
    50:115:int androidx.recyclerview.widget.RecyclerView$ViewFlinger.computeScrollDuration(int,int,int,int):0:0 -> t
    50:115:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> t
    50:115:void smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> t
    50:115:void smoothScrollBy(int,int):0 -> t
    116:127:float androidx.recyclerview.widget.RecyclerView$ViewFlinger.distanceInfluenceForSnapDuration(float):0:0 -> t
    116:127:int androidx.recyclerview.widget.RecyclerView$ViewFlinger.computeScrollDuration(int,int,int,int):0 -> t
    116:127:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> t
    116:127:void smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> t
    116:127:void smoothScrollBy(int,int):0 -> t
    128:160:int androidx.recyclerview.widget.RecyclerView$ViewFlinger.computeScrollDuration(int,int,int,int):0:0 -> t
    128:160:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> t
    128:160:void smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> t
    128:160:void smoothScrollBy(int,int):0 -> t
    161:210:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.smoothScrollBy(int,int,int,android.view.animation.Interpolator):0:0 -> t
    161:210:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> t
    161:210:void smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> t
    161:210:void smoothScrollBy(int,int):0 -> t
    1:1:void startInterceptRequestLayout():0:0 -> u
    1:1:void stopInterceptRequestLayout(boolean):0:0 -> v
    1:1:void stopNestedScroll(int):0:0 -> w
androidx.recyclerview.widget.RecyclerView$1 -> n0.w:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    1:6:void androidx.recyclerview.widget.RecyclerView$1.<init>(androidx.recyclerview.widget.RecyclerView):0:0 -> <init>
    1:6:void $r8$init$synthetic(androidx.recyclerview.widget.RecyclerView,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/recyclerview/widget/RecyclerView;)V"}
    3:8:void androidx.recyclerview.widget.RecyclerView$2.run():0:0 -> run
    3:8:void run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    9:10:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    9:10:void androidx.recyclerview.widget.RecyclerView$2.run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:10:void run$bridge():0 -> run
    11:201:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    11:201:void androidx.recyclerview.widget.RecyclerView$2.run():0 -> run
    11:201:void run$bridge():0 -> run
    202:203:void androidx.recyclerview.widget.DefaultItemAnimator.animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> run
    202:203:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    202:203:void androidx.recyclerview.widget.RecyclerView$2.run():0 -> run
    202:203:void run$bridge():0 -> run
androidx.recyclerview.widget.RecyclerView$2 -> R8$$REMOVED$$CLASS$$111:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$3 -> n0.x:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    1:1:float getInterpolation(float):0:0 -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> n0.y:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    1:6:void androidx.recyclerview.widget.RecyclerView$4.<init>(androidx.recyclerview.widget.RecyclerView):0:0 -> <init>
    1:6:void $r8$init$synthetic(androidx.recyclerview.widget.RecyclerView,androidx.appcompat.graphics.drawable.DrawableContainer$1$$IA$1):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/recyclerview/widget/RecyclerView;I)V"}
androidx.recyclerview.widget.RecyclerView$5 -> R8$$REMOVED$$CLASS$$112:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$Adapter -> n0.z:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback -> n0.a0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> n0.b0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> n0.c0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/y;"}
    java.util.ArrayList mFinishedListeners -> b
    long mMoveDuration -> c
    long mChangeDuration -> d
    void endAnimations() -> a
    boolean isRunning() -> b
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> R8$$REMOVED$$CLASS$$113:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> n0.d0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$LayoutManager -> n0.g0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    androidx.recyclerview.widget.ChildHelper mChildHelper -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/d;"}
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> b
    androidx.recyclerview.widget.ViewBoundsCheck mHorizontalBoundCheck -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/c1;"}
    androidx.recyclerview.widget.ViewBoundsCheck mVerticalBoundCheck -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/c1;"}
    boolean mIsAttachedToWindow -> e
    int mWidth -> f
    int mHeight -> g
    1:1:void <init>():0:0 -> <init>
    void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/recyclerview/widget/RecyclerView;)V"}
    13:54:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent):0:0 -> B
    13:54:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> B
    void onRestoreInstanceState(android.os.Parcelable) -> C
    android.os.Parcelable onSaveInstanceState() -> D
    1:1:void onScrollStateChanged(int):0:0 -> E
    1:1:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    1:2:int androidx.recyclerview.widget.RecyclerView$Recycler.getScrapCount():0:0 -> G
    1:2:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler):0 -> G
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/n0;)V"}
    3:8:int androidx.recyclerview.widget.RecyclerView$Recycler.getScrapCount():0:0 -> G
    3:8:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler):0 -> G
    9:12:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> G
    13:19:void androidx.recyclerview.widget.RecyclerView$Recycler.clearScrap():0:0 -> G
    13:19:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler):0 -> G
    20:23:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> G
    24:32:android.view.View androidx.recyclerview.widget.RecyclerView$Recycler.getScrapViewAt(int):0:0 -> G
    24:32:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler):0 -> G
    1:79:int[] androidx.recyclerview.widget.RecyclerView$LayoutManager.getChildRectangleOnScreenScrollAmount(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean):0:0 -> H
    1:79:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> H
    80:81:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getLayoutDirection():0:0 -> H
    80:81:int[] androidx.recyclerview.widget.RecyclerView$LayoutManager.getChildRectangleOnScreenScrollAmount(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean):0 -> H
    80:81:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> H
    82:91:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> H
    82:91:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getLayoutDirection():0 -> H
    82:91:int[] androidx.recyclerview.widget.RecyclerView$LayoutManager.getChildRectangleOnScreenScrollAmount(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean):0 -> H
    82:91:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> H
    92:113:int[] androidx.recyclerview.widget.RecyclerView$LayoutManager.getChildRectangleOnScreenScrollAmount(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean):0:0 -> H
    92:113:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> H
    114:178:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int):0:0 -> H
    114:178:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> H
    179:186:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0:0 -> H
    1:1:void requestLayout():0:0 -> I
    1:1:void setRecyclerView(androidx.recyclerview.widget.RecyclerView):0:0 -> J
    void assertNotInLayoutOrScroll(java.lang.String) -> a
    boolean canScrollHorizontally() -> b
    boolean canScrollVertically() -> c
    1:1:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/h0;)Z"}
    1:1:int chooseSize(int,int,int):0:0 -> e
    int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)V"}
    int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)V"}
    int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln0/h0;"}
    1:1:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Ln0/h0;"}
    1:1:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup$LayoutParams;)Ln0/h0;"}
    1:1:android.view.View getChildAt(int):0:0 -> o
    1:1:int getChildCount():0:0 -> p
    1:1:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/n0;Ln0/q0;)I"}
    3:54:void androidx.recyclerview.widget.RecyclerView.getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect):0:0 -> r
    3:54:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect):0 -> r
    1:1:int getPaddingBottom():0:0 -> s
    1:1:int getPaddingLeft():0:0 -> t
    1:1:int getPaddingRight():0:0 -> u
    1:1:int getPaddingTop():0:0 -> v
    11:11:int androidx.recyclerview.widget.RecyclerView$LayoutParams.getViewLayoutPosition():0:0 -> w
    11:11:int getPosition(android.view.View):0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)V"}
    3:7:void androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties.<init>():0:0 -> x
    3:7:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int):0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;II)Ln0/f0;"}
    8:47:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int):0:0 -> x
    1:1:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/n0;Ln0/q0;)I"}
    boolean isAutoMeasureEnabled() -> z
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> n0.e0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.recyclerview.widget.RecyclerView$LayoutManager this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:8:void androidx.recyclerview.widget.RecyclerView$LayoutManager$1.<init>(androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> <init>
    1:8:void $r8$init$synthetic(java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)V"}
    8:18:int androidx.recyclerview.widget.RecyclerView$LayoutManager$2.getChildEnd(android.view.View):0:0 -> a
    8:18:int getChildEnd$bridge(android.view.View):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    19:22:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedBottom(android.view.View):0:0 -> a
    19:22:int androidx.recyclerview.widget.RecyclerView$LayoutManager$2.getChildEnd(android.view.View):0 -> a
    19:22:int getChildEnd$bridge(android.view.View):0 -> a
    23:33:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getBottomDecorationHeight(android.view.View):0:0 -> a
    23:33:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedBottom(android.view.View):0 -> a
    23:33:int androidx.recyclerview.widget.RecyclerView$LayoutManager$2.getChildEnd(android.view.View):0 -> a
    23:33:int getChildEnd$bridge(android.view.View):0 -> a
    34:37:int androidx.recyclerview.widget.RecyclerView$LayoutManager$2.getChildEnd(android.view.View):0:0 -> a
    34:37:int getChildEnd$bridge(android.view.View):0 -> a
    38:48:int androidx.recyclerview.widget.RecyclerView$LayoutManager$1.getChildEnd(android.view.View):0:0 -> a
    38:48:int getChildEnd$bridge(android.view.View):0 -> a
    49:52:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedRight(android.view.View):0:0 -> a
    49:52:int androidx.recyclerview.widget.RecyclerView$LayoutManager$1.getChildEnd(android.view.View):0 -> a
    49:52:int getChildEnd$bridge(android.view.View):0 -> a
    53:63:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getRightDecorationWidth(android.view.View):0:0 -> a
    53:63:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedRight(android.view.View):0 -> a
    53:63:int androidx.recyclerview.widget.RecyclerView$LayoutManager$1.getChildEnd(android.view.View):0 -> a
    53:63:int getChildEnd$bridge(android.view.View):0 -> a
    64:68:int androidx.recyclerview.widget.RecyclerView$LayoutManager$1.getChildEnd(android.view.View):0:0 -> a
    64:68:int getChildEnd$bridge(android.view.View):0 -> a
    8:18:int androidx.recyclerview.widget.RecyclerView$LayoutManager$2.getChildStart(android.view.View):0:0 -> b
    8:18:int getChildStart$bridge(android.view.View):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    19:22:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedTop(android.view.View):0:0 -> b
    19:22:int androidx.recyclerview.widget.RecyclerView$LayoutManager$2.getChildStart(android.view.View):0 -> b
    19:22:int getChildStart$bridge(android.view.View):0 -> b
    23:33:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getTopDecorationHeight(android.view.View):0:0 -> b
    23:33:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedTop(android.view.View):0 -> b
    23:33:int androidx.recyclerview.widget.RecyclerView$LayoutManager$2.getChildStart(android.view.View):0 -> b
    23:33:int getChildStart$bridge(android.view.View):0 -> b
    34:37:int androidx.recyclerview.widget.RecyclerView$LayoutManager$2.getChildStart(android.view.View):0:0 -> b
    34:37:int getChildStart$bridge(android.view.View):0 -> b
    38:48:int androidx.recyclerview.widget.RecyclerView$LayoutManager$1.getChildStart(android.view.View):0:0 -> b
    38:48:int getChildStart$bridge(android.view.View):0 -> b
    49:52:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedLeft(android.view.View):0:0 -> b
    49:52:int androidx.recyclerview.widget.RecyclerView$LayoutManager$1.getChildStart(android.view.View):0 -> b
    49:52:int getChildStart$bridge(android.view.View):0 -> b
    53:63:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getLeftDecorationWidth(android.view.View):0:0 -> b
    53:63:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedLeft(android.view.View):0 -> b
    53:63:int androidx.recyclerview.widget.RecyclerView$LayoutManager$1.getChildStart(android.view.View):0 -> b
    53:63:int getChildStart$bridge(android.view.View):0 -> b
    64:68:int androidx.recyclerview.widget.RecyclerView$LayoutManager$1.getChildStart(android.view.View):0:0 -> b
    64:68:int getChildStart$bridge(android.view.View):0 -> b
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> R8$$REMOVED$$CLASS$$114:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> n0.f0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    int orientation -> a
    int spanCount -> b
    boolean reverseLayout -> c
    boolean stackFromEnd -> d
androidx.recyclerview.widget.RecyclerView$LayoutParams -> n0.h0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    android.graphics.Rect mDecorInsets -> a
    boolean mInsetsDirty -> b
    1:1:void <init>(int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void <init>(android.view.ViewGroup$LayoutParams):0:0 -> <init>
    4:4:void <init>(android.view.ViewGroup$MarginLayoutParams):0:0 -> <init>
    5:5:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/h0;)V"}
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> n0.i0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener -> n0.j0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> n0.k0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> n0.m0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    android.util.SparseArray mScrap -> a
    int mAttachCount -> b
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> n0.l0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$Recycler -> n0.n0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    java.util.ArrayList mAttachedScrap -> a
    java.util.ArrayList mCachedViews -> b
    int mRequestedCacheMax -> c
    int mViewCacheMax -> d
    androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/m0;"}
    androidx.recyclerview.widget.RecyclerView this$0 -> f
    1:1:void <init>(androidx.recyclerview.widget.RecyclerView):0:0 -> <init>
    15:19:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> a
    15:19:int convertPreLayoutPositionToPostLayout(int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    20:22:int convertPreLayoutPositionToPostLayout(int):0:0 -> a
    23:27:int androidx.recyclerview.widget.AdapterHelper.findPositionOffset(int):0:0 -> a
    23:27:int convertPreLayoutPositionToPostLayout(int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    28:68:int convertPreLayoutPositionToPostLayout(int):0:0 -> a
    22:25:void androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl.clearPrefetchPositions():0:0 -> b
    22:25:void recycleAndClearCachedViews():0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    26:28:void androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl.clearPrefetchPositions():0:0 -> b
    26:28:void recycleAndClearCachedViews():0 -> b
    29:35:void androidx.recyclerview.widget.RecyclerView$Recycler.recycleCachedViewAt(int):0:0 -> b
    29:35:void recycleAndClearCachedViews():0 -> b
    36:38:void androidx.recyclerview.widget.RecyclerView$Recycler.addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0:0 -> b
    36:38:void androidx.recyclerview.widget.RecyclerView$Recycler.recycleCachedViewAt(int):0 -> b
    36:38:void recycleAndClearCachedViews():0 -> b
    39:39:void androidx.recyclerview.widget.RecyclerView.clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> b
    39:39:void androidx.recyclerview.widget.RecyclerView$Recycler.addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0 -> b
    39:39:void androidx.recyclerview.widget.RecyclerView$Recycler.recycleCachedViewAt(int):0 -> b
    39:39:void recycleAndClearCachedViews():0 -> b
    13:18:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> c
    13:18:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    19:28:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView$Recycler.getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0:0 -> c
    19:28:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> c
    29:30:android.view.View androidx.recyclerview.widget.ChildHelper.findHiddenNonRemovedView(int):0:0 -> c
    29:30:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView$Recycler.getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    29:30:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> c
    31:38:android.view.View androidx.recyclerview.widget.ChildHelper.findHiddenNonRemovedView(int):0:0 -> c
    31:38:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView$Recycler.getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> c
    31:38:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> c
    39:44:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView$Recycler.getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0:0 -> c
    39:44:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> c
    45:46:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> c
    47:52:int androidx.recyclerview.widget.AdapterHelper.findPositionOffset(int):0:0 -> c
    47:52:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    53:100:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> c
    101:108:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView$Recycler.getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0:0 -> c
    101:108:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> c
    109:119:android.view.View androidx.recyclerview.widget.ChildHelper.findHiddenNonRemovedView(int):0:0 -> c
    109:119:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView$Recycler.getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> c
    109:119:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> c
    120:122:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView$5.getChildViewHolder(android.view.View):0:0 -> c
    120:122:android.view.View androidx.recyclerview.widget.ChildHelper.findHiddenNonRemovedView(int):0 -> c
    120:122:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView$Recycler.getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> c
    120:122:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> c
    123:123:android.view.View androidx.recyclerview.widget.ChildHelper.findHiddenNonRemovedView(int):0:0 -> c
    123:123:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView$Recycler.getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> c
    123:123:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> c
    124:131:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView$Recycler.getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0:0 -> c
    124:131:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> c
    132:180:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> c
    28:34:void androidx.recyclerview.widget.RecyclerView$Recycler.recycleCachedViewAt(int):0:0 -> d
    28:34:void updateViewCacheSize():0 -> d
    35:37:void androidx.recyclerview.widget.RecyclerView$Recycler.addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0:0 -> d
    35:37:void androidx.recyclerview.widget.RecyclerView$Recycler.recycleCachedViewAt(int):0 -> d
    35:37:void updateViewCacheSize():0 -> d
    38:39:void androidx.recyclerview.widget.RecyclerView.clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> d
    38:39:void androidx.recyclerview.widget.RecyclerView$Recycler.addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0 -> d
    38:39:void androidx.recyclerview.widget.RecyclerView$Recycler.recycleCachedViewAt(int):0 -> d
    38:39:void updateViewCacheSize():0 -> d
androidx.recyclerview.widget.RecyclerView$RecyclerListener -> n0.o0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$SavedState -> n0.p0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    android.os.Parcelable mLayoutState -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel,java.lang.ClassLoader):0:0 -> <init>
    3:8:void androidx.customview.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    3:8:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    9:12:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> R8$$REMOVED$$CLASS$$115:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$State -> n0.q0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    int mPreviousLayoutItemCount -> a
    int mDeletedInvisibleItemCountSincePreviousLayout -> b
    boolean mStructureChanged -> c
    boolean mInPreLayout -> d
    boolean mRunSimpleAnimations -> e
    boolean mRunPredictiveAnimations -> f
    1:1:int getItemCount():0:0 -> a
    1:1:java.lang.String toString():0:0 -> toString
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension -> n0.r0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> n0.s0:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    int mLastFlingX -> a
    int mLastFlingY -> b
    android.widget.OverScroller mScroller -> c
    android.view.animation.Interpolator mInterpolator -> d
    boolean mEatRunOnAnimationRequest -> e
    boolean mReSchedulePostAnimationCallback -> f
    androidx.recyclerview.widget.RecyclerView this$0 -> g
    1:1:void <init>(androidx.recyclerview.widget.RecyclerView):0:0 -> <init>
    16:19:void androidx.core.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> a
    16:19:void postOnAnimation():0 -> a
    7:21:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.stop():0:0 -> run
    7:21:void run():0 -> run
    22:189:void run():0:0 -> run
    190:192:void androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl.clearPrefetchPositions():0:0 -> run
    190:192:void run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    193:194:void androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl.clearPrefetchPositions():0:0 -> run
    193:194:void run():0 -> run
    195:203:void run():0:0 -> run
    204:207:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.enableRunOnAnimationRequests():0:0 -> run
    204:207:void run():0 -> run
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> n0.u0:
# {"id":"sourceFile","fileName":"RecyclerViewAccessibilityDelegate.java"}
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> d
    1:1:void <init>(androidx.recyclerview.widget.RecyclerView):0:0 -> <init>
    19:24:boolean androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.shouldIgnore():0:0 -> a
    19:24:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> a
    25:40:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> a
    3:9:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    3:9:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Le0/j;)V"}
    10:14:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setClassName(java.lang.CharSequence):0:0 -> b
    10:14:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    15:20:boolean androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.shouldIgnore():0:0 -> b
    15:20:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    21:30:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    31:32:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    31:32:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    33:35:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    33:35:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    36:52:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    36:52:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    36:52:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    53:55:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(int):0:0 -> b
    53:55:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    53:55:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    53:55:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    56:58:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setScrollable(boolean):0:0 -> b
    56:58:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    56:58:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    56:58:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    59:76:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    59:76:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    59:76:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    77:79:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(int):0:0 -> b
    77:79:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    77:79:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    77:79:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    80:82:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setScrollable(boolean):0:0 -> b
    80:82:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    80:82:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    80:82:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    83:93:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    83:93:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    83:93:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    94:97:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat.obtain(int,int,boolean,int):0:0 -> b
    94:97:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    94:97:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    94:97:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    98:101:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setCollectionInfo(java.lang.Object):0:0 -> b
    98:101:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    98:101:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    98:101:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    11:17:boolean androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.shouldIgnore():0:0 -> c
    11:17:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    18:27:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> c
    28:29:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0:0 -> c
    28:29:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    30:43:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0:0 -> c
    30:43:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    44:49:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle):0:0 -> c
    44:49:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    44:49:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    50:51:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getHeight():0:0 -> c
    50:51:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle):0 -> c
    50:51:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    50:51:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    52:72:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle):0:0 -> c
    52:72:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    52:72:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    73:74:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getWidth():0:0 -> c
    73:74:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle):0 -> c
    73:74:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    73:74:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    75:94:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle):0:0 -> c
    75:94:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    75:94:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    95:96:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getHeight():0:0 -> c
    95:96:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle):0 -> c
    95:96:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    95:96:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    97:117:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle):0:0 -> c
    97:117:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    97:117:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    118:119:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getWidth():0:0 -> c
    118:119:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle):0 -> c
    118:119:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    118:119:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    120:142:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle):0:0 -> c
    120:142:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    120:142:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> n0.t0:
# {"id":"sourceFile","fileName":"RecyclerViewAccessibilityDelegate.java"}
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mRecyclerViewDelegate -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/u0;"}
    1:1:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/u0;)V"}
    3:9:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    3:9:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Le0/j;)V"}
    10:11:boolean androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.shouldIgnore():0:0 -> b
    10:11:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:17:boolean androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.shouldIgnore():0:0 -> b
    12:17:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    18:32:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    33:36:void androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    33:36:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    11:12:boolean androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.shouldIgnore():0:0 -> c
    11:12:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:19:boolean androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.shouldIgnore():0:0 -> c
    13:19:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    20:31:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> c
    32:33:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityActionForItem(android.view.View,int,android.os.Bundle):0:0 -> c
    32:33:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    34:36:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityActionForItem(android.view.View,int,android.os.Bundle):0:0 -> c
    34:36:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
androidx.recyclerview.widget.ScrollbarHelper -> R8$$REMOVED$$CLASS$$116:
# {"id":"sourceFile","fileName":"ScrollbarHelper.java"}
androidx.recyclerview.widget.SimpleItemAnimator -> R8$$REMOVED$$CLASS$$117:
# {"id":"sourceFile","fileName":"SimpleItemAnimator.java"}
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    int mSpanCount -> h
    androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[] mSpans -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Ln0/y0;"}
    androidx.recyclerview.widget.OrientationHelper mPrimaryOrientation -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/v;"}
    androidx.recyclerview.widget.OrientationHelper mSecondaryOrientation -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/v;"}
    int mOrientation -> l
    boolean mReverseLayout -> m
    boolean mShouldReverseLayout -> n
    androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/c1;"}
    int mGapStrategy -> p
    androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/x0;"}
    boolean mSmoothScrollbarEnabled -> r
    java.lang.Runnable mCheckForGapsRunnable -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln0/g;"}
    53:82:void setOrientation(int):0:0 -> <init>
    53:82:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    83:84:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    85:91:void setSpanCount(int):0:0 -> <init>
    85:91:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    92:99:void invalidateSpanAssignments():0:0 -> <init>
    92:99:void setSpanCount(int):0 -> <init>
    92:99:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    100:132:void setSpanCount(int):0:0 -> <init>
    100:132:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    133:134:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    135:152:void setReverseLayout(boolean):0:0 -> <init>
    135:152:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    153:154:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    155:163:void androidx.recyclerview.widget.LayoutState.<init>():0:0 -> <init>
    155:163:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    164:179:void createOrientationHelpers():0:0 -> <init>
    164:179:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:16:boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.removeCallbacks(java.lang.Runnable):0:0 -> A
    7:16:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler):0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/recyclerview/widget/RecyclerView;)V"}
    17:28:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> A
    24:33:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0:0 -> B
    24:33:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> B
    34:35:int androidx.recyclerview.widget.RecyclerView$LayoutParams.getViewLayoutPosition():0:0 -> B
    34:35:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0 -> B
    34:35:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> B
    1:1:void onRestoreInstanceState(android.os.Parcelable):0:0 -> C
    7:50:void androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState.<init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState):0:0 -> D
    7:50:android.os.Parcelable onSaveInstanceState():0 -> D
    51:52:android.os.Parcelable onSaveInstanceState():0:0 -> D
    53:68:void androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState.<init>():0:0 -> D
    53:68:android.os.Parcelable onSaveInstanceState():0 -> D
    69:105:android.os.Parcelable onSaveInstanceState():0:0 -> D
    106:122:int findFirstVisibleItemPositionInt():0:0 -> D
    106:122:android.os.Parcelable onSaveInstanceState():0 -> D
    123:156:android.os.Parcelable onSaveInstanceState():0:0 -> D
    157:166:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0:0 -> D
    157:166:int findFirstVisibleItemPositionInt():0 -> D
    157:166:android.os.Parcelable onSaveInstanceState():0 -> D
    167:174:int androidx.recyclerview.widget.RecyclerView$LayoutParams.getViewLayoutPosition():0:0 -> D
    167:174:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0 -> D
    167:174:int findFirstVisibleItemPositionInt():0 -> D
    167:174:android.os.Parcelable onSaveInstanceState():0 -> D
    1:1:void onScrollStateChanged(int):0:0 -> E
    21:50:boolean checkForGaps():0:0 -> K
    1:1:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    20:36:int androidx.recyclerview.widget.ScrollbarHelper.computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean):0:0 -> M
    20:36:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State):0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)V"}
    37:46:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0:0 -> M
    37:46:int androidx.recyclerview.widget.ScrollbarHelper.computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean):0 -> M
    37:46:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State):0 -> M
    47:48:int androidx.recyclerview.widget.RecyclerView$LayoutParams.getViewLayoutPosition():0:0 -> M
    47:48:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0 -> M
    47:48:int androidx.recyclerview.widget.ScrollbarHelper.computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean):0 -> M
    47:48:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State):0 -> M
    1:1:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    1:1:android.view.View findFirstVisibleItemClosestToEnd(boolean):0:0 -> O
    1:1:android.view.View findFirstVisibleItemClosestToStart(boolean):0:0 -> P
    1:1:int getFirstChildPosition():0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    1:1:int getLastChildPosition():0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    1:1:android.view.View hasGapsToFix():0:0 -> S
    3:4:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getLayoutDirection():0:0 -> T
    3:4:boolean isLayoutRTL():0 -> T
    5:14:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> T
    5:14:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getLayoutDirection():0 -> T
    5:14:boolean isLayoutRTL():0 -> T
    9:12:void androidx.recyclerview.widget.RecyclerView$LayoutManager.assertNotInLayoutOrScroll(java.lang.String):0:0 -> a
    9:12:void assertNotInLayoutOrScroll(java.lang.String):0 -> a
    1:1:boolean canScrollHorizontally():0:0 -> b
    1:1:boolean canScrollVertically():0:0 -> c
    1:1:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/h0;)Z"}
    1:1:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    1:1:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)V"}
    1:1:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    1:1:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    1:1:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)V"}
    1:1:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;)I"}
    9:12:void androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams.<init>(int,int):0:0 -> l
    9:12:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams():0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln0/h0;"}
    13:14:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams():0:0 -> l
    15:18:void androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams.<init>(int,int):0:0 -> l
    15:18:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams():0 -> l
    3:6:void androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams.<init>(android.content.Context,android.util.AttributeSet):0:0 -> m
    3:6:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet):0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;)Ln0/h0;"}
    9:12:void androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams.<init>(android.view.ViewGroup$MarginLayoutParams):0:0 -> n
    9:12:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup$LayoutParams;)Ln0/h0;"}
    13:14:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> n
    15:18:void androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams.<init>(android.view.ViewGroup$LayoutParams):0:0 -> n
    15:18:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0 -> n
    1:1:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/n0;Ln0/q0;)I"}
    1:1:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/n0;Ln0/q0;)I"}
    1:1:boolean isAutoMeasureEnabled():0:0 -> z
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> R8$$REMOVED$$CLASS$$118:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> n0.v0:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> R8$$REMOVED$$CLASS$$120:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> n0.w0:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    int mPosition -> a
    int mGapDir -> b
    int[] mGapPerSpan -> c
    boolean mHasUnwantedGapAfter -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int describeContents():0:0 -> describeContents
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> R8$$REMOVED$$CLASS$$119:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> n0.x0:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    int mAnchorPosition -> a
    int mVisibleAnchorPosition -> b
    int mSpanOffsetsSize -> c
    int[] mSpanOffsets -> d
    int mSpanLookupSize -> e
    int[] mSpanLookup -> f
    java.util.List mFullSpanItems -> g
    boolean mReverseLayout -> h
    boolean mAnchorLayoutFromEnd -> i
    boolean mLastLayoutRTL -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int describeContents():0:0 -> describeContents
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> R8$$REMOVED$$CLASS$$121:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> n0.y0:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    java.util.ArrayList mViews -> a
    int mCachedStart -> b
    int mCachedEnd -> c
    int mIndex -> d
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> e
    1:1:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int):0:0 -> <init>
    15:22:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.getLayoutParams(android.view.View):0:0 -> a
    15:22:void calculateCachedEnd():0 -> a
    23:34:void calculateCachedEnd():0:0 -> a
    1:1:void clear():0:0 -> b
    1:1:int getEndLine(int):0:0 -> c
    20:25:void androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.calculateCachedStart():0:0 -> d
    20:25:int getStartLine(int):0 -> d
    26:33:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.getLayoutParams(android.view.View):0:0 -> d
    26:33:void androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.calculateCachedStart():0 -> d
    26:33:int getStartLine(int):0 -> d
    34:47:void androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.calculateCachedStart():0:0 -> d
    34:47:int getStartLine(int):0 -> d
androidx.recyclerview.widget.ViewBoundsCheck -> R8$$REMOVED$$CLASS$$122:
# {"id":"sourceFile","fileName":"ViewBoundsCheck.java"}
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> n0.z0:
# {"id":"sourceFile","fileName":"ViewBoundsCheck.java"}
    int mBoundFlags -> a
    int mRvStart -> b
    int mRvEnd -> c
    int mChildStart -> d
    int mChildEnd -> e
    1:1:boolean boundsMatch():0:0 -> a
androidx.recyclerview.widget.ViewBoundsCheck$Callback -> n0.a1:
# {"id":"sourceFile","fileName":"ViewBoundsCheck.java"}
androidx.recyclerview.widget.ViewInfoStore -> n0.c1:
# {"id":"sourceFile","fileName":"ViewInfoStore.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.collection.ArrayMap mLayoutHolderMap -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    androidx.collection.LongSparseArray mOldChangedHolders -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:1:void androidx.recyclerview.widget.ViewInfoStore.<init>():0:0 -> <init>
    1:1:void $r8$init$synthetic(int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void androidx.collection.ArrayMap.<init>():0:0 -> <init>
    2:2:void androidx.recyclerview.widget.ViewInfoStore.<init>():0 -> <init>
    2:2:void $r8$init$synthetic(int):0 -> <init>
    3:3:void androidx.recyclerview.widget.ViewInfoStore.<init>():0:0 -> <init>
    3:3:void $r8$init$synthetic(int):0 -> <init>
    4:4:void androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup.<init>():0:0 -> <init>
    4:4:void $r8$init$synthetic(int):0 -> <init>
    5:5:void androidx.recyclerview.widget.ViewBoundsCheck.<init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback):0:0 -> <init>
    5:5:void $r8$init$synthetic(androidx.recyclerview.widget.ViewBoundsCheck$Callback):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/e0;)V"}
    6:6:void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.<init>():0:0 -> <init>
    6:6:void androidx.recyclerview.widget.ViewBoundsCheck.<init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback):0 -> <init>
    6:6:void $r8$init$synthetic(androidx.recyclerview.widget.ViewBoundsCheck$Callback):0 -> <init>
    14:23:void androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup.clear():0:0 -> a
    14:23:void clear$bridge():0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    24:30:void androidx.recyclerview.widget.ViewInfoStore.clear():0:0 -> a
    24:30:void clear$bridge():0 -> a
    31:32:void androidx.collection.LongSparseArray.clear():0:0 -> a
    31:32:void androidx.recyclerview.widget.ViewInfoStore.clear():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    31:32:void clear$bridge():0 -> a
    33:48:void androidx.collection.LongSparseArray.clear():0:0 -> a
    33:48:void androidx.recyclerview.widget.ViewInfoStore.clear():0 -> a
    33:48:void clear$bridge():0 -> a
    16:22:int androidx.recyclerview.widget.RecyclerView$LayoutManager$2.getParentStart():0:0 -> b
    16:22:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0 -> b
    23:32:int androidx.recyclerview.widget.RecyclerView$LayoutManager$1.getParentStart():0:0 -> b
    23:32:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0 -> b
    33:41:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0:0 -> b
    42:43:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getHeight():0:0 -> b
    42:43:int androidx.recyclerview.widget.RecyclerView$LayoutManager$2.getParentEnd():0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    42:43:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0 -> b
    44:51:int androidx.recyclerview.widget.RecyclerView$LayoutManager$2.getParentEnd():0:0 -> b
    44:51:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0 -> b
    52:53:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getWidth():0:0 -> b
    52:53:int androidx.recyclerview.widget.RecyclerView$LayoutManager$1.getParentEnd():0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    52:53:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0 -> b
    54:72:int androidx.recyclerview.widget.RecyclerView$LayoutManager$1.getParentEnd():0:0 -> b
    54:72:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0 -> b
    73:81:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0:0 -> b
    82:88:android.view.View androidx.recyclerview.widget.RecyclerView$LayoutManager$2.getChildAt(int):0:0 -> b
    82:88:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0 -> b
    89:98:android.view.View androidx.recyclerview.widget.RecyclerView$LayoutManager$1.getChildAt(int):0:0 -> b
    89:98:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0 -> b
    99:117:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0:0 -> b
    118:119:void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.setBounds(int,int,int,int):0:0 -> b
    118:119:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    120:130:void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.setBounds(int,int,int,int):0:0 -> b
    120:130:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0 -> b
    131:134:void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.addFlags(int):0:0 -> b
    131:134:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0 -> b
    135:148:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0:0 -> b
    149:152:void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.addFlags(int):0:0 -> b
    149:152:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0 -> b
    153:162:android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(int,int,int,int):0:0 -> b
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> n0.b1:
# {"id":"sourceFile","fileName":"ViewInfoStore.java"}
    androidx.core.util.Pools$Pool sPool -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"La0/i;"}
    1:1:void <clinit>():0:0 -> <clinit>
androidx.startup.AppInitializer -> o0.a:
# {"id":"sourceFile","fileName":"AppInitializer.java"}
    java.util.Map mInitialized -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/HashMap;"}
    java.util.Set mDiscovered -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/HashSet;"}
    android.content.Context mContext -> c
    androidx.startup.AppInitializer sInstance -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lo0/a;"}
    java.lang.Object sLock -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context):0:0 -> <init>
    90:92:void androidx.startup.StartupException.<init>(java.lang.Throwable):0:0 -> a
    90:92:void discoverAndInitialize(android.os.Bundle):0 -> a
    93:94:void discoverAndInitialize(android.os.Bundle):0:0 -> a
    9:22:boolean androidx.tracing.Trace.isEnabled():0:0 -> b
    9:22:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/util/HashSet;)V"}
    23:73:boolean androidx.tracing.Trace.isEnabledFallback():0:0 -> b
    23:73:boolean androidx.tracing.Trace.isEnabled():0 -> b
    23:73:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    74:77:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    78:90:java.lang.String androidx.tracing.Trace.truncatedTraceSectionLabel(java.lang.String):0:0 -> b
    78:90:void androidx.tracing.Trace.beginSection(java.lang.String):0 -> b
    78:90:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    91:97:void androidx.tracing.TraceApi18Impl.beginSection(java.lang.String):0:0 -> b
    91:97:void androidx.tracing.Trace.beginSection(java.lang.String):0 -> b
    91:97:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    98:125:void androidx.tracing.Trace.handleException(java.lang.String,java.lang.Exception):0:0 -> b
    98:125:boolean androidx.tracing.Trace.isEnabledFallback():0 -> b
    98:125:boolean androidx.tracing.Trace.isEnabled():0 -> b
    98:125:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    126:209:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    210:212:void androidx.startup.StartupException.<init>(java.lang.Throwable):0:0 -> b
    210:212:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    213:216:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    217:224:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> b
    217:224:void androidx.tracing.Trace.endSection():0 -> b
    217:224:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    225:240:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    241:243:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> b
    241:243:void androidx.tracing.Trace.endSection():0 -> b
    241:243:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    244:244:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    1:1:androidx.startup.AppInitializer getInstance(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lo0/a;"}
androidx.startup.InitializationProvider -> androidx.startup.InitializationProvider:
# {"id":"sourceFile","fileName":"InitializationProvider.java"}
    17:20:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    17:20:boolean onCreate():0 -> onCreate
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    21:23:void androidx.tracing.TraceApi18Impl.beginSection(java.lang.String):0:0 -> onCreate
    21:23:void androidx.tracing.Trace.beginSection(java.lang.String):0 -> onCreate
    21:23:void androidx.startup.AppInitializer.discoverAndInitialize():0 -> onCreate
    21:23:boolean onCreate():0 -> onCreate
    24:53:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    24:53:boolean onCreate():0 -> onCreate
    54:60:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> onCreate
    54:60:void androidx.tracing.Trace.endSection():0 -> onCreate
    54:60:void androidx.startup.AppInitializer.discoverAndInitialize():0 -> onCreate
    54:60:boolean onCreate():0 -> onCreate
    61:62:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    61:62:boolean onCreate():0 -> onCreate
    63:65:void androidx.startup.StartupException.<init>(java.lang.Throwable):0:0 -> onCreate
    63:65:void androidx.startup.AppInitializer.discoverAndInitialize():0 -> onCreate
    63:65:boolean onCreate():0 -> onCreate
    66:66:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    66:66:boolean onCreate():0 -> onCreate
    67:69:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> onCreate
    67:69:void androidx.tracing.Trace.endSection():0 -> onCreate
    67:69:void androidx.startup.AppInitializer.discoverAndInitialize():0 -> onCreate
    67:69:boolean onCreate():0 -> onCreate
    70:72:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    70:72:boolean onCreate():0 -> onCreate
    73:76:boolean onCreate():0:0 -> onCreate
    77:79:void androidx.startup.StartupException.<init>(java.lang.String):0:0 -> onCreate
    77:79:boolean onCreate():0 -> onCreate
    80:80:boolean onCreate():0:0 -> onCreate
androidx.startup.Initializer -> o0.b:
# {"id":"sourceFile","fileName":"Initializer.java"}
    java.util.List dependencies() -> a
    java.lang.Object create(android.content.Context) -> b
androidx.startup.StartupException -> o0.c:
# {"id":"sourceFile","fileName":"StartupException.java"}
    1:1:void com.getkeepsafe.relinker.MissingLibraryException.<init>(java.lang.String,java.lang.String[],java.lang.String[]):0:0 -> <init>
androidx.tracing.Trace -> R8$$REMOVED$$CLASS$$123:
# {"id":"sourceFile","fileName":"Trace.java"}
androidx.tracing.TraceApi18Impl -> R8$$REMOVED$$CLASS$$124:
# {"id":"sourceFile","fileName":"TraceApi18Impl.java"}
androidx.tracing.TraceApi29Impl -> p0.a:
# {"id":"sourceFile","fileName":"TraceApi29Impl.java"}
    1:1:boolean isEnabled():0:0 -> a
androidx.vectordrawable.graphics.drawable.AndroidResources -> q0.a:
# {"id":"sourceFile","fileName":"AndroidResources.java"}
    int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY -> a
    int[] STYLEABLE_VECTOR_DRAWABLE_GROUP -> b
    int[] STYLEABLE_VECTOR_DRAWABLE_PATH -> c
    int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH -> d
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE -> e
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET -> f
    int[] STYLEABLE_ANIMATOR -> g
    int[] STYLEABLE_ANIMATOR_SET -> h
    int[] STYLEABLE_PROPERTY_VALUES_HOLDER -> i
    int[] STYLEABLE_KEYFRAME -> j
    int[] STYLEABLE_PROPERTY_ANIMATOR -> k
    1:1:void <clinit>():0:0 -> <clinit>
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> q0.d:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq0/b;"}
    android.content.Context mContext -> d
    android.graphics.drawable.Drawable$Callback mCallback -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/g;"}
    15:20:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState.<init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources):0:0 -> <init>
    15:20:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)V"}
    5:8:void androidx.core.graphics.drawable.DrawableCompat.applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme):0:0 -> applyTheme
    5:8:void applyTheme(android.content.res.Resources$Theme):0 -> applyTheme
    5:11:boolean androidx.core.graphics.drawable.DrawableCompat.canApplyTheme(android.graphics.drawable.Drawable):0:0 -> canApplyTheme
    5:11:boolean canApplyTheme():0 -> canApplyTheme
    1:1:void draw(android.graphics.Canvas):0:0 -> draw
    5:11:int androidx.core.graphics.drawable.DrawableCompat.getAlpha(android.graphics.drawable.Drawable):0:0 -> getAlpha
    5:11:int getAlpha():0 -> getAlpha
    12:18:int getAlpha():0:0 -> getAlpha
    1:1:int getChangingConfigurations():0:0 -> getChangingConfigurations
    5:11:android.graphics.ColorFilter androidx.core.graphics.drawable.DrawableCompat.getColorFilter(android.graphics.drawable.Drawable):0:0 -> getColorFilter
    5:11:android.graphics.ColorFilter getColorFilter():0 -> getColorFilter
    12:18:android.graphics.ColorFilter getColorFilter():0:0 -> getColorFilter
    1:1:android.graphics.drawable.Drawable$ConstantState getConstantState():0:0 -> getConstantState
    1:1:int getIntrinsicHeight():0:0 -> getIntrinsicHeight
    1:1:int getIntrinsicWidth():0:0 -> getIntrinsicWidth
    1:1:int getOpacity():0:0 -> getOpacity
    1:1:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0:0 -> inflate
    2:2:void androidx.core.graphics.drawable.DrawableCompat.inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    2:2:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    3:3:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    4:4:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.create(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> inflate
    4:4:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    5:5:android.graphics.drawable.Drawable androidx.core.content.res.ResourcesCompat.getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> inflate
    5:5:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.create(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> inflate
    5:5:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    6:6:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.create(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> inflate
    6:6:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    7:7:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    7:7:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.create(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> inflate
    7:7:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    8:8:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.create(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> inflate
    8:8:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    9:9:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.setAllowCaching(boolean):0:0 -> inflate
    9:9:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:10:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    11:11:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,int):0:0 -> inflate
    11:11:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    12:12:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float):0:0 -> inflate
    12:12:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int):0 -> inflate
    12:12:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,int):0 -> inflate
    12:12:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    13:13:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float):0:0 -> inflate
    13:13:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float):0 -> inflate
    13:13:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int):0 -> inflate
    13:13:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,int):0 -> inflate
    13:13:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    14:14:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float):0:0 -> inflate
    14:14:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int):0 -> inflate
    14:14:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,int):0 -> inflate
    14:14:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    15:15:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.setupAnimatorsForTarget(java.lang.String,android.animation.Animator):0:0 -> inflate
    15:15:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    16:16:java.lang.Object androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getTargetByName(java.lang.String):0:0 -> inflate
    16:16:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.setupAnimatorsForTarget(java.lang.String,android.animation.Animator):0 -> inflate
    16:16:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    17:17:java.lang.Object androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getTargetByName(java.lang.String):0:0 -> inflate
    17:17:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.setupAnimatorsForTarget(java.lang.String,android.animation.Animator):0 -> inflate
    17:17:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    18:18:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> inflate
    18:18:java.lang.Object androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getTargetByName(java.lang.String):0 -> inflate
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:18:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.setupAnimatorsForTarget(java.lang.String,android.animation.Animator):0 -> inflate
    18:18:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    19:19:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.setupAnimatorsForTarget(java.lang.String,android.animation.Animator):0:0 -> inflate
    19:19:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    20:20:void androidx.collection.ArrayMap.<init>():0:0 -> inflate
    20:20:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.setupAnimatorsForTarget(java.lang.String,android.animation.Animator):0 -> inflate
    20:20:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    21:21:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.setupAnimatorsForTarget(java.lang.String,android.animation.Animator):0:0 -> inflate
    21:21:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    22:22:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float):0:0 -> inflate
    22:22:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int):0 -> inflate
    22:22:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,int):0 -> inflate
    22:22:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    23:23:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    24:24:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState.setupAnimatorSet():0:0 -> inflate
    24:24:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    25:25:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState.setupAnimatorSet():0:0 -> inflate
    25:25:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    5:11:boolean androidx.core.graphics.drawable.DrawableCompat.isAutoMirrored(android.graphics.drawable.Drawable):0:0 -> isAutoMirrored
    5:11:boolean isAutoMirrored():0 -> isAutoMirrored
    12:18:boolean isAutoMirrored():0:0 -> isAutoMirrored
    1:1:boolean isRunning():0:0 -> isRunning
    1:1:boolean isStateful():0:0 -> isStateful
    1:1:android.graphics.drawable.Drawable mutate():0:0 -> mutate
    1:1:void onBoundsChange(android.graphics.Rect):0:0 -> onBoundsChange
    1:1:boolean onLevelChange(int):0:0 -> onLevelChange
    1:1:boolean onStateChange(int[]):0:0 -> onStateChange
    1:1:void setAlpha(int):0:0 -> setAlpha
    5:10:void androidx.core.graphics.drawable.DrawableCompat.setAutoMirrored(android.graphics.drawable.Drawable,boolean):0:0 -> setAutoMirrored
    5:10:void setAutoMirrored(boolean):0 -> setAutoMirrored
    11:16:void setAutoMirrored(boolean):0:0 -> setAutoMirrored
    1:1:void setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
    1:1:void setTint(int):0:0 -> setTint
    5:10:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> setTintList
    5:10:void setTintList(android.content.res.ColorStateList):0 -> setTintList
    11:16:void setTintList(android.content.res.ColorStateList):0:0 -> setTintList
    1:1:void setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    1:1:boolean setVisible(boolean,boolean):0:0 -> setVisible
    1:1:void start():0:0 -> start
    1:1:void stop():0:0 -> stop
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> R8$$REMOVED$$CLASS$$125:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> q0.b:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat mVectorDrawable -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq0/p;"}
    android.animation.AnimatorSet mAnimatorSet -> b
    java.util.ArrayList mAnimators -> c
    androidx.collection.ArrayMap mTargetNameMap -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/a;"}
    1:1:int getChangingConfigurations():0:0 -> getChangingConfigurations
    1:1:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0:0 -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> q0.c:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
    1:1:void <init>(android.graphics.drawable.Drawable$ConstantState):0:0 -> <init>
    1:1:boolean canApplyTheme():0:0 -> canApplyTheme
    1:1:int getChangingConfigurations():0:0 -> getChangingConfigurations
    1:1:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.<init>():0:0 -> newDrawable
    1:1:android.graphics.drawable.Drawable newDrawable():0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    3:3:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.<init>():0:0 -> newDrawable
    3:3:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0 -> newDrawable
    4:4:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0:0 -> newDrawable
    5:5:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.<init>():0:0 -> newDrawable
    5:5:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme):0 -> newDrawable
    6:6:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme):0:0 -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> R8$$REMOVED$$CLASS$$126:
# {"id":"sourceFile","fileName":"AnimationUtilsCompat.java"}
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> R8$$REMOVED$$CLASS$$127:
# {"id":"sourceFile","fileName":"AnimatorInflaterCompat.java"}
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> q0.e:
# {"id":"sourceFile","fileName":"AnimatorInflaterCompat.java"}
    androidx.core.graphics.PathParser$PathDataNode[] mNodeArray -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Lw/d;"}
    5:40:androidx.core.graphics.PathParser$PathDataNode[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator.evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> evaluate
    5:40:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object):0 -> evaluate
    41:77:void androidx.core.graphics.PathParser$PathDataNode.interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float):0:0 -> evaluate
    41:77:androidx.core.graphics.PathParser$PathDataNode[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator.evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0 -> evaluate
    41:77:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object):0 -> evaluate
    78:85:androidx.core.graphics.PathParser$PathDataNode[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator.evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> evaluate
    78:85:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object):0 -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> q0.f:
# {"id":"sourceFile","fileName":"ArgbEvaluator.java"}
    androidx.vectordrawable.graphics.drawable.ArgbEvaluator sInstance -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq0/f;"}
    3:8:void androidx.vectordrawable.graphics.drawable.ArgbEvaluator.<init>():0:0 -> <clinit>
    3:8:void <clinit>():0 -> <clinit>
    1:1:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object):0:0 -> evaluate
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> q0.g:
# {"id":"sourceFile","fileName":"VectorDrawableCommon.java"}
    android.graphics.drawable.Drawable mDelegateDrawable -> b
    5:8:void androidx.core.graphics.drawable.DrawableCompat.applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme):0:0 -> applyTheme
    5:8:void applyTheme(android.content.res.Resources$Theme):0 -> applyTheme
    1:1:void clearColorFilter():0:0 -> clearColorFilter
    1:1:android.graphics.drawable.Drawable getCurrent():0:0 -> getCurrent
    1:1:int getMinimumHeight():0:0 -> getMinimumHeight
    1:1:int getMinimumWidth():0:0 -> getMinimumWidth
    1:1:boolean getPadding(android.graphics.Rect):0:0 -> getPadding
    1:1:int[] getState():0:0 -> getState
    1:1:android.graphics.Region getTransparentRegion():0:0 -> getTransparentRegion
    5:8:void androidx.core.graphics.drawable.DrawableCompat.jumpToCurrentState(android.graphics.drawable.Drawable):0:0 -> jumpToCurrentState
    5:8:void jumpToCurrentState():0 -> jumpToCurrentState
    1:1:boolean onLevelChange(int):0:0 -> onLevelChange
    1:1:void setChangingConfigurations(int):0:0 -> setChangingConfigurations
    1:1:void setColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> setColorFilter
    1:1:void setFilterBitmap(boolean):0:0 -> setFilterBitmap
    5:8:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> setHotspot
    5:8:void setHotspot(float,float):0 -> setHotspot
    5:8:void androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setHotspotBounds
    5:8:void setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    1:1:boolean setState(int[]):0:0 -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> q0.p:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq0/n;"}
    android.graphics.PorterDuffColorFilter mTintFilter -> d
    android.graphics.ColorFilter mColorFilter -> e
    boolean mMutated -> f
    boolean mAllowCaching -> g
    float[] mTmpFloats -> h
    android.graphics.Matrix mTmpMatrix -> i
    android.graphics.Rect mTmpBounds -> j
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.<init>():0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/n;)V"}
    1:1:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;"}
    5:9:boolean androidx.core.graphics.drawable.DrawableCompat.canApplyTheme(android.graphics.drawable.Drawable):0:0 -> canApplyTheme
    5:9:boolean canApplyTheme():0 -> canApplyTheme
    136:147:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.needMirroring():0:0 -> draw
    136:147:void draw(android.graphics.Canvas):0 -> draw
    148:165:void draw(android.graphics.Canvas):0:0 -> draw
    166:169:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.createCachedBitmapIfNeeded(int,int):0:0 -> draw
    166:169:void draw(android.graphics.Canvas):0 -> draw
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    170:184:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.canReuseBitmap(int,int):0:0 -> draw
    170:184:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.createCachedBitmapIfNeeded(int,int):0 -> draw
    170:184:void draw(android.graphics.Canvas):0 -> draw
    185:200:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.createCachedBitmapIfNeeded(int,int):0:0 -> draw
    185:200:void draw(android.graphics.Canvas):0 -> draw
    201:202:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.updateCachedBitmap(int,int):0:0 -> draw
    201:202:void draw(android.graphics.Canvas):0 -> draw
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    203:214:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.updateCachedBitmap(int,int):0:0 -> draw
    203:214:void draw(android.graphics.Canvas):0 -> draw
    215:216:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> draw
    215:216:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.updateCachedBitmap(int,int):0 -> draw
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    215:216:void draw(android.graphics.Canvas):0 -> draw
    217:228:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> draw
    217:228:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.updateCachedBitmap(int,int):0 -> draw
    217:228:void draw(android.graphics.Canvas):0 -> draw
    229:232:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.canReuseCache():0:0 -> draw
    229:232:void draw(android.graphics.Canvas):0 -> draw
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    233:263:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.canReuseCache():0:0 -> draw
    233:263:void draw(android.graphics.Canvas):0 -> draw
    264:265:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.updateCachedBitmap(int,int):0:0 -> draw
    264:265:void draw(android.graphics.Canvas):0 -> draw
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    266:277:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.updateCachedBitmap(int,int):0:0 -> draw
    266:277:void draw(android.graphics.Canvas):0 -> draw
    278:279:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> draw
    278:279:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.updateCachedBitmap(int,int):0 -> draw
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    278:279:void draw(android.graphics.Canvas):0 -> draw
    280:290:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> draw
    280:290:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.updateCachedBitmap(int,int):0 -> draw
    280:290:void draw(android.graphics.Canvas):0 -> draw
    291:292:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.updateCacheStates():0:0 -> draw
    291:292:void draw(android.graphics.Canvas):0 -> draw
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    293:314:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.updateCacheStates():0:0 -> draw
    293:314:void draw(android.graphics.Canvas):0 -> draw
    315:316:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.hasTranslucentRoot():0:0 -> draw
    315:316:android.graphics.Paint androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.getPaint(android.graphics.ColorFilter):0 -> draw
    315:316:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect):0 -> draw
    315:316:void draw(android.graphics.Canvas):0 -> draw
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    317:330:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.hasTranslucentRoot():0:0 -> draw
    317:330:android.graphics.Paint androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.getPaint(android.graphics.ColorFilter):0 -> draw
    317:330:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect):0 -> draw
    317:330:void draw(android.graphics.Canvas):0 -> draw
    331:362:android.graphics.Paint androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.getPaint(android.graphics.ColorFilter):0:0 -> draw
    331:362:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect):0 -> draw
    331:362:void draw(android.graphics.Canvas):0 -> draw
    363:367:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect):0:0 -> draw
    363:367:void draw(android.graphics.Canvas):0 -> draw
    368:371:void draw(android.graphics.Canvas):0:0 -> draw
    5:11:int androidx.core.graphics.drawable.DrawableCompat.getAlpha(android.graphics.drawable.Drawable):0:0 -> getAlpha
    5:11:int getAlpha():0 -> getAlpha
    12:18:int getAlpha():0:0 -> getAlpha
    1:1:int getChangingConfigurations():0:0 -> getChangingConfigurations
    5:12:android.graphics.ColorFilter androidx.core.graphics.drawable.DrawableCompat.getColorFilter(android.graphics.drawable.Drawable):0:0 -> getColorFilter
    5:12:android.graphics.ColorFilter getColorFilter():0 -> getColorFilter
    1:1:android.graphics.drawable.Drawable$ConstantState getConstantState():0:0 -> getConstantState
    1:1:int getIntrinsicHeight():0:0 -> getIntrinsicHeight
    1:1:int getIntrinsicWidth():0:0 -> getIntrinsicWidth
    1:1:int getOpacity():0:0 -> getOpacity
    1:1:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0:0 -> inflate
    2:2:void androidx.core.graphics.drawable.DrawableCompat.inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    2:2:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    3:3:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    4:4:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    4:4:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    5:5:int androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> inflate
    5:5:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    5:5:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    6:6:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    6:6:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    7:7:android.graphics.PorterDuff$Mode androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.parseTintModeCompat(int,android.graphics.PorterDuff$Mode):0:0 -> inflate
    7:7:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    7:7:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    8:8:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    8:8:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    9:9:android.content.res.ColorStateList androidx.core.content.res.TypedArrayUtils.getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int):0:0 -> inflate
    9:9:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    9:9:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    10:10:android.content.res.ColorStateList androidx.core.content.res.TypedArrayUtils.getNamedColorStateListFromInt(android.util.TypedValue):0:0 -> inflate
    10:10:android.content.res.ColorStateList androidx.core.content.res.TypedArrayUtils.getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int):0 -> inflate
    10:10:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    10:10:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    11:11:android.content.res.ColorStateList androidx.core.content.res.TypedArrayUtils.getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int):0:0 -> inflate
    11:11:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    11:11:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    12:12:android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> inflate
    12:12:android.content.res.ColorStateList androidx.core.content.res.TypedArrayUtils.getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int):0 -> inflate
    12:12:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    12:12:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    13:13:android.content.res.ColorStateList androidx.core.content.res.TypedArrayUtils.getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int):0:0 -> inflate
    13:13:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    13:13:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    14:14:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    14:14:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    15:15:boolean androidx.core.content.res.TypedArrayUtils.getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean):0:0 -> inflate
    15:15:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    15:15:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    16:16:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    16:16:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    17:17:float androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    17:17:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    17:17:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    18:18:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    18:18:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    19:19:float androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    19:19:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    19:19:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    20:20:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    20:20:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    21:21:float androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    21:21:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    21:21:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    22:22:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    22:22:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    23:23:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    24:24:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    24:24:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    25:25:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.<init>():0:0 -> inflate
    25:25:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    25:25:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    26:26:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    26:26:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    26:26:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    27:27:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    27:27:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    27:27:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    27:27:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    28:28:float androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    28:28:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    28:28:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    28:28:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    28:28:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    29:29:int androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> inflate
    29:29:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    29:29:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    29:29:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    29:29:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    30:30:android.graphics.Paint$Cap androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.getStrokeLineCap(int,android.graphics.Paint$Cap):0:0 -> inflate
    30:30:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    30:30:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    30:30:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    30:30:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    31:31:int androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> inflate
    31:31:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    31:31:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    31:31:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    31:31:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    32:32:android.graphics.Paint$Join androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.getStrokeLineJoin(int,android.graphics.Paint$Join):0:0 -> inflate
    32:32:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    32:32:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    32:32:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    32:32:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    33:33:float androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    33:33:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    33:33:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    33:33:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    33:33:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    34:34:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    34:34:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    34:34:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    34:34:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    35:35:float androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    35:35:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    35:35:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    35:35:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    35:35:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    36:36:int androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> inflate
    36:36:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    36:36:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    36:36:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    36:36:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    37:37:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    37:37:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    37:37:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    38:38:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    38:38:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    39:39:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath.<init>():0:0 -> inflate
    39:39:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    39:39:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    40:40:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    40:40:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    40:40:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    41:41:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    41:41:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    41:41:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    41:41:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    42:42:int androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> inflate
    42:42:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    42:42:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    42:42:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    42:42:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    43:43:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    43:43:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    43:43:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    44:44:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    44:44:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    45:45:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    45:45:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    45:45:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    46:46:float androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    46:46:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    46:46:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    46:46:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    46:46:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    47:47:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    47:47:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    47:47:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    47:47:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    48:48:float androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    48:48:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    48:48:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    48:48:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    48:48:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    49:49:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    49:49:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    49:49:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    49:49:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    50:50:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    50:50:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    50:50:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    51:51:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    51:51:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    52:52:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    53:53:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    53:53:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    54:54:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    54:54:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    1:1:void invalidateSelf():0:0 -> invalidateSelf
    5:11:boolean androidx.core.graphics.drawable.DrawableCompat.isAutoMirrored(android.graphics.drawable.Drawable):0:0 -> isAutoMirrored
    5:11:boolean isAutoMirrored():0 -> isAutoMirrored
    12:14:boolean isAutoMirrored():0:0 -> isAutoMirrored
    20:21:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.isStateful():0:0 -> isStateful
    20:21:boolean isStateful():0 -> isStateful
    22:25:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.isStateful():0:0 -> isStateful
    22:25:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.isStateful():0 -> isStateful
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    22:25:boolean isStateful():0 -> isStateful
    26:47:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.isStateful():0:0 -> isStateful
    26:47:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.isStateful():0 -> isStateful
    26:47:boolean isStateful():0 -> isStateful
    48:62:boolean isStateful():0:0 -> isStateful
    23:101:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.<init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState):0:0 -> mutate
    23:101:android.graphics.drawable.Drawable mutate():0 -> mutate
    1:1:void onBoundsChange(android.graphics.Rect):0:0 -> onBoundsChange
    33:34:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.isStateful():0:0 -> onStateChange
    33:34:boolean onStateChange(int[]):0 -> onStateChange
    35:38:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.isStateful():0:0 -> onStateChange
    35:38:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.isStateful():0 -> onStateChange
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    35:38:boolean onStateChange(int[]):0 -> onStateChange
    39:58:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.isStateful():0:0 -> onStateChange
    39:58:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.isStateful():0 -> onStateChange
    39:58:boolean onStateChange(int[]):0 -> onStateChange
    59:60:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.onStateChanged(int[]):0:0 -> onStateChange
    59:60:boolean onStateChange(int[]):0 -> onStateChange
    61:62:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.onStateChanged(int[]):0:0 -> onStateChange
    61:62:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.onStateChanged(int[]):0 -> onStateChange
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    61:62:boolean onStateChange(int[]):0 -> onStateChange
    63:66:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.onStateChanged(int[]):0:0 -> onStateChange
    63:66:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.onStateChanged(int[]):0 -> onStateChange
    63:66:boolean onStateChange(int[]):0 -> onStateChange
    67:73:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.onStateChanged(int[]):0:0 -> onStateChange
    67:73:boolean onStateChange(int[]):0 -> onStateChange
    74:79:boolean onStateChange(int[]):0:0 -> onStateChange
    1:1:void scheduleSelf(java.lang.Runnable,long):0:0 -> scheduleSelf
    1:1:void setAlpha(int):0:0 -> setAlpha
    5:10:void androidx.core.graphics.drawable.DrawableCompat.setAutoMirrored(android.graphics.drawable.Drawable,boolean):0:0 -> setAutoMirrored
    5:10:void setAutoMirrored(boolean):0 -> setAutoMirrored
    11:13:void setAutoMirrored(boolean):0:0 -> setAutoMirrored
    1:1:void setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
    1:1:void setTint(int):0:0 -> setTint
    5:10:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> setTintList
    5:10:void setTintList(android.content.res.ColorStateList):0 -> setTintList
    11:28:void setTintList(android.content.res.ColorStateList):0:0 -> setTintList
    5:10:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    5:10:void setTintMode(android.graphics.PorterDuff$Mode):0 -> setTintMode
    11:28:void setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    1:1:boolean setVisible(boolean,boolean):0:0 -> setVisible
    1:1:void unscheduleSelf(java.lang.Runnable):0:0 -> unscheduleSelf
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> q0.h:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> q0.i:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    androidx.core.content.res.ComplexColorCompat mStrokeColor -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lv/d;"}
    float mStrokeWidth -> f
    androidx.core.content.res.ComplexColorCompat mFillColor -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lv/d;"}
    float mStrokeAlpha -> h
    float mFillAlpha -> i
    float mTrimPathStart -> j
    float mTrimPathEnd -> k
    float mTrimPathOffset -> l
    android.graphics.Paint$Cap mStrokeLineCap -> m
    android.graphics.Paint$Join mStrokeLineJoin -> n
    float mStrokeMiterlimit -> o
    1:1:boolean isStateful():0:0 -> a
    3:10:boolean androidx.core.content.res.ComplexColorCompat.onStateChanged(int[]):0:0 -> b
    3:10:boolean onStateChanged(int[]):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:31:boolean androidx.core.content.res.ComplexColorCompat.onStateChanged(int[]):0:0 -> b
    11:31:boolean onStateChanged(int[]):0 -> b
    32:37:boolean androidx.core.content.res.ComplexColorCompat.onStateChanged(int[]):0:0 -> b
    32:37:boolean onStateChanged(int[]):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    38:57:boolean androidx.core.content.res.ComplexColorCompat.onStateChanged(int[]):0:0 -> b
    38:57:boolean onStateChanged(int[]):0 -> b
    1:1:float getFillAlpha():0:0 -> getFillAlpha
    3:5:int androidx.core.content.res.ComplexColorCompat.getColor():0:0 -> getFillColor
    3:5:int getFillColor():0 -> getFillColor
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:float getStrokeAlpha():0:0 -> getStrokeAlpha
    3:5:int androidx.core.content.res.ComplexColorCompat.getColor():0:0 -> getStrokeColor
    3:5:int getStrokeColor():0 -> getStrokeColor
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:float getStrokeWidth():0:0 -> getStrokeWidth
    1:1:float getTrimPathEnd():0:0 -> getTrimPathEnd
    1:1:float getTrimPathOffset():0:0 -> getTrimPathOffset
    1:1:float getTrimPathStart():0:0 -> getTrimPathStart
    1:1:void setFillAlpha(float):0:0 -> setFillAlpha
    3:5:void androidx.core.content.res.ComplexColorCompat.setColor(int):0:0 -> setFillColor
    3:5:void setFillColor(int):0 -> setFillColor
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void setStrokeAlpha(float):0:0 -> setStrokeAlpha
    3:5:void androidx.core.content.res.ComplexColorCompat.setColor(int):0:0 -> setStrokeColor
    3:5:void setStrokeColor(int):0 -> setStrokeColor
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void setStrokeWidth(float):0:0 -> setStrokeWidth
    1:1:void setTrimPathEnd(float):0:0 -> setTrimPathEnd
    1:1:void setTrimPathOffset(float):0:0 -> setTrimPathOffset
    1:1:void setTrimPathStart(float):0:0 -> setTrimPathStart
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> q0.j:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    android.graphics.Matrix mStackedMatrix -> a
    java.util.ArrayList mChildren -> b
    float mRotate -> c
    float mPivotX -> d
    float mPivotY -> e
    float mScaleX -> f
    float mScaleY -> g
    float mTranslateX -> h
    float mTranslateY -> i
    android.graphics.Matrix mLocalMatrix -> j
    int mChangingConfigurations -> k
    java.lang.String mGroupName -> l
    1:1:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject.<init>():0:0 -> <init>
    1:1:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject.<init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1):0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    3:3:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject.<init>():0:0 -> <init>
    3:3:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject.<init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1):0 -> <init>
    3:3:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/j;Lp/a;)V"}
    4:4:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap):0:0 -> <init>
    5:5:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath.<init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath):0:0 -> <init>
    5:5:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap):0 -> <init>
    6:6:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap):0:0 -> <init>
    7:7:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath.<init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath):0:0 -> <init>
    7:7:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap):0 -> <init>
    8:8:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap):0:0 -> <init>
    1:1:boolean isStateful():0:0 -> a
    1:1:boolean onStateChanged(int[]):0:0 -> b
    1:1:void updateLocalMatrix():0:0 -> c
    1:1:java.lang.String getGroupName():0:0 -> getGroupName
    1:1:android.graphics.Matrix getLocalMatrix():0:0 -> getLocalMatrix
    1:1:float getPivotX():0:0 -> getPivotX
    1:1:float getPivotY():0:0 -> getPivotY
    1:1:float getRotation():0:0 -> getRotation
    1:1:float getScaleX():0:0 -> getScaleX
    1:1:float getScaleY():0:0 -> getScaleY
    1:1:float getTranslateX():0:0 -> getTranslateX
    1:1:float getTranslateY():0:0 -> getTranslateY
    1:1:void setPivotX(float):0:0 -> setPivotX
    1:1:void setPivotY(float):0:0 -> setPivotY
    1:1:void setRotation(float):0:0 -> setRotation
    1:1:void setScaleX(float):0:0 -> setScaleX
    1:1:void setScaleY(float):0:0 -> setScaleY
    1:1:void setTranslateX(float):0:0 -> setTranslateX
    1:1:void setTranslateY(float):0:0 -> setTranslateY
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> q0.k:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1:1:boolean isStateful():0:0 -> a
    1:1:boolean onStateChanged(int[]):0:0 -> b
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> q0.l:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    androidx.core.graphics.PathParser$PathDataNode[] mNodes -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Lw/d;"}
    java.lang.String mPathName -> b
    int mFillRule -> c
    int mChangingConfigurations -> d
    1:1:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject.<init>():0:0 -> <init>
    1:1:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject.<init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1):0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject.<init>():0:0 -> <init>
    2:2:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject.<init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1):0 -> <init>
    2:2:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/l;)V"}
    3:3:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath):0:0 -> <init>
    1:1:androidx.core.graphics.PathParser$PathDataNode[] getPathData():0:0 -> getPathData
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lw/d;"}
    1:1:java.lang.String getPathName():0:0 -> getPathName
    20:26:void androidx.core.graphics.PathParser.updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> setPathData
    20:26:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]):0 -> setPathData
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lw/d;)V"}
    27:28:char androidx.core.graphics.PathParser$PathDataNode.access$000(androidx.core.graphics.PathParser$PathDataNode):0:0 -> setPathData
    27:28:void androidx.core.graphics.PathParser.updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0 -> setPathData
    27:28:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]):0 -> setPathData
    29:31:char androidx.core.graphics.PathParser$PathDataNode.access$002(androidx.core.graphics.PathParser$PathDataNode,char):0:0 -> setPathData
    29:31:void androidx.core.graphics.PathParser.updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0 -> setPathData
    29:31:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]):0 -> setPathData
    32:33:void androidx.core.graphics.PathParser.updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> setPathData
    32:33:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]):0 -> setPathData
    34:35:float[] androidx.core.graphics.PathParser$PathDataNode.access$100(androidx.core.graphics.PathParser$PathDataNode):0:0 -> setPathData
    34:35:void androidx.core.graphics.PathParser.updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0 -> setPathData
    34:35:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]):0 -> setPathData
    36:40:void androidx.core.graphics.PathParser.updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> setPathData
    36:40:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]):0 -> setPathData
    41:42:float[] androidx.core.graphics.PathParser$PathDataNode.access$100(androidx.core.graphics.PathParser$PathDataNode):0:0 -> setPathData
    41:42:void androidx.core.graphics.PathParser.updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0 -> setPathData
    41:42:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]):0 -> setPathData
    43:53:void androidx.core.graphics.PathParser.updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> setPathData
    43:53:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]):0 -> setPathData
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> q0.m:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    android.graphics.Path mPath -> a
    android.graphics.Path mRenderPath -> b
    android.graphics.Matrix mFinalPathMatrix -> c
    android.graphics.Paint mStrokePaint -> d
    android.graphics.Paint mFillPaint -> e
    android.graphics.PathMeasure mPathMeasure -> f
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq0/j;"}
    float mBaseWidth -> h
    float mBaseHeight -> i
    float mViewportWidth -> j
    float mViewportHeight -> k
    int mRootAlpha -> l
    java.lang.String mRootName -> m
    java.lang.Boolean mIsStateful -> n
    androidx.collection.ArrayMap mVGTargetsMap -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/a;"}
    android.graphics.Matrix IDENTITY_MATRIX -> p
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void androidx.collection.ArrayMap.<init>():0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    3:3:void androidx.collection.ArrayMap.<init>():0:0 -> <init>
    3:3:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/m;)V"}
    4:4:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer):0:0 -> <init>
    1:1:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    1:1:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/j;Landroid/graphics/Matrix;Landroid/graphics/Canvas;II)V"}
    2:3:float androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.getMatrixScale(android.graphics.Matrix):0:0 -> a
    2:3:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    2:3:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    4:4:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    4:4:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    5:5:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath.toPath(android.graphics.Path):0:0 -> a
    5:5:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    5:5:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    6:6:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    6:6:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    7:7:boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath.isClipPath():0:0 -> a
    7:7:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    7:7:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    8:8:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    8:8:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    9:9:boolean androidx.core.content.res.ComplexColorCompat.isGradient():0:0 -> a
    9:9:boolean androidx.core.content.res.ComplexColorCompat.willDraw():0 -> a
    9:9:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    9:9:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    10:10:boolean androidx.core.content.res.ComplexColorCompat.willDraw():0:0 -> a
    10:10:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    10:10:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    11:11:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    11:11:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    12:12:boolean androidx.core.content.res.ComplexColorCompat.isGradient():0:0 -> a
    12:12:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    12:12:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    13:13:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    13:13:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    14:14:int androidx.core.content.res.ComplexColorCompat.getColor():0:0 -> a
    14:14:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    14:14:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    15:15:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    15:15:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    16:16:int androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.applyAlpha(int,float):0:0 -> a
    16:16:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    16:16:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    17:17:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    17:17:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    18:18:boolean androidx.core.content.res.ComplexColorCompat.isGradient():0:0 -> a
    18:18:boolean androidx.core.content.res.ComplexColorCompat.willDraw():0 -> a
    18:18:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    18:18:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    19:19:boolean androidx.core.content.res.ComplexColorCompat.willDraw():0:0 -> a
    19:19:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    19:19:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    20:20:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    20:20:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    21:21:boolean androidx.core.content.res.ComplexColorCompat.isGradient():0:0 -> a
    21:21:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    21:21:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    22:22:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    22:22:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    23:23:int androidx.core.content.res.ComplexColorCompat.getColor():0:0 -> a
    23:23:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    23:23:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    24:24:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    24:24:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    25:25:int androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.applyAlpha(int,float):0:0 -> a
    25:25:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    25:25:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    26:26:void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    26:26:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    27:27:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    1:1:float getAlpha():0:0 -> getAlpha
    1:1:int getRootAlpha():0:0 -> getRootAlpha
    1:1:void setAlpha(float):0:0 -> setAlpha
    1:1:void setRootAlpha(int):0:0 -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> q0.n:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    int mChangingConfigurations -> a
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq0/m;"}
    android.content.res.ColorStateList mTint -> c
    android.graphics.PorterDuff$Mode mTintMode -> d
    boolean mAutoMirrored -> e
    android.graphics.Bitmap mCachedBitmap -> f
    android.content.res.ColorStateList mCachedTint -> g
    android.graphics.PorterDuff$Mode mCachedTintMode -> h
    int mCachedRootAlpha -> i
    boolean mCachedAutoMirrored -> j
    boolean mCacheDirty -> k
    android.graphics.Paint mTempPaint -> l
    1:1:int getChangingConfigurations():0:0 -> getChangingConfigurations
    1:1:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0:0 -> newDrawable
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> q0.o:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
    1:1:void <init>(android.graphics.drawable.Drawable$ConstantState):0:0 -> <init>
    1:1:boolean canApplyTheme():0:0 -> canApplyTheme
    1:1:int getChangingConfigurations():0:0 -> getChangingConfigurations
    1:1:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0:0 -> newDrawable
    3:3:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme):0:0 -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
# {"id":"sourceFile","fileName":"CustomVersionedParcelable.java"}
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
# {"id":"sourceFile","fileName":"ParcelImpl.java"}
    androidx.versionedparcelable.VersionedParcelable mParcel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lr0/c;"}
androidx.versionedparcelable.ParcelImpl$1 -> R8$$REMOVED$$CLASS$$128:
# {"id":"sourceFile","fileName":"ParcelImpl.java"}
androidx.versionedparcelable.VersionedParcel -> r0.a:
# {"id":"sourceFile","fileName":"VersionedParcel.java"}
    androidx.collection.ArrayMap mReadCache -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/a;"}
    androidx.collection.ArrayMap mWriteCache -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/a;"}
    androidx.collection.ArrayMap mParcelizerCache -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/a;"}
    1:1:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/a;Lp/a;Lp/a;)V"}
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr0/b;"}
    8:11:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> b
    8:11:java.lang.Class findParcelClass(java.lang.Class):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:58:java.lang.Class findParcelClass(java.lang.Class):0:0 -> b
    4:7:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> c
    4:7:java.lang.reflect.Method getReadMethod(java.lang.String):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:40:java.lang.reflect.Method getReadMethod(java.lang.String):0:0 -> c
    8:11:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> d
    8:11:java.lang.reflect.Method getWriteMethod(java.lang.Class):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:47:java.lang.reflect.Method getWriteMethod(java.lang.Class):0:0 -> d
    boolean readField(int) -> e
    13:23:android.os.Parcelable androidx.versionedparcelable.VersionedParcelParcel.readParcelable():0:0 -> f
    13:23:android.os.Parcelable readParcelable(android.os.Parcelable,int):0 -> f
    6:13:java.lang.String androidx.versionedparcelable.VersionedParcelParcel.readString():0:0 -> g
    6:13:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr0/c;"}
    14:17:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0:0 -> g
    18:89:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel):0:0 -> g
    18:89:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0 -> g
    void setOutputField(int) -> h
    9:12:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> i
    9:12:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/c;)V"}
    13:29:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> i
    13:29:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
    30:32:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> i
    30:32:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0 -> i
    30:32:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
    33:36:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> i
    37:56:void androidx.versionedparcelable.VersionedParcel.writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> i
    37:56:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
    57:92:void androidx.versionedparcelable.VersionedParcelParcel.closeField():0:0 -> i
    57:92:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
    93:140:void androidx.versionedparcelable.VersionedParcel.writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> i
    93:140:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
    141:160:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> i
    141:160:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
androidx.versionedparcelable.VersionedParcelParcel -> r0.b:
# {"id":"sourceFile","fileName":"VersionedParcelParcel.java"}
    android.util.SparseIntArray mPositionLookup -> d
    android.os.Parcel mParcel -> e
    int mOffset -> f
    int mEnd -> g
    java.lang.String mPrefix -> h
    int mCurrentField -> i
    int mNextRead -> j
    int mFieldId -> k
    1:1:void androidx.collection.ArrayMap.<init>():0:0 -> <init>
    1:1:void <init>(android.os.Parcel):0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    3:3:void androidx.collection.ArrayMap.<init>():0:0 -> <init>
    3:3:void <init>(android.os.Parcel):0 -> <init>
    4:4:void <init>(android.os.Parcel):0:0 -> <init>
    5:5:void androidx.collection.ArrayMap.<init>():0:0 -> <init>
    5:5:void <init>(android.os.Parcel):0 -> <init>
    6:6:void <init>(android.os.Parcel):0:0 -> <init>
    7:7:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;IILjava/lang/String;Lp/a;Lp/a;Lp/a;)V"}
    1:1:androidx.versionedparcelable.VersionedParcel createSubParcel():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr0/b;"}
    1:1:boolean readField(int):0:0 -> e
    9:29:void androidx.versionedparcelable.VersionedParcelParcel.closeField():0:0 -> h
    9:29:void setOutputField(int):0 -> h
    30:37:void setOutputField(int):0:0 -> h
    38:44:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> h
    38:44:void setOutputField(int):0 -> h
androidx.versionedparcelable.VersionedParcelable -> r0.c:
# {"id":"sourceFile","fileName":"VersionedParcelable.java"}
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements -> androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements:
# {"id":"sourceFile","fileName":"ExtensionWindowAreaPresentationRequirements.java"}
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements -> androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements:
# {"id":"sourceFile","fileName":"ExtensionWindowAreaStatusRequirements.java"}
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements -> androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements:
# {"id":"sourceFile","fileName":"WindowAreaComponentApi2Requirements.java"}
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements -> androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements:
# {"id":"sourceFile","fileName":"WindowAreaComponentApi3Requirements.java"}
androidx.window.extensions.core.util.function.Consumer -> androidx.window.extensions.core.util.function.Consumer:
# {"id":"sourceFile","fileName":"Consumer.java"}
androidx.window.extensions.core.util.function.Function -> androidx.window.extensions.core.util.function.Function:
# {"id":"sourceFile","fileName":"Function.java"}
androidx.window.extensions.core.util.function.Predicate -> androidx.window.extensions.core.util.function.Predicate:
# {"id":"sourceFile","fileName":"Predicate.java"}
com.getkeepsafe.relinker.ApkLibraryInstaller -> R8$$REMOVED$$CLASS$$129:
# {"id":"sourceFile","fileName":"ApkLibraryInstaller.java"}
com.getkeepsafe.relinker.ReLinker -> R8$$REMOVED$$CLASS$$130:
# {"id":"sourceFile","fileName":"ReLinker.java"}
com.getkeepsafe.relinker.ReLinkerInstance -> s0.b:
# {"id":"sourceFile","fileName":"ReLinkerInstance.java"}
    java.util.Set loadedLibraries -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/HashSet;"}
    com.getkeepsafe.relinker.ReLinker$LibraryLoader libraryLoader -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/m;"}
    com.getkeepsafe.relinker.ReLinker$LibraryInstaller libraryInstaller -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/m;"}
    15:29:void com.getkeepsafe.relinker.ReLinkerInstance.<init>(com.getkeepsafe.relinker.ReLinker$LibraryLoader,com.getkeepsafe.relinker.ReLinker$LibraryInstaller):0:0 -> <init>
    15:29:void <init>():0 -> <init>
    13:26:boolean com.getkeepsafe.relinker.TextUtils.isEmpty(java.lang.CharSequence):0:0 -> a
    13:26:java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String):0 -> a
    27:28:java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String):0:0 -> a
    29:32:java.io.File com.getkeepsafe.relinker.ReLinkerInstance.getWorkaroundLibDir(android.content.Context):0:0 -> a
    29:32:java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String):0 -> a
    33:38:java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String):0:0 -> a
    39:42:java.io.File com.getkeepsafe.relinker.ReLinkerInstance.getWorkaroundLibDir(android.content.Context):0:0 -> a
    39:42:java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String):0 -> a
    43:66:java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String):0:0 -> a
    5:18:boolean com.getkeepsafe.relinker.TextUtils.isEmpty(java.lang.CharSequence):0:0 -> b
    5:18:void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)V"}
    19:42:void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener):0:0 -> b
    33:35:void com.getkeepsafe.relinker.SystemLibraryLoader.loadLibrary(java.lang.String):0:0 -> c
    33:35:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    36:89:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0:0 -> c
    90:93:java.io.File com.getkeepsafe.relinker.ReLinkerInstance.getWorkaroundLibDir(android.content.Context):0:0 -> c
    90:93:void com.getkeepsafe.relinker.ReLinkerInstance.cleanupOldLibFiles(android.content.Context,java.lang.String,java.lang.String):0 -> c
    90:93:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    94:142:void com.getkeepsafe.relinker.ReLinkerInstance.cleanupOldLibFiles(android.content.Context,java.lang.String,java.lang.String):0:0 -> c
    94:142:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    143:152:java.lang.String[] com.getkeepsafe.relinker.SystemLibraryLoader.supportedAbis():0:0 -> c
    143:152:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    153:159:boolean com.getkeepsafe.relinker.TextUtils.isEmpty(java.lang.CharSequence):0:0 -> c
    153:159:java.lang.String[] com.getkeepsafe.relinker.SystemLibraryLoader.supportedAbis():0 -> c
    153:159:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    160:172:java.lang.String[] com.getkeepsafe.relinker.SystemLibraryLoader.supportedAbis():0:0 -> c
    160:172:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    173:181:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0:0 -> c
    182:247:void com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance):0:0 -> c
    182:247:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    248:257:long com.getkeepsafe.relinker.ApkLibraryInstaller.copy(java.io.InputStream,java.io.OutputStream):0:0 -> c
    248:257:void com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance):0 -> c
    248:257:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    258:310:void com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance):0:0 -> c
    258:310:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    311:335:long com.getkeepsafe.relinker.ApkLibraryInstaller.copy(java.io.InputStream,java.io.OutputStream):0:0 -> c
    311:335:void com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance):0 -> c
    311:335:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    336:366:void com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance):0:0 -> c
    336:366:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    367:373:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0:0 -> c
    374:376:void com.getkeepsafe.relinker.SystemLibraryLoader.loadPath(java.lang.String):0:0 -> c
    374:376:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    377:393:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0:0 -> c
    394:432:void com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance):0:0 -> c
    394:432:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    1:1:void log(java.lang.String,java.lang.Object[]):0:0 -> d
com.getkeepsafe.relinker.ReLinkerInstance$2 -> s0.a:
# {"id":"sourceFile","fileName":"ReLinkerInstance.java"}
    java.lang.String val$mappedLibraryName -> a
    1:1:void <init>(com.getkeepsafe.relinker.ReLinkerInstance,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)V"}
    1:1:boolean accept(java.io.File,java.lang.String):0:0 -> accept
com.getkeepsafe.relinker.SystemLibraryLoader -> R8$$REMOVED$$CLASS$$131:
# {"id":"sourceFile","fileName":"SystemLibraryLoader.java"}
com.getkeepsafe.relinker.TextUtils -> R8$$REMOVED$$CLASS$$132:
# {"id":"sourceFile","fileName":"TextUtils.java"}
io.flutter.Log -> R8$$REMOVED$$CLASS$$133:
# {"id":"sourceFile","fileName":"Log.java"}
io.flutter.embedding.engine.FlutterEngine -> t0.b:
# {"id":"sourceFile","fileName":"FlutterEngine.java"}
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener -> t0.a:
# {"id":"sourceFile","fileName":"FlutterEngine.java"}
io.flutter.embedding.engine.FlutterJNI -> io.flutter.embedding.engine.FlutterJNI:
# {"id":"sourceFile","fileName":"FlutterJNI.java"}
    io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate -> accessibilityDelegate
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lt0/d;"}
    io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate -> asyncWaitForVsyncDelegate
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lt0/e;"}
    io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager -> deferredComponentManager
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lv0/a;"}
    io.flutter.plugin.localization.LocalizationPlugin localizationPlugin -> localizationPlugin
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lz0/a;"}
    io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler -> platformMessageHandler
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu0/a;"}
    io.flutter.plugin.platform.PlatformViewsController platformViewsController -> platformViewsController
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/c;"}
    1:1:void $r8$lambda$2fUF03zsar2dpLbGJv6IUmJU-0A(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener):0:0 -> addEngineLifecycleListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/a;)V"}
    27:30:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> decodeImage
    27:30:android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long):0 -> decodeImage
    44:47:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> dispatchEmptyPlatformMessage
    44:47:void dispatchEmptyPlatformMessage(java.lang.String,int):0 -> dispatchEmptyPlatformMessage
    49:52:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> dispatchPlatformMessage
    49:52:void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int):0 -> dispatchPlatformMessage
    1:1:void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int):0:0 -> dispatchSemanticsAction
    2:2:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action):0:0 -> dispatchSemanticsAction
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/a;)V"}
    3:3:java.nio.ByteBuffer io.flutter.plugin.common.StandardMessageCodec.encodeMessage(java.lang.Object):0:0 -> dispatchSemanticsAction
    3:3:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0 -> dispatchSemanticsAction
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/a;Ljava/lang/Object;)V"}
    4:4:void io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream.<init>():0:0 -> dispatchSemanticsAction
    4:4:java.nio.ByteBuffer io.flutter.plugin.common.StandardMessageCodec.encodeMessage(java.lang.Object):0 -> dispatchSemanticsAction
    4:4:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0 -> dispatchSemanticsAction
    5:5:java.nio.ByteBuffer io.flutter.plugin.common.StandardMessageCodec.encodeMessage(java.lang.Object):0:0 -> dispatchSemanticsAction
    5:5:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0 -> dispatchSemanticsAction
    6:6:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0:0 -> dispatchSemanticsAction
    1:4:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue.getConfiguration(int):0:0 -> getScaledFontSize
    1:4:android.util.DisplayMetrics io.flutter.embedding.engine.systemchannels.SettingsChannel.getPastDisplayMetrics(int):0 -> getScaledFontSize
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:4:float getScaledFontSize(float,int):0 -> getScaledFontSize
    5:46:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue.getConfiguration(int):0:0 -> getScaledFontSize
    5:46:android.util.DisplayMetrics io.flutter.embedding.engine.systemchannels.SettingsChannel.getPastDisplayMetrics(int):0 -> getScaledFontSize
    5:46:float getScaledFontSize(float,int):0 -> getScaledFontSize
    47:49:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> getScaledFontSize
    47:49:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue.getConfiguration(int):0 -> getScaledFontSize
    47:49:android.util.DisplayMetrics io.flutter.embedding.engine.systemchannels.SettingsChannel.getPastDisplayMetrics(int):0 -> getScaledFontSize
    47:49:float getScaledFontSize(float,int):0 -> getScaledFontSize
    50:74:float getScaledFontSize(float,int):0:0 -> getScaledFontSize
    75:80:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> getScaledFontSize
    75:80:float getScaledFontSize(float,int):0 -> getScaledFontSize
    1:1:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> init
    1:1:void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long):0 -> init
    2:2:void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long):0:0 -> init
    44:48:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> invokePlatformMessageEmptyResponseCallback
    44:48:void invokePlatformMessageEmptyResponseCallback(int):0 -> invokePlatformMessageEmptyResponseCallback
    49:66:void invokePlatformMessageEmptyResponseCallback(int):0:0 -> invokePlatformMessageEmptyResponseCallback
    54:58:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> invokePlatformMessageResponseCallback
    54:58:void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int):0 -> invokePlatformMessageResponseCallback
    59:84:void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int):0:0 -> invokePlatformMessageResponseCallback
    9:11:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> loadLibrary
    9:11:void loadLibrary(android.content.Context):0 -> loadLibrary
    12:23:void com.getkeepsafe.relinker.ReLinker.loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener):0:0 -> loadLibrary
    12:23:void com.getkeepsafe.relinker.ReLinker.loadLibrary(android.content.Context,java.lang.String):0 -> loadLibrary
    12:23:void loadLibrary(android.content.Context):0 -> loadLibrary
    9:11:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> prefetchDefaultFontManager
    9:11:void prefetchDefaultFontManager():0 -> prefetchDefaultFontManager
    12:18:void prefetchDefaultFontManager():0:0 -> prefetchDefaultFontManager
    1:1:void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener):0:0 -> removeEngineLifecycleListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/a;)V"}
    5:8:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> requestDartDeferredLibrary
    5:8:void requestDartDeferredLibrary(int):0 -> requestDartDeferredLibrary
    1:1:void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate):0:0 -> setAccessibilityDelegate
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/d;)V"}
    1:1:void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate):0:0 -> setAsyncWaitForVsyncDelegate
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/e;)V"}
    1:1:void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager):0:0 -> setDeferredComponentManager
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a;)V"}
    1:1:void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin):0:0 -> setLocalizationPlugin
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a;)V"}
    1:1:void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler):0:0 -> setPlatformMessageHandler
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/a;)V"}
    42:49:void io.flutter.util.Preconditions.checkState(boolean,java.lang.Object):0:0 -> spawn
    42:49:io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List):0 -> spawn
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticLambda7 -> t0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    long io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.f$0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.<init>(long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source):0:0 -> onHeaderDecoded
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate -> t0.d:
# {"id":"sourceFile","fileName":"FlutterJNI.java"}
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate -> t0.e:
# {"id":"sourceFile","fileName":"FlutterJNI.java"}
io.flutter.embedding.engine.FlutterOverlaySurface -> io.flutter.embedding.engine.FlutterOverlaySurface:
# {"id":"sourceFile","fileName":"FlutterOverlaySurface.java"}
io.flutter.embedding.engine.dart.PlatformMessageHandler -> u0.a:
# {"id":"sourceFile","fileName":"PlatformMessageHandler.java"}
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager -> v0.a:
# {"id":"sourceFile","fileName":"DeferredComponentManager.java"}
    void setJNI(io.flutter.embedding.engine.FlutterJNI) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack -> io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack:
# {"id":"sourceFile","fileName":"FlutterMutatorsStack.java"}
    8:12:void io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator.<init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[]):0:0 -> pushClipRRect
    8:12:void pushClipRRect(int,int,int,int,float[]):0 -> pushClipRRect
    13:41:void pushClipRRect(int,int,int,int,float[]):0:0 -> pushClipRRect
    8:12:void io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator.<init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect):0:0 -> pushClipRect
    8:12:void pushClipRect(int,int,int,int):0 -> pushClipRect
    13:41:void pushClipRect(int,int,int,int):0:0 -> pushClipRect
    11:15:void io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator.<init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix):0:0 -> pushTransform
    11:15:void pushTransform(float[]):0 -> pushTransform
    16:24:void pushTransform(float[]):0:0 -> pushTransform
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference -> io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference:
# {"id":"sourceFile","fileName":"HiddenLifecycleReference.java"}
    androidx.lifecycle.Lifecycle lifecycle -> lifecycle
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/f;"}
io.flutter.embedding.engine.renderer.FlutterRenderer -> io.flutter.embedding.engine.renderer.d:
# {"id":"sourceFile","fileName":"FlutterRenderer.java"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer -> io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer:
# {"id":"sourceFile","fileName":"FlutterRenderer.java"}
    io.flutter.view.TextureRegistry$SurfaceProducer$Callback callback -> callback
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/view/f;"}
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage lastDequeuedImage -> lastDequeuedImage
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/embedding/engine/renderer/a;"}
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader lastReaderDequeuedFrom -> lastReaderDequeuedFrom
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/embedding/engine/renderer/c;"}
    io.flutter.embedding.engine.renderer.FlutterRenderer this$0 -> this$0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/embedding/engine/renderer/d;"}
    37:38:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.close():0:0 -> cleanup
    37:38:void cleanup():0 -> cleanup
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    39:51:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.close():0:0 -> cleanup
    39:51:void cleanup():0 -> cleanup
    52:69:void cleanup():0:0 -> cleanup
    70:85:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.close():0:0 -> cleanup
    70:85:void cleanup():0 -> cleanup
    86:92:void cleanup():0:0 -> cleanup
    24:25:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.dequeueImage():0:0 -> dequeueImage
    24:25:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0 -> dequeueImage
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/renderer/a;"}
    26:47:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.dequeueImage():0:0 -> dequeueImage
    26:47:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0 -> dequeueImage
    48:67:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0:0 -> dequeueImage
    13:14:android.os.Handler io.flutter.embedding.engine.renderer.FlutterRenderer.access$600(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> finalize
    13:14:void finalize():0 -> finalize
    15:18:void finalize():0:0 -> finalize
    23:24:java.util.ArrayDeque io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.access$1000(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader):0:0 -> numImages
    23:24:int numImages():0 -> numImages
    25:36:int numImages():0:0 -> numImages
    8:14:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.queueImage(android.media.Image):0:0 -> onImage
    8:14:void onImage(android.media.ImageReader,android.media.Image):0 -> onImage
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:48:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.queueImage(android.media.Image):0:0 -> onImage
    15:48:void onImage(android.media.ImageReader,android.media.Image):0 -> onImage
    49:52:void onImage(android.media.ImageReader,android.media.Image):0:0 -> onImage
    53:54:void io.flutter.embedding.engine.renderer.FlutterRenderer.access$700(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> onImage
    53:54:void onImage(android.media.ImageReader,android.media.Image):0 -> onImage
    55:56:void onImage(android.media.ImageReader,android.media.Image):0:0 -> onImage
    20:37:boolean io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.canPrune():0:0 -> pruneImageReaderQueue
    20:37:void pruneImageReaderQueue():0 -> pruneImageReaderQueue
    38:47:void pruneImageReaderQueue():0:0 -> pruneImageReaderQueue
    48:57:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.close():0:0 -> pruneImageReaderQueue
    48:57:void pruneImageReaderQueue():0 -> pruneImageReaderQueue
    10:10:void io.flutter.embedding.engine.renderer.FlutterRenderer.access$400(io.flutter.embedding.engine.renderer.FlutterRenderer,long):0:0 -> release
    10:10:void release():0 -> release
    2:2:void io.flutter.embedding.engine.renderer.FlutterRenderer.access$700(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> scheduleFrame
    2:2:void scheduleFrame():0 -> scheduleFrame
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage -> io.flutter.embedding.engine.renderer.a:
# {"id":"sourceFile","fileName":"FlutterRenderer.java"}
    android.media.Image image -> a
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1 -> b
    1:1:void <init>(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer,android.media.Image,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer;Landroid/media/Image;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader -> io.flutter.embedding.engine.renderer.c:
# {"id":"sourceFile","fileName":"FlutterRenderer.java"}
    android.media.ImageReader reader -> a
    java.util.ArrayDeque imageQueue -> b
    boolean closed -> c
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1 -> d
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$ExternalSyntheticLambda0 -> io.flutter.embedding.engine.renderer.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.f$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/embedding/engine/renderer/c;"}
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.<init>(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/c;)V"}
    6:27:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.lambda$new$0(android.media.ImageReader):0:0 -> onImageAvailable
    6:27:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.onImageAvailable(android.media.ImageReader):0 -> onImageAvailable
      # {"id":"com.android.tools.r8.synthesized"}
    28:34:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> onImageAvailable
    28:34:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.lambda$new$0(android.media.ImageReader):0 -> onImageAvailable
    28:34:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.onImageAvailable(android.media.ImageReader):0 -> onImageAvailable
    35:55:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.lambda$new$0(android.media.ImageReader):0:0 -> onImageAvailable
    35:55:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.onImageAvailable(android.media.ImageReader):0 -> onImageAvailable
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry -> io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry:
# {"id":"sourceFile","fileName":"FlutterRenderer.java"}
    io.flutter.embedding.engine.renderer.FlutterRenderer this$0 -> this$0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/embedding/engine/renderer/d;"}
    25:25:android.os.Handler io.flutter.embedding.engine.renderer.FlutterRenderer.access$600(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> finalize
    25:25:void finalize():0 -> finalize
    26:29:void finalize():0:0 -> finalize
    18:20:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> pushImage
    18:20:void pushImage(android.media.Image):0 -> pushImage
    21:27:void pushImage(android.media.Image):0:0 -> pushImage
    28:29:void io.flutter.embedding.engine.renderer.FlutterRenderer.access$700(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> pushImage
    28:29:void pushImage(android.media.Image):0 -> pushImage
    30:31:void pushImage(android.media.Image):0:0 -> pushImage
    19:19:void io.flutter.embedding.engine.renderer.FlutterRenderer.access$400(io.flutter.embedding.engine.renderer.FlutterRenderer,long):0:0 -> release
    19:19:void release():0 -> release
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener -> io.flutter.embedding.engine.renderer.e:
# {"id":"sourceFile","fileName":"FlutterUiDisplayListener.java"}
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper -> io.flutter.embedding.engine.renderer.SurfaceTextureWrapper:
# {"id":"sourceFile","fileName":"SurfaceTextureWrapper.java"}
    1:1:void <init>(android.graphics.SurfaceTexture):0:0 -> <init>
    2:2:void <init>(android.graphics.SurfaceTexture,java.lang.Runnable):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.SettingsChannel -> x0.a:
# {"id":"sourceFile","fileName":"SettingsChannel.java"}
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue CONFIGURATION_QUEUE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/y;"}
    3:15:void io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue.<init>():0:0 -> <clinit>
    3:15:void <clinit>():0 -> <clinit>
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue -> R8$$REMOVED$$CLASS$$134:
# {"id":"sourceFile","fileName":"SettingsChannel.java"}
io.flutter.plugin.common.StandardMessageCodec -> y0.b:
# {"id":"sourceFile","fileName":"StandardMessageCodec.java"}
    boolean LITTLE_ENDIAN -> a
    java.nio.charset.Charset UTF8 -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void writeAlignment(java.io.ByteArrayOutputStream,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/a;I)V"}
    1:1:void writeInt(java.io.ByteArrayOutputStream,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/a;I)V"}
    1:1:void writeLong(java.io.ByteArrayOutputStream,long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/a;J)V"}
    21:37:void io.flutter.plugin.common.StandardMessageCodec.writeChar(java.io.ByteArrayOutputStream,int):0:0 -> d
    21:37:void writeSize(java.io.ByteArrayOutputStream,int):0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/a;I)V"}
    38:44:void writeSize(java.io.ByteArrayOutputStream,int):0:0 -> d
    102:111:void io.flutter.plugin.common.StandardMessageCodec.writeBytes(java.io.ByteArrayOutputStream,byte[]):0:0 -> e
    102:111:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/a;Ljava/lang/Object;)V"}
    112:148:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    149:158:void io.flutter.plugin.common.StandardMessageCodec.writeDouble(java.io.ByteArrayOutputStream,double):0:0 -> e
    149:158:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    159:188:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    189:198:void io.flutter.plugin.common.StandardMessageCodec.writeBytes(java.io.ByteArrayOutputStream,byte[]):0:0 -> e
    189:198:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    199:207:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    208:217:void io.flutter.plugin.common.StandardMessageCodec.writeBytes(java.io.ByteArrayOutputStream,byte[]):0:0 -> e
    208:217:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    218:298:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    299:308:void io.flutter.plugin.common.StandardMessageCodec.writeDouble(java.io.ByteArrayOutputStream,double):0:0 -> e
    299:308:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    309:420:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    421:430:void io.flutter.plugin.common.StandardMessageCodec.writeFloat(java.io.ByteArrayOutputStream,float):0:0 -> e
    421:430:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    431:471:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream -> y0.a:
# {"id":"sourceFile","fileName":"StandardMessageCodec.java"}
    1:1:byte[] buffer():0:0 -> a
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback:
# {"id":"sourceFile","fileName":"ImeSyncDeferringInsetsCallback.java"}
    io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener -> insetsListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/editing/a;"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback:
# {"id":"sourceFile","fileName":"ImeSyncDeferringInsetsCallback.java"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener -> io.flutter.plugin.editing.a:
# {"id":"sourceFile","fileName":"ImeSyncDeferringInsetsCallback.java"}
    io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0 -> a
    1:6:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback):0:0 -> <init>
    1:6:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/ImeSyncDeferringInsetsCallback;)V"}
io.flutter.plugin.localization.LocalizationPlugin -> z0.a:
# {"id":"sourceFile","fileName":"LocalizationPlugin.java"}
io.flutter.plugin.platform.AccessibilityEventsDelegate -> io.flutter.plugin.platform.a:
# {"id":"sourceFile","fileName":"AccessibilityEventsDelegate.java"}
io.flutter.plugin.platform.PlatformView -> io.flutter.plugin.platform.b:
# {"id":"sourceFile","fileName":"PlatformView.java"}
io.flutter.plugin.platform.PlatformViewsController -> io.flutter.plugin.platform.c:
# {"id":"sourceFile","fileName":"PlatformViewsController.java"}
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup -> io.flutter.plugin.platform.d:
# {"id":"sourceFile","fileName":"SingleViewFakeWindowViewGroup.java"}
    android.graphics.Rect viewBounds -> b
    android.graphics.Rect childRect -> c
    12:29:int atMost(int):0:0 -> onMeasure
    12:29:void onMeasure(int,int):0 -> onMeasure
    30:39:void onMeasure(int,int):0:0 -> onMeasure
io.flutter.plugin.platform.SingleViewPresentation -> io.flutter.plugin.platform.SingleViewPresentation:
# {"id":"sourceFile","fileName":"SingleViewPresentation.java"}
    io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate -> accessibilityEventsDelegate
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/a;"}
    io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView -> rootView
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/e;"}
    io.flutter.plugin.platform.SingleViewPresentation$PresentationState state -> state
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/h;"}
    1:1:void io.flutter.plugin.platform.SingleViewPresentation$ImmContext.<init>(android.content.Context):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/view/Display;Lio/flutter/plugin/platform/a;Lio/flutter/plugin/platform/h;Landroid/view/View$OnFocusChangeListener;Z)V"}
    2:2:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean):0:0 -> <init>
    3:3:void io.flutter.plugin.platform.SingleViewPresentation$ImmContext.<init>(android.content.Context):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/view/Display;Lio/flutter/plugin/platform/b;Lio/flutter/plugin/platform/a;ILandroid/view/View$OnFocusChangeListener;)V"}
    4:4:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener):0:0 -> <init>
    5:5:void io.flutter.plugin.platform.SingleViewPresentation$PresentationState.<init>():0:0 -> <init>
    5:5:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener):0 -> <init>
    6:6:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener):0:0 -> <init>
    3:7:io.flutter.plugin.platform.PlatformView io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> getView
    3:7:io.flutter.plugin.platform.PlatformView getView():0 -> getView
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/plugin/platform/b;"}
    19:22:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    19:22:void onCreate(android.os.Bundle):0 -> onCreate
    23:31:void onCreate(android.os.Bundle):0:0 -> onCreate
    32:35:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup):0:0 -> onCreate
    32:35:void onCreate(android.os.Bundle):0 -> onCreate
    36:39:io.flutter.plugin.platform.WindowManagerHandler io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    36:39:void onCreate(android.os.Bundle):0 -> onCreate
    40:55:void onCreate(android.os.Bundle):0:0 -> onCreate
    56:57:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    56:57:void onCreate(android.os.Bundle):0 -> onCreate
    58:60:void onCreate(android.os.Bundle):0:0 -> onCreate
    61:62:io.flutter.plugin.platform.WindowManagerHandler io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.WindowManagerHandler):0:0 -> onCreate
    61:62:void onCreate(android.os.Bundle):0 -> onCreate
    63:81:void onCreate(android.os.Bundle):0:0 -> onCreate
    82:85:io.flutter.plugin.platform.WindowManagerHandler io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    82:85:void onCreate(android.os.Bundle):0 -> onCreate
    86:90:void onCreate(android.os.Bundle):0:0 -> onCreate
    91:94:io.flutter.plugin.platform.PlatformView io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    91:94:void onCreate(android.os.Bundle):0 -> onCreate
    95:95:void onCreate(android.os.Bundle):0:0 -> onCreate
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout -> io.flutter.plugin.platform.e:
# {"id":"sourceFile","fileName":"SingleViewPresentation.java"}
io.flutter.plugin.platform.SingleViewPresentation$ImmContext -> io.flutter.plugin.platform.f:
# {"id":"sourceFile","fileName":"SingleViewPresentation.java"}
    android.view.inputmethod.InputMethodManager inputMethodManager -> a
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext -> io.flutter.plugin.platform.g:
# {"id":"sourceFile","fileName":"SingleViewPresentation.java"}
    io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/j;"}
    android.view.WindowManager windowManager -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/j;"}
    android.content.Context flutterAppWindowContext -> c
    9:58:boolean isCalledFromAlertDialog():0:0 -> getSystemService
    9:58:java.lang.Object getSystemService(java.lang.String):0 -> getSystemService
    59:82:java.lang.Object getSystemService(java.lang.String):0:0 -> getSystemService
io.flutter.plugin.platform.SingleViewPresentation$PresentationState -> io.flutter.plugin.platform.h:
# {"id":"sourceFile","fileName":"SingleViewPresentation.java"}
    io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/j;"}
    io.flutter.plugin.platform.SingleViewFakeWindowViewGroup fakeWindowViewGroup -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/d;"}
io.flutter.plugin.platform.SingleViewWindowManager -> R8$$REMOVED$$CLASS$$135:
# {"id":"sourceFile","fileName":"SingleViewWindowManager.java"}
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.platform.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$9f3564965ce31d288bde81f28853716eb3fae64fc3aab63ca1d7fbaecc73ea7a$0.m(android.view.WindowManager,java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$573fc38649fc257e28a079cf4377be00db9d882e093f28e1ee82d89fe072ef33$0.m(android.view.WindowManager,java.util.function.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$953a50dd753cf993668a5b905947d63b7720120083cc0cc67dc3ddce466ca3e4$0.m(android.view.WindowManager):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$9b7d142d148c8d8a447edf4d1839198704c3a116777d705c82e3b6107b939476$0.m(android.view.WindowManager,java.util.function.Consumer):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.WindowManagerHandler -> io.flutter.plugin.platform.j:
# {"id":"sourceFile","fileName":"WindowManagerHandler.java"}
    android.view.WindowManager io.flutter.plugin.platform.SingleViewWindowManager.delegate -> b
    io.flutter.plugin.platform.SingleViewFakeWindowViewGroup io.flutter.plugin.platform.SingleViewWindowManager.fakeWindowRootView -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/d;"}
    1:8:void io.flutter.plugin.platform.SingleViewWindowManager.<init>(android.view.WindowManager,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup):0:0 -> <init>
    1:8:void <init>(android.view.WindowManager,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowManager;Lio/flutter/plugin/platform/d;)V"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager.addCrossWindowBlurEnabledListener(java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> a
    1:1:void addCrossWindowBlurEnabledListener(java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> addCrossWindowBlurEnabledListener
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void addCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> addCrossWindowBlurEnabledListener
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void addView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> addView
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager.addCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> b
    9:12:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> c
    9:12:void io.flutter.plugin.platform.SingleViewWindowManager.addView(android.view.View,android.view.ViewGroup$LayoutParams):0 -> c
    13:16:void io.flutter.plugin.platform.SingleViewWindowManager.addView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> c
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager.removeCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> d
    9:12:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> e
    9:12:void io.flutter.plugin.platform.SingleViewWindowManager.removeView(android.view.View):0 -> e
    13:16:void io.flutter.plugin.platform.SingleViewWindowManager.removeView(android.view.View):0:0 -> e
    9:12:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> f
    9:12:void io.flutter.plugin.platform.SingleViewWindowManager.removeViewImmediate(android.view.View):0 -> f
    13:21:void io.flutter.plugin.platform.SingleViewWindowManager.removeViewImmediate(android.view.View):0:0 -> f
    9:12:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> g
    9:12:void io.flutter.plugin.platform.SingleViewWindowManager.updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams):0 -> g
    13:16:void io.flutter.plugin.platform.SingleViewWindowManager.updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> g
    3:7:android.view.WindowMetrics io.flutter.plugin.platform.SingleViewWindowManager.getCurrentWindowMetrics():0:0 -> getCurrentWindowMetrics
    3:7:android.view.WindowMetrics getCurrentWindowMetrics():0 -> getCurrentWindowMetrics
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:android.view.Display io.flutter.plugin.platform.SingleViewWindowManager.getDefaultDisplay():0:0 -> getDefaultDisplay
    3:7:android.view.Display getDefaultDisplay():0 -> getDefaultDisplay
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:android.view.WindowMetrics io.flutter.plugin.platform.SingleViewWindowManager.getMaximumWindowMetrics():0:0 -> getMaximumWindowMetrics
    3:7:android.view.WindowMetrics getMaximumWindowMetrics():0 -> getMaximumWindowMetrics
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:boolean io.flutter.plugin.platform.SingleViewWindowManager.isCrossWindowBlurEnabled():0:0 -> isCrossWindowBlurEnabled
    3:7:boolean isCrossWindowBlurEnabled():0 -> isCrossWindowBlurEnabled
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void removeCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> removeCrossWindowBlurEnabledListener
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void removeView(android.view.View):0:0 -> removeView
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void removeViewImmediate(android.view.View):0:0 -> removeViewImmediate
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> updateViewLayout
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugins.GeneratedPluginRegistrant -> io.flutter.plugins.GeneratedPluginRegistrant:
# {"id":"sourceFile","fileName":"GeneratedPluginRegistrant.java"}
    8:10:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> registerWith
    8:10:void registerWith(io.flutter.embedding.engine.FlutterEngine):0 -> registerWith
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/b;)V"}
    11:14:void registerWith(io.flutter.embedding.engine.FlutterEngine):0:0 -> registerWith
    15:17:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> registerWith
    15:17:void registerWith(io.flutter.embedding.engine.FlutterEngine):0 -> registerWith
    18:21:void registerWith(io.flutter.embedding.engine.FlutterEngine):0:0 -> registerWith
    22:24:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> registerWith
    22:24:void registerWith(io.flutter.embedding.engine.FlutterEngine):0 -> registerWith
    25:28:void registerWith(io.flutter.embedding.engine.FlutterEngine):0:0 -> registerWith
    29:31:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> registerWith
    29:31:void registerWith(io.flutter.embedding.engine.FlutterEngine):0 -> registerWith
    32:35:void registerWith(io.flutter.embedding.engine.FlutterEngine):0:0 -> registerWith
    36:38:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> registerWith
    36:38:void registerWith(io.flutter.embedding.engine.FlutterEngine):0 -> registerWith
    39:42:void registerWith(io.flutter.embedding.engine.FlutterEngine):0:0 -> registerWith
    43:45:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> registerWith
    43:45:void registerWith(io.flutter.embedding.engine.FlutterEngine):0 -> registerWith
    46:49:void registerWith(io.flutter.embedding.engine.FlutterEngine):0:0 -> registerWith
    50:53:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> registerWith
    50:53:void registerWith(io.flutter.embedding.engine.FlutterEngine):0 -> registerWith
io.flutter.plugins.urllauncher.WebViewActivity -> io.flutter.plugins.urllauncher.WebViewActivity:
# {"id":"sourceFile","fileName":"WebViewActivity.java"}
    android.content.BroadcastReceiver broadcastReceiver -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"La1/a;"}
    android.webkit.WebViewClient webViewClient -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"La1/b;"}
    android.webkit.WebView webview -> d
    android.content.IntentFilter closeIntentFilter -> e
    45:85:java.util.Map extractHeaders(android.os.Bundle):0:0 -> onCreate
    45:85:void onCreate(android.os.Bundle):0 -> onCreate
    86:147:void onCreate(android.os.Bundle):0:0 -> onCreate
    148:164:android.content.Intent androidx.core.content.ContextCompat.registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0:0 -> onCreate
    148:164:android.content.Intent androidx.core.content.ContextCompat.registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int):0 -> onCreate
    148:164:void onCreate(android.os.Bundle):0 -> onCreate
io.flutter.plugins.urllauncher.WebViewActivity$1 -> a1.a:
# {"id":"sourceFile","fileName":"WebViewActivity.java"}
    io.flutter.plugins.urllauncher.WebViewActivity this$0 -> a
    1:1:void <init>(io.flutter.plugins.urllauncher.WebViewActivity):0:0 -> <init>
    1:1:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
io.flutter.plugins.urllauncher.WebViewActivity$2 -> a1.b:
# {"id":"sourceFile","fileName":"WebViewActivity.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.urllauncher.WebViewActivity this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    5:8:void io.flutter.plugins.urllauncher.WebViewActivity$2.<init>(io.flutter.plugins.urllauncher.WebViewActivity):0:0 -> <init>
    5:8:void $r8$init$synthetic(java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)V"}
    1:1:boolean io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1.shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest):0:0 -> shouldOverrideUrlLoading
    1:1:boolean shouldOverrideUrlLoading$bridge(android.webkit.WebView,android.webkit.WebResourceRequest):0 -> shouldOverrideUrlLoading
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:boolean io.flutter.plugins.urllauncher.WebViewActivity$2.shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest):0:0 -> shouldOverrideUrlLoading
    2:2:boolean shouldOverrideUrlLoading$bridge(android.webkit.WebView,android.webkit.WebResourceRequest):0 -> shouldOverrideUrlLoading
    3:3:boolean io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1.shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String):0:0 -> shouldOverrideUrlLoading
    3:3:boolean shouldOverrideUrlLoading$bridge(android.webkit.WebView,java.lang.String):0 -> shouldOverrideUrlLoading
      # {"id":"com.android.tools.r8.synthesized"}
    4:4:boolean io.flutter.plugins.urllauncher.WebViewActivity$2.shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String):0:0 -> shouldOverrideUrlLoading
    4:4:boolean shouldOverrideUrlLoading$bridge(android.webkit.WebView,java.lang.String):0 -> shouldOverrideUrlLoading
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient -> a1.c:
# {"id":"sourceFile","fileName":"WebViewActivity.java"}
    io.flutter.plugins.urllauncher.WebViewActivity this$0 -> a
    1:1:void <init>(io.flutter.plugins.urllauncher.WebViewActivity):0:0 -> <init>
    1:1:boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message):0:0 -> onCreateWindow
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1 -> R8$$REMOVED$$CLASS$$136:
# {"id":"sourceFile","fileName":"WebViewActivity.java"}
io.flutter.util.Preconditions -> R8$$REMOVED$$CLASS$$137:
# {"id":"sourceFile","fileName":"Preconditions.java"}
io.flutter.view.AccessibilityBridge$Action -> io.flutter.view.a:
# {"id":"sourceFile","fileName":"AccessibilityBridge.java"}
    int value -> a
    io.flutter.view.AccessibilityBridge$Action[] $VALUES -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Lio/flutter/view/a;"}
    1:1:void <init>(java.lang.String,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILjava/lang/String;)V"}
io.flutter.view.AccessibilityViewEmbedder -> io.flutter.view.AccessibilityViewEmbedder:
# {"id":"sourceFile","fileName":"AccessibilityViewEmbedder.java"}
    io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors -> reflectionAccessors
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/view/b;"}
    11:13:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> addChildrenToFlutterNode
    11:13:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:13:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> addChildrenToFlutterNode
    14:51:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> addChildrenToFlutterNode
    14:51:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
    14:51:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> addChildrenToFlutterNode
    52:58:void io.flutter.Log.w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> addChildrenToFlutterNode
    52:58:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
    52:58:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
    52:58:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> addChildrenToFlutterNode
    59:100:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> addChildrenToFlutterNode
    59:100:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
    59:100:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> addChildrenToFlutterNode
    101:153:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> addChildrenToFlutterNode
    21:32:java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord):0:0 -> getRecordFlutterId
    9:18:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> getRootNode
    9:18:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> getRootNode
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:18:android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect):0 -> getRootNode
    19:31:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> getRootNode
    19:31:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> getRootNode
    19:31:android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect):0 -> getRootNode
    32:43:void io.flutter.Log.w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> getRootNode
    32:43:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo):0 -> getRootNode
    32:43:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> getRootNode
    32:43:android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect):0 -> getRootNode
    44:62:android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect):0:0 -> getRootNode
    25:148:boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> requestSendAccessibilityEvent
    3:11:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> setFlutterNodeParent
    3:11:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:11:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    12:32:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> setFlutterNodeParent
    12:32:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    12:32:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    33:48:void io.flutter.Log.w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> setFlutterNodeParent
    33:48:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    33:48:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    33:48:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    49:53:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> setFlutterNodeParent
    49:53:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    49:53:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    49:53:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    49:53:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    54:125:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo):0:0 -> setFlutterNodeParent
    54:125:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    54:125:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    54:125:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    126:158:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> setFlutterNodeParent
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors -> io.flutter.view.b:
# {"id":"sourceFile","fileName":"AccessibilityViewEmbedder.java"}
    java.lang.reflect.Method getSourceNodeId -> a
    java.lang.reflect.Method getParentNodeId -> b
    java.lang.reflect.Method getRecordSourceNodeId -> c
    java.lang.reflect.Method getChildId -> d
    java.lang.reflect.Field childNodeIdsField -> e
    java.lang.reflect.Method longArrayGetIndex -> f
    7:20:void <init>():0:0 -> <init>
    7:20:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    21:28:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    21:28:void <init>():0 -> <init>
    21:28:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    29:35:void <init>():0:0 -> <init>
    29:35:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    36:50:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    36:50:void <init>():0 -> <init>
    36:50:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    51:57:void <init>():0:0 -> <init>
    51:57:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    58:69:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    58:69:void <init>():0 -> <init>
    58:69:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    70:79:void <init>():0:0 -> <init>
    70:79:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    80:87:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    80:87:void <init>():0 -> <init>
    80:87:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    88:118:void <init>():0:0 -> <init>
    88:118:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    119:137:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    119:137:void <init>():0 -> <init>
    119:137:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    3:11:java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord):0:0 -> a
    3:11:java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/b;Landroid/view/accessibility/AccessibilityRecord;)Ljava/lang/Long;"}
    12:25:java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord):0:0 -> a
    12:25:java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord):0 -> a
    26:33:void io.flutter.Log.w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> a
    26:33:java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord):0 -> a
    26:33:java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord):0 -> a
    1:1:boolean isBitSet(long,int):0:0 -> b
io.flutter.view.AccessibilityViewEmbedder$ViewAndId -> io.flutter.view.c:
# {"id":"sourceFile","fileName":"AccessibilityViewEmbedder.java"}
    android.view.View view -> a
    int id -> b
    1:8:void <init>(android.view.View,int):0:0 -> <init>
    1:8:void <init>(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;I)V"}
io.flutter.view.FlutterCallbackInformation -> io.flutter.view.FlutterCallbackInformation:
# {"id":"sourceFile","fileName":"FlutterCallbackInformation.java"}
io.flutter.view.TextureRegistry$GLTextureConsumer -> io.flutter.view.TextureRegistry$GLTextureConsumer:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
io.flutter.view.TextureRegistry$ImageConsumer -> io.flutter.view.TextureRegistry$ImageConsumer:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
io.flutter.view.TextureRegistry$ImageTextureEntry -> io.flutter.view.TextureRegistry$ImageTextureEntry:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$OnFrameConsumedListener -> io.flutter.view.d:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
io.flutter.view.TextureRegistry$OnTrimMemoryListener -> io.flutter.view.e:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
io.flutter.view.TextureRegistry$SurfaceProducer -> io.flutter.view.TextureRegistry$SurfaceProducer:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$SurfaceProducer$Callback -> io.flutter.view.f:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
io.flutter.view.TextureRegistry$SurfaceTextureEntry -> io.flutter.view.TextureRegistry$SurfaceTextureEntry:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC -> io.flutter.view.g:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$SurfaceTextureEntry;Lio/flutter/view/d;)V"}
    1:1:void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$SurfaceTextureEntry;Lio/flutter/view/e;)V"}
kotlin.collections.CollectionsKt__CollectionsKt -> b1.a:
# {"id":"sourceFile","fileName":"Collections.kt"}
    java.lang.reflect.Method androidx.core.graphics.drawable.DrawableCompat.sSetLayoutDirectionMethod -> a
    boolean androidx.core.graphics.drawable.DrawableCompat.sSetLayoutDirectionMethodFetched -> b
    java.lang.reflect.Method androidx.core.graphics.drawable.DrawableCompat.sGetLayoutDirectionMethod -> c
    boolean androidx.core.graphics.drawable.DrawableCompat.sGetLayoutDirectionMethodFetched -> d
    java.lang.reflect.Method androidx.core.widget.PopupWindowCompat.sSetWindowLayoutTypeMethod -> e
    boolean androidx.core.widget.PopupWindowCompat.sSetWindowLayoutTypeMethodAttempted -> f
    java.lang.reflect.Field androidx.core.widget.PopupWindowCompat.sOverlapAnchorField -> g
    boolean androidx.core.widget.PopupWindowCompat.sOverlapAnchorFieldAttempted -> h
    long androidx.tracing.Trace.sTraceTagApp -> i
    java.lang.reflect.Method androidx.tracing.Trace.sIsTagEnabledMethod -> j
    29:34:androidx.core.content.res.ComplexColorCompat androidx.core.content.res.ComplexColorCompat.from(int):0:0 -> A
    29:34:androidx.core.content.res.ComplexColorCompat androidx.core.content.res.TypedArrayUtils.getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int):0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;Ljava/lang/String;I)Lv/d;"}
    35:42:androidx.core.content.res.ComplexColorCompat androidx.core.content.res.TypedArrayUtils.getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int):0:0 -> A
    43:59:androidx.core.content.res.ComplexColorCompat androidx.core.content.res.ComplexColorCompat.inflate(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> A
    43:59:androidx.core.content.res.ComplexColorCompat androidx.core.content.res.TypedArrayUtils.getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int):0 -> A
    60:65:androidx.core.content.res.ComplexColorCompat androidx.core.content.res.ComplexColorCompat.from(int):0:0 -> A
    60:65:androidx.core.content.res.ComplexColorCompat androidx.core.content.res.TypedArrayUtils.getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int):0 -> A
    1:1:java.lang.String androidx.core.content.res.TypedArrayUtils.getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/TypedArray;Landroid/content/res/XmlResourceParser;Ljava/lang/String;I)Ljava/lang/String;"}
    1:1:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.getPVH(android.content.res.TypedArray,int,int,int,java.lang.String):0:0 -> C
    1:1:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> D
    1:1:java.io.File androidx.core.graphics.TypefaceCompatUtil.getTempFile(android.content.Context):0:0 -> E
    39:42:void androidx.core.text.PrecomputedTextCompat$Params$Builder.<init>(android.text.TextPaint):0:0 -> F
    39:42:androidx.core.text.PrecomputedTextCompat$Params androidx.core.widget.TextViewCompat.getTextMetricsParams(android.widget.TextView):0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/widget/TextView;)Lb0/d;"}
    43:50:androidx.core.text.PrecomputedTextCompat$Params androidx.core.widget.TextViewCompat.getTextMetricsParams(android.widget.TextView):0:0 -> F
    51:129:android.text.TextDirectionHeuristic androidx.core.widget.TextViewCompat.getTextDirectionHeuristic(android.widget.TextView):0:0 -> F
    51:129:androidx.core.text.PrecomputedTextCompat$Params androidx.core.widget.TextViewCompat.getTextMetricsParams(android.widget.TextView):0 -> F
    130:136:androidx.core.text.PrecomputedTextCompat$Params androidx.core.text.PrecomputedTextCompat$Params$Builder.build():0:0 -> F
    130:136:androidx.core.text.PrecomputedTextCompat$Params androidx.core.widget.TextViewCompat.getTextMetricsParams(android.widget.TextView):0 -> F
    1:1:boolean androidx.core.content.res.TypedArrayUtils.hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String):0:0 -> G
    1:1:boolean androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.isColorType(int):0:0 -> H
    1:1:int androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> I
    1:1:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> I
    1:1:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;Landroid/animation/ObjectAnimator;Landroid/content/res/XmlResourceParser;)Landroid/animation/ValueAnimator;"}
    2:2:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0:0 -> I
    2:2:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    3:3:int androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.inferValueTypeFromValues(android.content.res.TypedArray,int,int):0:0 -> I
    3:3:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> I
    3:3:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    4:4:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0:0 -> I
    4:4:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    5:5:int androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> I
    5:5:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> I
    5:5:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    6:6:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0:0 -> I
    6:6:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    7:7:int androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> I
    7:7:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> I
    7:7:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    8:8:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0:0 -> I
    8:8:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    9:9:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser):0:0 -> I
    9:9:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> I
    9:9:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    10:10:android.graphics.Path androidx.core.graphics.PathParser.createPathFromPathData(java.lang.String):0:0 -> I
    10:10:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser):0 -> I
    10:10:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> I
    10:10:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    11:11:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String):0:0 -> I
    11:11:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser):0 -> I
    11:11:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> I
    11:11:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    12:12:android.graphics.Path androidx.core.graphics.PathParser.createPathFromPathData(java.lang.String):0:0 -> I
    12:12:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser):0 -> I
    12:12:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> I
    12:12:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    13:13:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser):0:0 -> I
    13:13:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> I
    13:13:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    14:14:int androidx.core.content.res.TypedArrayUtils.getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> I
    14:14:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    15:15:android.view.animation.Interpolator androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat.loadInterpolator(android.content.Context,int):0:0 -> I
    15:15:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> I
    16:16:android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0:0 -> I
    1:1:java.nio.ByteBuffer androidx.core.graphics.TypefaceCompatUtil.mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/net/Uri;)Ljava/nio/MappedByteBuffer;"}
    1:1:android.content.res.TypedArray androidx.core.content.res.TypedArrayUtils.obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]):0:0 -> K
    12:15:void androidx.core.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> L
    12:15:float androidx.core.widget.EdgeEffectCompat.onPullDistance(android.widget.EdgeEffect,float,float):0 -> L
    21:33:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> M
    21:33:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/XmlResourceParser;Landroid/content/res/Resources;)Lv/f;"}
    34:143:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> M
    34:143:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> M
    34:143:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> M
    144:253:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> M
    144:253:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> M
    144:253:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> M
    144:253:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> M
    254:284:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> M
    254:284:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> M
    254:284:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> M
    285:289:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> M
    285:289:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> M
    290:297:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> M
    void androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/f;Lq/f;)V"}
    void androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/f;Ljava/lang/Thread;)V"}
    30:34:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> P
    30:34:byte[] androidx.profileinstaller.Encoding.read(java.io.InputStream,int):0 -> P
    35:36:byte[] androidx.profileinstaller.Encoding.read(java.io.InputStream,int):0:0 -> P
    34:41:int androidx.core.content.res.FontResourcesParserCompat.getType(android.content.res.TypedArray,int):0:0 -> Q
    34:41:java.util.List androidx.core.content.res.FontResourcesParserCompat.readCerts(android.content.res.Resources,int):0 -> Q
    42:57:java.util.List androidx.core.content.res.FontResourcesParserCompat.readCerts(android.content.res.Resources,int):0:0 -> Q
    58:78:java.util.List androidx.core.content.res.FontResourcesParserCompat.toByteArrayList(java.lang.String[]):0:0 -> Q
    58:78:java.util.List androidx.core.content.res.FontResourcesParserCompat.readCerts(android.content.res.Resources,int):0 -> Q
    79:88:java.util.List androidx.core.content.res.FontResourcesParserCompat.readCerts(android.content.res.Resources,int):0:0 -> Q
    89:109:java.util.List androidx.core.content.res.FontResourcesParserCompat.toByteArrayList(java.lang.String[]):0:0 -> Q
    89:109:java.util.List androidx.core.content.res.FontResourcesParserCompat.readCerts(android.content.res.Resources,int):0 -> Q
    110:120:java.util.List androidx.core.content.res.FontResourcesParserCompat.readCerts(android.content.res.Resources,int):0:0 -> Q
    54:58:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> R
    54:58:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/FileInputStream;II)[B"}
    59:81:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0:0 -> R
    82:86:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> R
    82:86:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0 -> R
    87:101:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0:0 -> R
    102:106:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> R
    102:106:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0 -> R
    107:132:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0:0 -> R
    133:137:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> R
    133:137:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0 -> R
    138:142:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0:0 -> R
    1:1:long androidx.profileinstaller.Encoding.readUInt(java.io.InputStream,int):0:0 -> S
    1:1:void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.reverse():0:0 -> T
    7:43:java.lang.Throwable kotlin.jvm.internal.Intrinsics.sanitizeStackTrace(java.lang.Throwable,java.lang.String):0:0 -> U
    7:43:java.lang.Throwable kotlin.jvm.internal.Intrinsics.sanitizeStackTrace(java.lang.Throwable):0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/NullPointerException;)V"}
    9:54:void androidx.core.widget.TextViewCompat.setFirstBaselineToTopHeight(android.widget.TextView,int):0:0 -> V
    55:60:int androidx.core.util.Preconditions.checkArgumentNonnegative(int):0:0 -> V
    55:60:void androidx.core.widget.TextViewCompat.setFirstBaselineToTopHeight(android.widget.TextView,int):0 -> V
    3:44:void androidx.core.widget.TextViewCompat.setLastBaselineToBottomHeight(android.widget.TextView,int):0:0 -> W
    45:50:int androidx.core.util.Preconditions.checkArgumentNonnegative(int):0:0 -> W
    45:50:void androidx.core.widget.TextViewCompat.setLastBaselineToBottomHeight(android.widget.TextView,int):0 -> W
    1:1:void androidx.core.widget.PopupWindowCompat.setOverlapAnchor(android.widget.PopupWindow,boolean):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/x;Z)V"}
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTint(android.graphics.drawable.Drawable,int):0:0 -> Y
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> Z
    1:13:java.lang.Object android.support.customtabs.ICustomTabsCallback$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> a
    1:13:java.lang.Object android.support.customtabs.ICustomTabsCallback$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> a
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> a0
    1:13:java.lang.Object android.support.customtabs.ICustomTabsService$_Parcel.readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> b
    1:13:java.lang.Object android.support.customtabs.ICustomTabsService$_Parcel.access$000(android.os.Parcel,android.os.Parcelable$Creator):0 -> b
    16:56:void androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence):0:0 -> b0
    16:56:void androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence):0 -> b0
    4:15:void android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel.writeTypedObject(android.os.Parcel,android.os.Parcelable,int):0:0 -> c
    4:15:void android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel.access$100(android.os.Parcel,android.os.Parcelable,int):0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;Landroid/os/Bundle;)V"}
    1:1:void androidx.core.content.res.FontResourcesParserCompat.skip(org.xmlpull.v1.XmlPullParser):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/XmlResourceParser;)V"}
    18:19:char androidx.core.graphics.PathParser$PathDataNode.access$000(androidx.core.graphics.PathParser$PathDataNode):0:0 -> d
    18:19:boolean androidx.core.graphics.PathParser.canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lw/d;[Lw/d;)Z"}
    20:21:boolean androidx.core.graphics.PathParser.canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> d
    22:25:char androidx.core.graphics.PathParser$PathDataNode.access$000(androidx.core.graphics.PathParser$PathDataNode):0:0 -> d
    22:25:boolean androidx.core.graphics.PathParser.canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0 -> d
    26:27:float[] androidx.core.graphics.PathParser$PathDataNode.access$100(androidx.core.graphics.PathParser$PathDataNode):0:0 -> d
    26:27:boolean androidx.core.graphics.PathParser.canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0 -> d
    28:28:boolean androidx.core.graphics.PathParser.canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> d
    29:30:float[] androidx.core.graphics.PathParser$PathDataNode.access$100(androidx.core.graphics.PathParser$PathDataNode):0:0 -> d
    29:30:boolean androidx.core.graphics.PathParser.canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0 -> d
    31:41:boolean androidx.core.graphics.PathParser.canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> d
    void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.start() -> d0
    1:1:boolean androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.canReverse():0:0 -> e
    void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.stop() -> e0
    boolean androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g;Lq/c;)Z"}
    14:21:void androidx.core.graphics.drawable.WrappedDrawableApi21.<init>(android.graphics.drawable.Drawable):0:0 -> f0
    14:21:android.graphics.drawable.Drawable androidx.core.graphics.drawable.DrawableCompat.wrap(android.graphics.drawable.Drawable):0 -> f0
    boolean androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:android.view.ActionMode$Callback androidx.core.widget.TextViewCompat.wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback):0:0 -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ActionMode$Callback;Landroid/widget/TextView;)Landroid/view/ActionMode$Callback;"}
    boolean androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g;Lq/f;Lq/f;)Z"}
    1:1:void androidx.profileinstaller.Encoding.writeUInt(java.io.OutputStream,long,int):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;JI)V"}
    4:12:void kotlin.jvm.internal.Intrinsics.throwJavaNpe(java.lang.String):0:0 -> i
    4:12:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object,java.lang.String):0 -> i
    1:1:void androidx.profileinstaller.Encoding.writeUInt16(java.io.OutputStream,int):0:0 -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;I)V"}
    1:1:void kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object,java.lang.String):0:0 -> j
    3:4:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0:0 -> k
    3:4:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> k
    5:89:java.lang.String kotlin.jvm.internal.Intrinsics.createParameterIsNullExceptionMessage(java.lang.String):0:0 -> k
    5:89:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0 -> k
    5:89:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> k
    90:97:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0:0 -> k
    90:97:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> k
    1:1:void androidx.core.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):0:0 -> l
    1:1:byte[] androidx.profileinstaller.Encoding.compress(byte[]):0:0 -> m
    1:1:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0:0 -> n
    1:1:int androidx.recyclerview.widget.ScrollbarHelper.computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean):0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;Ln0/v;Landroid/view/View;Landroid/view/View;Ln0/g0;Z)I"}
    2:2:int androidx.recyclerview.widget.RecyclerView$LayoutParams.getViewLayoutPosition():0:0 -> n
    2:2:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0 -> n
    2:2:int androidx.recyclerview.widget.ScrollbarHelper.computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean):0 -> n
    1:1:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0:0 -> o
    1:1:int androidx.recyclerview.widget.ScrollbarHelper.computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean):0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/q0;Ln0/v;Landroid/view/View;Landroid/view/View;Ln0/g0;Z)I"}
    2:2:int androidx.recyclerview.widget.RecyclerView$LayoutParams.getViewLayoutPosition():0:0 -> o
    2:2:int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View):0 -> o
    2:2:int androidx.recyclerview.widget.ScrollbarHelper.computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean):0 -> o
    1:1:float[] androidx.core.graphics.PathParser.copyOfRange(float[],int,int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"([FI)[F"}
    1:1:boolean androidx.core.graphics.TypefaceCompatUtil.copyToFile(java.io.File,android.content.res.Resources,int):0:0 -> q
    1:1:boolean androidx.core.graphics.TypefaceCompatUtil.copyToFile(java.io.File,java.io.InputStream):0:0 -> r
    1:1:android.animation.ObjectAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser):0:0 -> s
    1:1:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/content/res/XmlResourceParser;Landroid/util/AttributeSet;Landroid/animation/AnimatorSet;I)Landroid/animation/Animator;"}
    2:2:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0:0 -> s
    3:3:int androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> s
    3:3:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    4:4:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0:0 -> s
    5:5:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0:0 -> s
    5:5:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    6:6:int androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> s
    6:6:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    6:6:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    7:7:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> s
    7:7:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    7:7:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    8:8:int androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser):0:0 -> s
    8:8:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    8:8:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    8:8:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    9:9:android.util.TypedValue androidx.core.content.res.TypedArrayUtils.peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> s
    9:9:int androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser):0 -> s
    9:9:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    9:9:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    9:9:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    10:10:int androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser):0:0 -> s
    10:10:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    10:10:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    10:10:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    11:11:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> s
    11:11:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    11:11:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    12:12:android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0:0 -> s
    12:12:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    12:12:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    12:12:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    13:13:float androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> s
    13:13:android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0 -> s
    13:13:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    13:13:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    13:13:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    14:14:android.util.TypedValue androidx.core.content.res.TypedArrayUtils.peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> s
    14:14:android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0 -> s
    14:14:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    14:14:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    14:14:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    15:15:android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0:0 -> s
    15:15:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    15:15:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    15:15:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    16:16:int androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> s
    16:16:android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0 -> s
    16:16:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    16:16:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    16:16:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    17:17:android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0:0 -> s
    17:17:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    17:17:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    17:17:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    18:18:float androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> s
    18:18:android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0 -> s
    18:18:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    18:18:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    18:18:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    19:19:android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0:0 -> s
    19:19:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    19:19:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    19:19:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    20:20:int androidx.core.content.res.TypedArrayUtils.getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> s
    20:20:android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0 -> s
    20:20:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    20:20:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    20:20:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    21:21:android.view.animation.Interpolator androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat.loadInterpolator(android.content.Context,int):0:0 -> s
    21:21:android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0 -> s
    21:21:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    21:21:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    21:21:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    22:22:android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0:0 -> s
    22:22:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    22:22:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    22:22:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    23:23:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> s
    23:23:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    23:23:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    24:24:android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createNewKeyframe(android.animation.Keyframe,float):0:0 -> s
    24:24:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    24:24:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    24:24:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    25:25:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> s
    25:25:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    25:25:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    26:26:android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createNewKeyframe(android.animation.Keyframe,float):0:0 -> s
    26:26:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    26:26:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    26:26:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    27:27:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> s
    27:27:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    27:27:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    28:28:void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.distributeKeyframes(android.animation.Keyframe[],float,int,int):0:0 -> s
    28:28:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> s
    28:28:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    28:28:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    29:29:android.animation.PropertyValuesHolder androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> s
    29:29:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> s
    29:29:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    30:30:android.animation.PropertyValuesHolder[] androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0:0 -> s
    30:30:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> s
    31:31:android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0:0 -> s
    17:54:int androidx.core.graphics.PathParser.nextStart(java.lang.String,int):0:0 -> t
    17:54:androidx.core.graphics.PathParser$PathDataNode[] androidx.core.graphics.PathParser.createNodesFromPathData(java.lang.String):0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)[Lw/d;"}
    55:68:androidx.core.graphics.PathParser$PathDataNode[] androidx.core.graphics.PathParser.createNodesFromPathData(java.lang.String):0:0 -> t
    69:106:float[] androidx.core.graphics.PathParser.getFloats(java.lang.String):0:0 -> t
    69:106:androidx.core.graphics.PathParser$PathDataNode[] androidx.core.graphics.PathParser.createNodesFromPathData(java.lang.String):0 -> t
    107:160:void androidx.core.graphics.PathParser.extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult):0:0 -> t
    107:160:float[] androidx.core.graphics.PathParser.getFloats(java.lang.String):0 -> t
    107:160:androidx.core.graphics.PathParser$PathDataNode[] androidx.core.graphics.PathParser.createNodesFromPathData(java.lang.String):0 -> t
    161:216:float[] androidx.core.graphics.PathParser.getFloats(java.lang.String):0:0 -> t
    161:216:androidx.core.graphics.PathParser$PathDataNode[] androidx.core.graphics.PathParser.createNodesFromPathData(java.lang.String):0 -> t
    217:220:androidx.core.graphics.PathParser$PathDataNode[] androidx.core.graphics.PathParser.createNodesFromPathData(java.lang.String):0:0 -> t
    221:239:void androidx.core.graphics.PathParser.addNode(java.util.ArrayList,char,float[]):0:0 -> t
    221:239:androidx.core.graphics.PathParser$PathDataNode[] androidx.core.graphics.PathParser.createNodesFromPathData(java.lang.String):0 -> t
    240:252:androidx.core.graphics.PathParser$PathDataNode[] androidx.core.graphics.PathParser.createNodesFromPathData(java.lang.String):0:0 -> t
    253:264:void androidx.core.graphics.PathParser.addNode(java.util.ArrayList,char,float[]):0:0 -> t
    253:264:androidx.core.graphics.PathParser$PathDataNode[] androidx.core.graphics.PathParser.createNodesFromPathData(java.lang.String):0 -> t
    265:272:androidx.core.graphics.PathParser$PathDataNode[] androidx.core.graphics.PathParser.createNodesFromPathData(java.lang.String):0:0 -> t
    1:1:androidx.core.graphics.PathParser$PathDataNode[] androidx.core.graphics.PathParser.deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lw/d;)[Lw/d;"}
    1:1:boolean androidx.profileinstaller.BenchmarkOperation.deleteFilesRecursively(java.io.File):0:0 -> v
    1:1:int androidx.core.content.res.TypedArrayUtils.getAttr(android.content.Context,int,int):0:0 -> w
    9:13:android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> x
    9:13:android.content.res.ColorStateList androidx.core.content.ContextCompat.getColorStateList(android.content.Context,int):0 -> x
    14:84:android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int):0:0 -> x
    14:84:android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> x
    14:84:android.content.res.ColorStateList androidx.core.content.ContextCompat.getColorStateList(android.content.Context,int):0 -> x
    85:103:android.util.TypedValue androidx.core.content.res.ResourcesCompat.getTypedValue():0:0 -> x
    85:103:boolean androidx.core.content.res.ResourcesCompat.isColorInt(android.content.res.Resources,int):0 -> x
    85:103:android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> x
    85:103:android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> x
    85:103:android.content.res.ColorStateList androidx.core.content.ContextCompat.getColorStateList(android.content.Context,int):0 -> x
    104:117:boolean androidx.core.content.res.ResourcesCompat.isColorInt(android.content.res.Resources,int):0:0 -> x
    104:117:android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> x
    104:117:android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> x
    104:117:android.content.res.ColorStateList androidx.core.content.ContextCompat.getColorStateList(android.content.Context,int):0 -> x
    118:136:android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> x
    118:136:android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> x
    118:136:android.content.res.ColorStateList androidx.core.content.ContextCompat.getColorStateList(android.content.Context,int):0 -> x
    137:157:android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> x
    137:157:android.content.res.ColorStateList androidx.core.content.ContextCompat.getColorStateList(android.content.Context,int):0 -> x
    158:159:android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int):0:0 -> x
    158:159:android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> x
    158:159:android.content.res.ColorStateList androidx.core.content.ContextCompat.getColorStateList(android.content.Context,int):0 -> x
    1:1:float androidx.core.widget.EdgeEffectCompat.getDistance(android.widget.EdgeEffect):0:0 -> y
    1:1:int androidx.core.graphics.drawable.DrawableCompat.getLayoutDirection(android.graphics.drawable.Drawable):0:0 -> z
kotlin.collections.EmptyIterator -> b1.b:
# {"id":"sourceFile","fileName":"Collections.kt"}
    kotlin.collections.EmptyIterator INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb1/b;"}
    3:8:void kotlin.collections.EmptyIterator.<init>():0:0 -> <clinit>
    3:8:void <clinit>():0 -> <clinit>
    1:1:void add(java.lang.Object):0:0 -> add
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:boolean hasPrevious():0:0 -> hasPrevious
    1:6:java.lang.Void kotlin.collections.EmptyIterator.next():0:0 -> next
    1:6:java.lang.Object next():0 -> next
    1:1:int nextIndex():0:0 -> nextIndex
    1:6:java.lang.Void kotlin.collections.EmptyIterator.previous():0:0 -> previous
    1:6:java.lang.Object previous():0 -> previous
    1:1:int previousIndex():0:0 -> previousIndex
    1:1:void remove():0:0 -> remove
    1:1:void set(java.lang.Object):0:0 -> set
kotlin.collections.EmptyList -> b1.c:
# {"id":"sourceFile","fileName":"Collections.kt"}
    kotlin.collections.EmptyList INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb1/c;"}
    3:8:void kotlin.collections.EmptyList.<init>():0:0 -> <clinit>
    3:8:void <clinit>():0 -> <clinit>
    1:1:void add(int,java.lang.Object):0:0 -> add
    2:2:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    11:14:boolean kotlin.collections.EmptyList.contains(java.lang.Void):0:0 -> contains
    11:14:boolean contains(java.lang.Object):0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:25:java.lang.Void kotlin.collections.EmptyList.get(int):0:0 -> get
    1:25:java.lang.Object get(int):0 -> get
    1:1:int hashCode():0:0 -> hashCode
    11:14:int kotlin.collections.EmptyList.indexOf(java.lang.Void):0:0 -> indexOf
    11:14:int indexOf(java.lang.Object):0 -> indexOf
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    11:14:int kotlin.collections.EmptyList.lastIndexOf(java.lang.Void):0:0 -> lastIndexOf
    11:14:int lastIndexOf(java.lang.Object):0 -> lastIndexOf
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:java.lang.Object remove(int):0:0 -> remove
    2:2:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:int size():0:0 -> size
    1:1:java.util.List subList(int,int):0:0 -> subList
    1:1:java.lang.Object[] kotlin.jvm.internal.CollectionToArray.toArray(java.util.Collection):0:0 -> toArray
    1:1:java.lang.Object[] toArray():0 -> toArray
    2:2:java.lang.Object[] kotlin.jvm.internal.CollectionToArray.toArray(java.util.Collection,java.lang.Object[]):0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0 -> toArray
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.CollectionToArray -> c1.a:
# {"id":"sourceFile","fileName":"CollectionToArray.kt"}
    java.lang.Object[] EMPTY -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlin.jvm.internal.Intrinsics -> R8$$REMOVED$$CLASS$$138:
# {"id":"sourceFile","fileName":"Intrinsics.java"}
kotlinx.coroutines.flow.StateFlowImpl -> d1.a:
# {"id":"sourceFile","fileName":"StateFlow.kt"}
    int sequence -> b
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:6:void kotlinx.coroutines.flow.internal.AbstractSharedFlow.<init>():0:0 -> <init>
    1:6:void <init>(java.lang.Object):0 -> <init>
kotlinx.coroutines.flow.StateFlowKt -> R8$$REMOVED$$CLASS$$139:
# {"id":"sourceFile","fileName":"StateFlow.kt"}
kotlinx.coroutines.flow.internal.NullSurrogateKt -> e1.a:
# {"id":"sourceFile","fileName":"NullSurrogate.kt"}
    kotlinx.coroutines.internal.Symbol NULL -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/a;"}
    1:12:void kotlinx.coroutines.flow.internal.NullSurrogateKt.<clinit>():0:0 -> <clinit>
    1:12:void e1.NullSurrogateKt.$r8$clinit$synthetic():0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
kotlinx.coroutines.internal.Symbol -> R8$$REMOVED$$CLASS$$140:
# {"id":"sourceFile","fileName":"Symbol.kt"}
